-- version:0.8 -- startdate:04/04/2014 -- enddate:04/04/2014 --issue:797 --commentno:#4 --desc:REPLACED TABLE NAME AND HEADER NAME  BY SASIKALA.D
-- version:0.7 -- startdate:03/04/2014 -- enddate:03/04/2014 --issue:535 --commentno:#296 --desc:NEED TO DELETE UNIT ACESS DTS TABLE ALSO IF NO TRANSACTION OF PURCHASE CARD in SP_BIZDLY_PURCHASE_NEW_CARD_DELETE SP BY PUNI
-- version:0.6 -- startdate:28/02/2014 -- enddate:28/02/2014 --issue:754 --commentno:#36 --desc:changing of datatype and value of userstamp -- doneby:Bhavani.R
-- version:0.5 -- startdate:27/02/2014 -- enddate:27/02/2014 --issue:754 --commentno:#22 --desc:changing of userstamp as uld_id as column header and changing the data type for userstamp -- doneby:Bhavani.R
-- version:0.4 -- sdate:19/02/2014 -- edate:19/02/2014 --issue:535 --desc:USING SINGLE TABLE DELETION SP -- doneby:RL
-- version:0.3 -- sdate:13/02/2014 -- edate:13/02/2014 --issue:535 --commentno:171 --desc:REMOVE ALL TYPE EXCEPT PURCHASE CARD -- doneby:RL
-- version:0.2 -- sdate:08/02/2014 -- edate:08/02/2014 --issue:535 --commentno:162,165 -- doneby:RL
-- version:0.1 -- sdate:05/02/2014 -- edate:06/02/2014 -- desc:SP TO UPDATE TICKLER HISTORY WHILE DELETION FOR BIZ DAILY SEARCH -- doneby:RL
DROP PROCEDURE IF EXISTS SP_BIZDLY_PURCHASE_NEW_CARD_CHECK_TRANSACTION;
CREATE PROCEDURE SP_BIZDLY_PURCHASE_NEW_CARD_CHECK_TRANSACTION(
IN TABLE_ID INTEGER,
IN DELETING_ROWID INTEGER,
OUT FLAG INTEGER)
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK; 
	END;
	START TRANSACTION;
	SET FLAG=0;
	IF(TABLE_ID=59)THEN
--condition for checking the EPNC_NUMBER(access_cardno)for passing EPNCID not exists in CUSTOMER_ACCESS_CARD_DETAILS
		IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=
		(SELECT EPNC_NUMBER FROM EXPENSE_PURCHASE_NEW_CARD WHERE EPNC_ID = DELETING_ROWID)))THEN
			IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_ENTRY_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=
			(SELECT EPNC_NUMBER FROM EXPENSE_PURCHASE_NEW_CARD WHERE EPNC_ID = DELETING_ROWID)))THEN
--condition for checking the EPNC_NUMBER(access_cardno)for passing EPNCID not exists in CUSTOMER_LP_DETAILS
				IF NOT EXISTS(SELECT UASD_ID FROM CUSTOMER_LP_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=
				(SELECT EPNC_NUMBER FROM EXPENSE_PURCHASE_NEW_CARD WHERE EPNC_ID = DELETING_ROWID)))THEN
					SET FLAG = 1;
				END IF;
			END IF;
		END IF;
	END IF;
	COMMIT;
END;
				
--TICKLER PART
DROP PROCEDURE IF EXISTS SP_BIZDLY_PURCHASE_NEW_CARD_DELETE;
CREATE PROCEDURE SP_BIZDLY_PURCHASE_NEW_CARD_DELETE(
IN TABLE_ID INTEGER,
IN DELETING_ROWID INTEGER,
IN USERSTAMP VARCHAR(50),
OUT FLAG INTEGER)
	BEGIN
		DECLARE RETURNFLAG INTEGER;
		DECLARE USERSTAMP_ID INTEGER(2);
		DECLARE EXIT HANDLER FOR SQLEXCEPTION
		BEGIN
			SET FLAG=0;
			ROLLBACK;			
		END;
		START TRANSACTION;
		SET FLAG=0;
		CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
        SET USERSTAMP_ID = (SELECT @ULDID);
		CALL SP_BIZDLY_PURCHASE_NEW_CARD_CHECK_TRANSACTION(TABLE_ID,DELETING_ROWID,@FLAG);
		SET RETURNFLAG=@FLAG;
		IF RETURNFLAG=1 THEN
			CALL SP_SINGLE_TABLE_ROW_DELETION(6,((SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=
			(SELECT EPNC_NUMBER FROM EXPENSE_PURCHASE_NEW_CARD WHERE EPNC_ID = DELETING_ROWID))),USERSTAMP,@UNITFLAG);
			CALL SP_SINGLE_TABLE_ROW_DELETION(TABLE_ID,DELETING_ROWID,USERSTAMP,@SUCCESSFLAG); 			
			SET @RETURNFLAG=@SUCCESSFLAG;
			IF @SUCCESSFLAG=1 AND @UNITFLAG=1 THEN
				SET FLAG=1;
			END IF;
		END IF;
	COMMIT;
END;


