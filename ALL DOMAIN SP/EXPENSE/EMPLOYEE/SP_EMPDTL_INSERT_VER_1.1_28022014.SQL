-->VERSION 1.1-->START DATE:28/02/2014 END DATE:28/02/2014-->ISSUENO:754-->ADD DECLEAR USERSTAMP VALUES--> BY BALAJI
-->version 1.0 -->start date:27/02/2014 end date:27/02/2014 -->issueno:754  -->description:REPLACE USERSTAMP VARCAHR TO USERSTAMP INTEGER -->BY BALAJI.R
-->version 0.9 -->start date:26/02/2014 end date:26/02/2014 -->issueno:750  -->description:UPDATING USERSTAMP TO ULD_ID -->created by:SAFI.M
--VERSION 0.8 --startdate:18/02/2014 --endate :18/02/2014 --doneby:Bhavani --comment no:33 --desc:Implementation of flag for success message in SP_EMPDTL_INSERT. 
--VERSION 0.7 -startdate -29/11/2013 - endate :29/11/2013 - doneby:dinesh --commant no:665 --desc:SP_EMPDTL_INERT --> checking error for EMP_ID can not be null, when same record insert error occcure, clear error using order by and limit condition .......
--VERSION 0.6 -startdate -27/11/2013 - endate :28/11/2013 - doneby:dinesh --commant no:661 --desc:SP_EMPDTL_INERT --> SET FLAG VARIABLE AND INSERT CARD_NO NULL AND IF NOT EXISTS UASD_ID  FROM EMP_CARD_DETAILS ..
--version 0.5 --startdate-26/11/2013 --endate :26/11/2013 --doneby:dinesh --commant no:661 --desc:SP FOR SP_EMPDTL_INSERT -> CHECKING ERROR for dummy record no insertion..
--version 0.4 --startdate-23/11/2013 --endate :25/11/2013 --doneby:dinesh --commant no:661 --desc:SP FOR SP_EMPDTL_INSERT -> checking error for EMPLOYEE_CARD_DETAILS INSERTION (EMP_ID CAN NOT BE NULL)..ASSIGN FLAG VARIABLE(CARD) and INSERT MULTIPLE USERACCESSCARD_ID AND EMPID FROM EMPLOYEE_CARD_DETAILS AND EMPLOYEE_DETAILS
--version 0.3 --startdate:21/11/2013 --endate :21/11/2013  --doneby:dinesh -->issueno:535 commentno:#101 --desc:SP FOR  SP_EMPDTL_INSERT -> INSERT MULTIPLE USERACCESSCARD_ID AND EMPID FROM EMPLOYEE_CARD_DETAILS AND EMPLOYEE_DETAILS   
--version 0.2 --startdate:20/11/2013 --endate :20/11/2013  --doneby:dinesh -->issueno:253 commentno:#111 --desc:SP FOR SP_EMPDTL_INSERT changed DATA TYPE (INTEGER (7)) FOR CARD_NO
--version 0.1 --startdate:13/11/2013 --endate:13/11/2013 --desc:SP FOR SP_EMPDTL_INSERT --doneby:dinesh



DROP PROCEDURE IF EXISTS SP_EMPDTL_INSERT;
CREATE PROCEDURE SP_EMPDTL_INSERT(IN FIRST_NAME CHAR(30),
 IN LAST_NAME CHAR(30),
 IN DESIGNATION TEXT,
 IN MOBILE  VARCHAR(10),
 IN EMAIL VARCHAR(40),
 IN COMMENTS TEXT,
 IN USERSTAMP varchar(50),
 IN CARD_NO TEXT,
 OUT EMP_SUCCESSFLAG INTEGER)
BEGIN

    DECLARE TEMP_ACCESS_CARD TEXT;
    DECLARE ACCESS_CARD_NO INTEGER(7);
    DECLARE ACCESS_POSITION INTEGER;
    DECLARE ACCESS_LOCATION INTEGER;
    DECLARE ACCESS_LENGTH INTEGER;
    DECLARE TEMP_ACCESS_CARD_FLAG TEXT;
    DECLARE ACCESS_CARD_FLAG INTEGER(7);
    DECLARE ACCESS_POSITION_FLAG INTEGER;
    DECLARE ACCESS_LOCATION_FLAG INTEGER;
    DECLARE ACCESS_LENGTH_FLAG INTEGER;
    DECLARE USERSTAMP_ID INTEGER(2);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET EMP_SUCCESSFLAG=0;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID = (SELECT @ULDID);
-- set null for non mandatory fields
	IF EMAIL = '' THEN
		SET EMAIL=NULL;
	END IF;
	IF COMMENTS = '' THEN
		SET COMMENTS=NULL;
	END IF;
	IF CARD_NO='' THEN
		SET CARD_NO=NULL;
	END IF;

-- insert query for EMPLOYEE_DETAILS when passing CARD_NO=null
	IF (FIRST_NAME IS NOT NULL AND LAST_NAME IS NOT NULL AND DESIGNATION IS NOT NULL AND MOBILE IS NOT NULL AND USERSTAMP_ID IS NOT NULL ) THEN
	IF CARD_NO IS NULL THEN
		INSERT INTO EMPLOYEE_DETAILS(EMP_FIRST_NAME,EMP_LAST_NAME,ECN_ID,EMP_MOBILE,EMP_EMAIL,EMP_COMMENTS,ULD_ID)
                    VALUES (FIRST_NAME,LAST_NAME,(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=DESIGNATION AND CGN_ID=35),MOBILE,EMAIL,COMMENTS,USERSTAMP_ID);
		SET EMP_SUCCESSFLAG=1;

	END IF;

-- insert query for EMPLOYEE_DETAILS and EMPLOYEE_CARD_DETAILS , CARD_NO=NOTNULL AND exiting UASD_ID FROM EMPLOYEE_CARD_DETAILS
	IF(CARD_NO IS NOT NULL) THEN

        	SET TEMP_ACCESS_CARD=CARD_NO;
        	SET ACCESS_LENGTH=1;
        loop_label:  LOOP
            SET ACCESS_POSITION=(SELECT LOCATE(',', TEMP_ACCESS_CARD,ACCESS_LENGTH));
            IF ACCESS_POSITION<=0 THEN
                SET ACCESS_CARD_NO=TEMP_ACCESS_CARD;
            ELSE
                SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_LENGTH,ACCESS_POSITION-1) INTO ACCESS_CARD_NO;
                SET TEMP_ACCESS_CARD=(SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_POSITION+1));
            END IF;
            IF EXISTS (SELECT UASD_ID FROM EMPLOYEE_CARD_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=ACCESS_CARD_NO)) THEN
                SET EMP_SUCCESSFLAG=1;
            END IF;

            IF ACCESS_POSITION<=0 THEN
                LEAVE  loop_label;
            END IF;
        END LOOP;
END IF;
 
	IF EMP_SUCCESSFLAG!=1 THEN
		INSERT INTO EMPLOYEE_DETAILS (EMP_FIRST_NAME,EMP_LAST_NAME,ECN_ID,EMP_MOBILE,EMP_EMAIL,EMP_COMMENTS,ULD_ID) VALUES (FIRST_NAME,LAST_NAME,(SELECT ECN_ID
		FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=DESIGNATION AND CGN_ID=35),MOBILE,EMAIL,COMMENTS,USERSTAMP_ID);
		SET EMP_SUCCESSFLAG=1;
		SET TEMP_ACCESS_CARD_FLAG =CARD_NO;
        	SET ACCESS_LENGTH_FLAG=1;
        loop_label:  LOOP
            	SET ACCESS_POSITION_FLAG=(SELECT LOCATE(',', TEMP_ACCESS_CARD_FLAG,ACCESS_LENGTH_FLAG));
            IF ACCESS_POSITION_FLAG<=0 THEN
                SET ACCESS_CARD_FLAG=TEMP_ACCESS_CARD_FLAG;
            ELSE
                SELECT SUBSTRING(TEMP_ACCESS_CARD_FLAG,ACCESS_LENGTH_FLAG,ACCESS_POSITION_FLAG-1) INTO ACCESS_CARD_FLAG;
                SET TEMP_ACCESS_CARD_FLAG=(SELECT SUBSTRING(TEMP_ACCESS_CARD_FLAG,ACCESS_POSITION_FLAG+1));
            END IF;
                     
            	INSERT INTO EMPLOYEE_CARD_DETAILS (EMP_ID,UASD_ID) VALUES ((SELECT EMP_ID FROM EMPLOYEE_DETAILS ORDER BY EMP_ID DESC LIMIT 1),( SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=ACCESS_CARD_FLAG));
            	SET EMP_SUCCESSFLAG=1;
            
            IF ACCESS_POSITION_FLAG<=0 THEN
                LEAVE  loop_label;
            END IF;
        END LOOP;    
	END IF;
	END IF;
	COMMIT;
END;
