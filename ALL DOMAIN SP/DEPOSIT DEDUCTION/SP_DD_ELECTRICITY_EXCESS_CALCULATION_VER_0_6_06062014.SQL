-- version --> 0.5 startdate -->26/04/2014 enddate --> 30/04/2014 description --> DONE DYNAMIC TEMP TABLE -->SARADAMBAL -->issue :817 
-- version --> 0.4 startdate -->17/04/2014 enddate --> 21/04/2014 description --> CLEARED ISSUE IN ELECTRICITY CAP -->SARADAMBAL -->issue :656 #13
-- version --> 0.3 startdate -->26/11/2013 enddate --> 27/11/2013 description --> USED DDRECVER INSTEAD OF PDPRECVER HEADER IN TEMP TABLE,ADDED DDCHARGES,FIXED NULL IN THE SUBTOTAL AND REFUND AMOUNTS,ADDED RECVER IN ELECTRICITY EXCESS,UNIT EXPENSE,CHANGED THE DATE FORMAT FOR ELECTRICITY EXCESS,HEADER ADDED FOR ELECTRICITY CAP AND IMPLEMENTED THE CAP FROM THE CUSTOMER. created by -->CL -->issue :656
-- version --> 0.2 startdate -->09/11/2013 enddate --> 10/11/2013 description --> ADDED CALCULATIONS FOR RETURN INVOICE AMT WITH THE DIV AMT created by -->CL -->issue :493
-- version --> 0.1 startdate -->21/10/2013 enddate --> 08/11/2013 description --> SP for the electricity excess calculation part created by -->CL -->issue :493
DROP PROCEDURE IF EXISTS SP_DD_ELECTRICITY_EXCESS_CALCULATION;
CREATE PROCEDURE SP_DD_ELECTRICITY_EXCESS_CALCULATION(
	IN DD_UNIT_NO INTEGER(4),
	IN DD_CUSTOMER_ID INTEGER,
	IN DD_REC_VER INTEGER,
	IN DD_STARTDATE DATE,
	IN DD_ENDDATE DATE,
	IN TEMP_DD_CALCULATION TEXT)
BEGIN
DECLARE NO_OF_DIV INTEGER;
DECLARE ACCESS_INCREMENT_ID INTEGER;
DECLARE ELECTRICITY_CAP DECIMAL(7,2) DEFAULT NULL;
DECLARE DD_EEID INTEGER;
DECLARE DD_INVOICE_DATE DATE;
DECLARE DD_FROM_PERIOD DATE;
DECLARE DD_TO_PERIOD DATE;
DECLARE DD_AMOUNT DECIMAL(7,2);
DECLARE DD_DIVAMOUNT DECIMAL(7,2);
DECLARE DONE INT DEFAULT FALSE;
DECLARE DDINVDATESTR TEXT;
DECLARE ELECTRICITY_CURSOR CURSOR FOR SELECT EE.EE_ID,EE.EE_INVOICE_DATE,EE.EE_FROM_PERIOD,EE.EE_TO_PERIOD,EE.EE_AMOUNT FROM UNIT U,EXPENSE_DETAIL_ELECTRICITY EDE,EXPENSE_ELECTRICITY EE WHERE (U.UNIT_ID=EDE.UNIT_ID) AND (U.UNIT_NO=DD_UNIT_NO) AND (EDE.EDE_ID=EE.EDE_ID) AND (EE.EE_INVOICE_DATE BETWEEN DD_STARTDATE AND DD_ENDDATE) ORDER BY EE.EE_INVOICE_DATE ASC;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
--  query for rollback command
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
	ROLLBACK; 
END;
START TRANSACTION;
OPEN ELECTRICITY_CURSOR;
ELECTRICITY_LOOP: LOOP
	FETCH ELECTRICITY_CURSOR INTO DD_EEID,DD_INVOICE_DATE,DD_FROM_PERIOD,DD_TO_PERIOD,DD_AMOUNT;
	IF DONE THEN
		LEAVE ELECTRICITY_LOOP;
	END IF;
	IF NOT EXISTS(SELECT CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=5) THEN
		SET ELECTRICITY_CAP=0;
	ELSE
		SET ELECTRICITY_CAP=(SELECT CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=5);
	END IF;
	IF DD_AMOUNT > ELECTRICITY_CAP AND ELECTRICITY_CAP !=0 THEN	
	
		SET @CREATE_ACCESS_INCREMENT_ID= (SELECT CONCAT('SELECT DDNOOFDIVISION INTO @ACC_INC_ID FROM ',TEMP_DD_CALCULATION ,' WHERE DDCUSTOMERID=',DD_CUSTOMER_ID,' AND DDRECVER=',DD_REC_VER));
        PREPARE CREATE_ACCESS_INCREMENT_ID_STMT FROM @CREATE_ACCESS_INCREMENT_ID;
        EXECUTE CREATE_ACCESS_INCREMENT_ID_STMT;
        SET ACCESS_INCREMENT_ID=@ACC_INC_ID;   
             
  IF ACCESS_INCREMENT_ID IS NOT NULL THEN
                       SET @SET_NO_OF_DIV=(SELECT CONCAT('SELECT DDNOOFDIVISION INTO @NOOFDIV FROM ',TEMP_DD_CALCULATION ,' WHERE DDCUSTOMERID=',DD_CUSTOMER_ID,' AND DDRECVER=',DD_REC_VER));
                       PREPARE SET_NO_OF_DIV_STMT FROM @SET_NO_OF_DIV;
                       EXECUTE SET_NO_OF_DIV_STMT;
                       SET NO_OF_DIV=@NOOFDIV ;
               ELSE
			           SET @SET_NO_OF_DIV=(SELECT CONCAT('SELECT DDNOOFDIVISION INTO @NOOFDIV FROM ',TEMP_DD_CALCULATION ,' WHERE DDNOOFDIVISION IS NOT NULL'));
                       PREPARE SET_NO_OF_DIV_STMT FROM @SET_NO_OF_DIV;
                       EXECUTE SET_NO_OF_DIV_STMT;
                       SET NO_OF_DIV=@NOOFDIV ;
               END IF;

		IF NO_OF_DIV IS NOT NULL AND NO_OF_DIV!=0 THEN
			SET DD_DIVAMOUNT=((DD_AMOUNT-ELECTRICITY_CAP)/NO_OF_DIV);
		END IF;
	ELSE
		SET DD_DIVAMOUNT=0;
	END IF;
	SET DDINVDATESTR = CONCAT((SELECT DATE_FORMAT(DD_INVOICE_DATE,'%b - %Y')),'  (',(SELECT DATE_FORMAT(DD_FROM_PERIOD,'%b %d')),' - ',(SELECT DATE_FORMAT(DD_TO_PERIOD,'%b %d')),')');
	--      INSERT QUERY FOR DYNAMIC TEMP TABLE
			SET @DD_CALC_INSERT_ELECTRICITY=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDRECVER, DDEEAMOUNT, DDEEDIVAMOUNT, DDEEINVOICEDATE)  VALUES(',DD_REC_VER,',',DD_AMOUNT,',',DD_DIVAMOUNT,',','"',DDINVDATESTR,'"',')'));
 			
			PREPARE DD_CALC_INSERT_ELECTRICITY_STMT FROM @DD_CALC_INSERT_ELECTRICITY;
			EXECUTE DD_CALC_INSERT_ELECTRICITY_STMT;
	SET ELECTRICITY_CAP=NULL;
END LOOP;

CLOSE ELECTRICITY_CURSOR;
IF NOT EXISTS(SELECT CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=5) THEN
	SET ELECTRICITY_CAP=0;
ELSE
	SET ELECTRICITY_CAP=(SELECT CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=5);
END IF;
SET @ELEC_CAP=ELECTRICITY_CAP;
--     INSERT QUERY FOR DYNAMIC TEMP TABLE
			SET @DD_CALC_INSERT_ELECTRICITY_CAP=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDRECVER, DDEECAP) VALUES(',DD_REC_VER,',@ELEC_CAP)'));
			PREPARE DD_CALC_INSERT_ELECTRICITYCAP_STMT FROM @DD_CALC_INSERT_ELECTRICITY_CAP;
			EXECUTE DD_CALC_INSERT_ELECTRICITYCAP_STMT;
COMMIT;
END;
