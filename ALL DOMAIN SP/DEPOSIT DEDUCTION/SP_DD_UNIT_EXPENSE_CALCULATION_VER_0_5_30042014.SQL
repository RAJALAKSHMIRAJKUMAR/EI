-- version --> 0.5 startdate -->29/04/2014 enddate --> 30/04/2014 description --> CREATED DYNAMIC TABLE FOR TEMP TABLE. created by -->SARADAMBAL M -->issue :817
-- version --> 0.4 startdate -->28/03/2014 enddate --> 28/03/2014 description --> EXCLUDED GENERAL FOR UNIT EXPENSE. created by -->SARADAMBAL M -->issue :576
-- version --> 0.3 startdate -->26/11/2013 enddate --> 27/11/2013 description --> USED DDRECVER INSTEAD OF PDPRECVER HEADER IN TEMP TABLE,ADDED DDCHARGES,FIXED NULL IN THE SUBTOTAL AND REFUND AMOUNTS,ADDED RECVER IN ELECTRICITY EXCESS,UNIT EXPENSE,CHANGED THE DATE FORMAT FOR ELECTRICITY EXCESS,HEADER ADDED FOR ELECTRICITY CAP AND IMPLEMENTED THE CAP FROM THE CUSTOMER. created by -->CL -->issue :656
-- version --> 0.2 startdate -->09/11/2013 enddate --> 10/11/2013 description --> ADDED CALCULATIONS FOR RETURN INVOICE ITEMS FOR THE MATCHING DATES, RETURN INVOICE AMT WITH THE DIV AMT created by -->CL -->issue :493
-- version --> 0.1 startdate -->21/10/2013 enddate --> 08/11/2013 description --> SP for the unit expense calculation part created by -->CL -->issue :493
DROP PROCEDURE IF EXISTS SP_DD_UNIT_EXPENSE_CALCULATION;
CREATE PROCEDURE SP_DD_UNIT_EXPENSE_CALCULATION(
	IN DD_UNIT_NO INTEGER(4),
	IN DD_CUSTOMER_ID INTEGER,
	IN DD_REC_VER INTEGER,
	IN DD_STARTDATE DATE,
	IN DD_ENDDATE DATE,
	IN TEMP_DD_CALCULATION TEXT)
BEGIN
DECLARE DD_NOOFDIVISION INTEGER;
DECLARE NO_OF_DIV INTEGER;
DECLARE DD_ECNID INTEGER;
DECLARE DD_INVOICE_DATE DATE;
DECLARE DD_INVOICE_ITEM TEXT;
DECLARE DD_AMOUNT DECIMAL(7,2);
DECLARE DD_DIVAMOUNT DECIMAL(7,2);
DECLARE DONE INT DEFAULT FALSE;
DECLARE UNIT_NONCUSTOMER_CURSOR CURSOR FOR SELECT EU.ECN_ID,EU.EU_AMOUNT,EU.EU_INVOICE_DATE,EU.EU_INVOICE_ITEMS FROM EXPENSE_UNIT EU, UNIT U WHERE (EU.UNIT_ID=U.UNIT_ID) AND(U.UNIT_NO=DD_UNIT_NO) AND (EU.EU_INVOICE_DATE BETWEEN  DD_STARTDATE AND DD_ENDDATE) AND EU.ECN_ID!=192 AND EU.ECN_ID!=22 AND EU.ECN_ID!=23 ORDER BY EU.EU_INVOICE_DATE ASC;
DECLARE UNIT_CUSTOMER_CURSOR CURSOR FOR SELECT EU.ECN_ID,EU.EU_AMOUNT,EU.EU_INVOICE_DATE,EU.EU_INVOICE_ITEMS FROM EXPENSE_UNIT EU, UNIT U WHERE (EU.UNIT_ID=U.UNIT_ID) AND(U.UNIT_NO=DD_UNIT_NO) AND (EU.EU_INVOICE_DATE BETWEEN  DD_STARTDATE AND DD_ENDDATE) AND EU.CUSTOMER_ID=DD_CUSTOMER_ID AND EU.ECN_ID=23 ORDER BY EU.EU_INVOICE_DATE ASC;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
--  query for rollback command
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
	ROLLBACK; 
END;
START TRANSACTION;
OPEN UNIT_NONCUSTOMER_CURSOR;
UNITNONCUSTOMER_LOOP: LOOP
	FETCH UNIT_NONCUSTOMER_CURSOR INTO DD_ECNID,DD_AMOUNT,DD_INVOICE_DATE,DD_INVOICE_ITEM;
	IF DONE THEN
		LEAVE UNITNONCUSTOMER_LOOP;
	END IF;
	IF DD_AMOUNT IS NOT NULL THEN
		SET @DDNOOFDIV= (SELECT CONCAT('SELECT DDNOOFDIVISION INTO @DDNOOFDIVI FROM ',TEMP_DD_CALCULATION ,' WHERE DDCUSTOMERID=',DD_CUSTOMER_ID,' AND DDRECVER=',DD_REC_VER));
        PREPARE DDNOOFDIV_STMT FROM @DDNOOFDIV;
        EXECUTE DDNOOFDIV_STMT;
        SET DD_NOOFDIVISION=@DDNOOFDIVI;  
		IF DD_NOOFDIVISION IS NOT NULL THEN
			SET @DDNOOFDIV_ONE= (SELECT CONCAT('SELECT DDNOOFDIVISION INTO @DDNOOFDIVI_ONE FROM ',TEMP_DD_CALCULATION ,' WHERE DDCUSTOMERID=',DD_CUSTOMER_ID,' AND DDRECVER=',DD_REC_VER));
			PREPARE DDNOOFDIV_ONE_STMT FROM @DDNOOFDIV_ONE;
			EXECUTE DDNOOFDIV_ONE_STMT;
			SET NO_OF_DIV=@DDNOOFDIVI_ONE; 
		ELSE
			SET @DDNOOFDIV_TWO= (SELECT CONCAT('SELECT DDNOOFDIVISION INTO @DDNOOFDIVI_TWO FROM ',TEMP_DD_CALCULATION ,' WHERE DDNOOFDIVISION IS NOT NULL'));
			PREPARE DDNOOFDIV_TWO_STMT FROM @DDNOOFDIV_TWO;
			EXECUTE DDNOOFDIV_TWO_STMT;
			SET NO_OF_DIV=@DDNOOFDIVI_TWO; 
		END IF;
		IF NO_OF_DIV IS NOT NULL AND NO_OF_DIV!=0 THEN
			SET DD_DIVAMOUNT=(DD_AMOUNT/NO_OF_DIV);
		ELSE
			SET DD_DIVAMOUNT=DD_AMOUNT;
		END IF;
		SET @DD_CALC_INSERT_UNITINVOICE=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDRECVER, DDUNITAMOUNT, DDUNITDIVAMOUNT, DDUNITINVOICEDATE, DDUNITINVOICEITEM) VALUES(',DD_REC_VER,',',DD_AMOUNT,',',DD_DIVAMOUNT,',','"',DD_INVOICE_DATE,'"',',','"',DD_INVOICE_ITEM,'"',')'));
			PREPARE DD_CALC_INSERT_UNITINVOICE_STMT FROM @DD_CALC_INSERT_UNITINVOICE;
			EXECUTE DD_CALC_INSERT_UNITINVOICE_STMT;
	END IF;
END LOOP;
CLOSE UNIT_NONCUSTOMER_CURSOR;
SET DONE=FALSE;
OPEN UNIT_CUSTOMER_CURSOR;
UNITCUSTOMER_LOOP: LOOP
	FETCH UNIT_CUSTOMER_CURSOR INTO DD_ECNID,DD_AMOUNT,DD_INVOICE_DATE,DD_INVOICE_ITEM;
	IF DONE THEN
		LEAVE UNITCUSTOMER_LOOP;
	END IF;
	IF DD_AMOUNT IS NOT NULL THEN
	SET @DD_CALC_INSERT_UNITINVOICEITEM=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDRECVER, DDUNITAMOUNT, DDUNITDIVAMOUNT, DDUNITINVOICEDATE, DDUNITINVOICEITEM) VALUES(',DD_REC_VER,',',DD_AMOUNT,',',DD_AMOUNT,',','"',DD_INVOICE_DATE,'"',',','"',DD_INVOICE_ITEM,'"',')'));
			PREPARE DD_CALC_INSERT_UNITINVOICEITEM_STMT FROM @DD_CALC_INSERT_UNITINVOICEITEM;
			EXECUTE DD_CALC_INSERT_UNITINVOICEITEM_STMT;
	END IF;
END LOOP;
CLOSE UNIT_CUSTOMER_CURSOR;
COMMIT;
END;

