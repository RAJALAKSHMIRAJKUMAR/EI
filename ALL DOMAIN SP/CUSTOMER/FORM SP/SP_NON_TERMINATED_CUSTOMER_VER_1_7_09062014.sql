--version:1.7 --sdate:09/06/2014 --edate:09/06/2014 -issue:566 --desc:ADDED ROLLBACK AND COMMIT--doneBY:SASIKALA
--version:1.6 --sdate:30/04/2014 --edate:30/04/2014 -issue:817 --desc:changed all temp table as dynamic --doneby:RL
-- version:1.5 --startdate:02/01/2014 --enddate:06/01/2014 --issue:345 --changed the whole SP_NON_TERMINATED_CUSTOMER sp n TERMINATED_CUSTOMER view based on from comment #551 --by PUNI
-->VER 1.4 --ISSUE NO:345 COMMENTNO:#487 START DATE:10/12/2013 ENDDATE:10/12/2013 DESC:ADDED UNIT_NO,START_DATE,PRETERMINATEDATE,RECVER,ENDDATE COLUMN IN ACTIVE CUSTOMER VIEW  SP DONE BY:DHIVYA.A
-->VER 1.3 --START DATE:12/11/2013 ENDDATE:12/11/2013 DESC:CHANGED TEMP_ACTIVE TABLE CHANGED AS VW_TEMP_TERMINATION_ACTIVE_CUSTOMER BY RL
-->VER 1.2--->ISSUE NO:636 COMMENT NO:#47 START DATE:10/11/2013 ENDDATE:10/11/2013 DESC:CHANGED VIEW NAME BY RL
-->VER 1.1--->ISSUE NO:345 START DATE:04/11/2013 ENDDATE:04/11/2013 COMMENT NO:#307 DESC:UPDATED SYSDATE() AS CURDATE()  done by:DHIVYA.A
-->VER 1.0--->ISSUE NO:345 START DATE:28/10/2013 ENDDATE:28/10/2013 COMMENT NO:#263 DESC:ADDED CANCEL_DATE IS NULL CONDITION IN ACTIVE AND NON TERMINATED CUSTOMERS  done by;DHIVYA.A
-->VER 0.10--->ISSUE NO:646 START DATE:24/10/2013 ENDDATE:24/10/2013 DESC:GUEST CARD IS FILTERED IN TEMP_ACTIVE VIEW done by;DHIVYA.A
-->VER 0.9--->ISSUE NO:345 COMMENT NO:#236 START DATE:23/10/2013 ENDDATE:23/10/2013 DESC:changed active customer,terminated customer view variable name CUSTOMER_ID as CUSTOMERID done by;DHIVYA.A
-->VER 0.8--->ISSUE NO:345 COMMENT NO:#219 START DATE:22/10/2013 ENDDATE:23/10/2013 DESC:changed active customer,terminated customer view names and added procedure for nonterminated customers and updated queries as per comment #222 and #223 done by;DHIVYA.A
-->VER 0.7--->ISSUE NO:345 COMMENT NO:#173 START DATE:18/10/2013 ENDDATE:19/10/2013 DESC:updated views for terminated customers,active customers and non_terminated_customers BY:DHIVYA.A
-->VER 0.6--->ISSUE NO:345 COMMENT NO:#173 START DATE:08/10/2013 ENDDATE:08/10/2013 DESC:updated views for terminated customers and created view for  uncancel_customers BY:DHIVYA.A
-->VER 0.5--->ISSUE NO:345 COMMENT NO:#162 START DATE:04/10/2013 ENDDATE:04/10/2013 DESC:updated views for active customers,terminated customers and created view for non_terminated customers BY:DHIVYA.A
-->version 0.4 -->issueno:589 --->desc:created temporary views TEMP_CUSTOMER and TEMP_CUSTOMER_TERMINATE for getting active and non_active customers done by:Dhivya.A
-->version 0.3 -->startdate:02/08/2013 enddate:05/08/2013 -->issueno:322  -->commentno:17 -->desc:added ALL_CANCEL_CUSTOMERS views & CURRENT MONTH CUSTOMER EXPIRY LIST views done by:Dhivya.A
-->version 0.2 -->issue no:563 -->desc:changed view name -->done by:rajalakshmi.r
-->version 0.1 -->Issue tracker-No:347 -->Created on 07.05.2013 -->Completed by S.GopiKrishnan -->enddate:09.05.2013

DROP PROCEDURE IF EXISTS SP_NON_TERMINATED_CUSTOMER;
CREATE PROCEDURE SP_NON_TERMINATED_CUSTOMER(
IN USERSTAMP VARCHAR(50),
OUT TEMP_TERMINATED_CUSTOMER TEXT,
OUT TEMP_ACTIVE_CUSTOMER TEXT,
OUT FINAL_TERMINATED_CUSTOMER TEXT,
OUT NON_TERMINATED_CUSTOMER TEXT)

BEGIN

	DECLARE CUST_ID INTEGER;
	DECLARE CUST_NAME TEXT;
	DECLARE TFTDC_MINID INTEGER;
	DECLARE TFTDC_MAXID INTEGER;

	DECLARE USERSTAMP_ID INTEGER;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	
-- CREATE TABLE TEMP_TERMINATED_DATE_CUSTOMER WITH ENDATE/PTD<=CURRDATE
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));	

	SET TEMP_TERMINATED_CUSTOMER=(SELECT CONCAT('TEMP_TERMINATED_DATE_CUSTOMER','_',SYSDATEANDULDID));
	SET @TERMINATEDCUST_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_TERMINATED_CUSTOMER,'(
	TTDC_ID INTEGER AUTO_INCREMENT NOT NULL,
	TTDC_CUSTOMERID INTEGER,
	TTDC_UNITNO INTEGER,
	TTDC_CARDNO INTEGER,
	TTDC_RECVER INTEGER,
	TTDC_STARTDATE DATE,
    TTDC_ENDDATE DATE,
	TTDC_PRETERMINATEDATE DATE,
	TTDC_PRETERMINATEFLAG CHAR(1),
	TTDC_TERMINATEFLAG CHAR(1),
	TTDC_UASDID INTEGER NULL,
	TTDC_GUESTFLAG CHAR(1),
	PRIMARY KEY(TTDC_ID))'));
	PREPARE TERMINATEDCUST_CREATEQUERY_STMT from @TERMINATEDCUST_CREATEQUERY;
	EXECUTE TERMINATEDCUST_CREATEQUERY_STMT;

	SET @TEMPTERMINATED_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',TEMP_TERMINATED_CUSTOMER,'(TTDC_UNITNO,TTDC_CARDNO,TTDC_CUSTOMERID,TTDC_RECVER,TTDC_STARTDATE,TTDC_ENDDATE,
	TTDC_PRETERMINATEDATE,TTDC_PRETERMINATEFLAG,TTDC_TERMINATEFLAG,TTDC_UASDID,TTDC_GUESTFLAG) 
	SELECT U.UNIT_NO,UASD.UASD_ACCESS_CARD,CTD.CUSTOMER_ID,CTD.CED_REC_VER,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE,
	CED.CED_PRETERMINATE,CTD.CLP_TERMINATE,CTD.UASD_ID,CTD.CLP_GUEST_CARD 
	FROM CUSTOMER_LP_DETAILS CTD LEFT JOIN CUSTOMER_ACCESS_CARD_DETAILS CACD ON CTD.CUSTOMER_ID=CACD.CUSTOMER_ID  AND CTD.UASD_ID=CACD.UASD_ID LEFT JOIN UNIT_ACCESS_STAMP_DETAILS UASD ON CTD.UASD_ID=UASD.UASD_ID AND CACD.UASD_ID=UASD.UASD_ID,
    CUSTOMER_ENTRY_DETAILS CED,UNIT U WHERE U.UNIT_ID=CED.UNIT_ID AND CTD.CUSTOMER_ID=CED.CUSTOMER_ID AND CTD.CED_REC_VER=CED.CED_REC_VER 
    AND (CTD.CLP_ENDDATE <= CURDATE() OR CTD.CLP_PRETERMINATE_DATE <= CURDATE())  AND CTD.CLP_TERMINATE IS NULL  AND CACD.CACD_VALID_TILL IS NULL'));
	PREPARE TEMPTERMINATED_INSERTQUERY_STMT FROM @TEMPTERMINATED_INSERTQUERY;
	EXECUTE TEMPTERMINATED_INSERTQUERY_STMT;
	
-- CREATE TABLE TEMP_ACTIVE_DATE_CUSTOMER WITH ENDATE/PTD>CURRDATE
	SET TEMP_ACTIVE_CUSTOMER=(SELECT CONCAT('TEMP_ACTIVE_DATE_CUSTOMER','_',SYSDATEANDULDID));
	SET @ACTIVECUST_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',TEMP_ACTIVE_CUSTOMER,'(
	TADC_ID INTEGER AUTO_INCREMENT NOT NULL,
	TADC_CUSTOMERID INTEGER,
	TADC_UNITNO INTEGER,
	TADC_RECVER INTEGER,
	TADC_STARTDATE DATE,
	TADC_ENDDATE DATE,
	TADC_PRETERMINATEDATE DATE,
	TADC_PRETERMINATEFLAG CHAR(1),
	TADC_TERMINATEFLAG CHAR(1),
	TADC_UASDID INTEGER NULL,
	TADC_GUESTFLAG CHAR(1),
	PRIMARY KEY(TADC_ID))'));
	PREPARE ACTIVECUST_CREATEQUERY_STMT FROM @ACTIVECUST_CREATEQUERY;
	EXECUTE ACTIVECUST_CREATEQUERY_STMT;
	
	SET @TEMPACTIVE_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',TEMP_ACTIVE_CUSTOMER,'(TADC_UNITNO,TADC_CUSTOMERID,TADC_RECVER,TADC_STARTDATE,TADC_ENDDATE,
	TADC_PRETERMINATEDATE,TADC_PRETERMINATEFLAG,TADC_TERMINATEFLAG,TADC_UASDID,TADC_GUESTFLAG) 
	SELECT U.UNIT_NO,CTD.CUSTOMER_ID,CTD.CED_REC_VER,CTD.CLP_STARTDATE,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE,
	CED.CED_PRETERMINATE,CTD.CLP_TERMINATE,CTD.UASD_ID,CTD.CLP_GUEST_CARD 
	FROM CUSTOMER_LP_DETAILS CTD LEFT JOIN CUSTOMER_ACCESS_CARD_DETAILS CACD ON  CTD.CUSTOMER_ID=CACD.CUSTOMER_ID  AND CTD.UASD_ID=CACD.UASD_ID LEFT JOIN UNIT_ACCESS_STAMP_DETAILS UASD ON CTD.UASD_ID=UASD.UASD_ID AND CACD.UASD_ID=UASD.UASD_ID,
	CUSTOMER_ENTRY_DETAILS CED,UNIT U WHERE U.UNIT_ID=CED.UNIT_ID AND CTD.CUSTOMER_ID=CED.CUSTOMER_ID AND CTD.CED_REC_VER=CED.CED_REC_VER 
	AND IF(CTD.CLP_PRETERMINATE_DATE IS NOT NULL,CTD.CLP_STARTDATE<CTD.CLP_PRETERMINATE_DATE,CTD.CLP_STARTDATE<CTD.CLP_ENDDATE) AND 
	IF(CTD.CLP_PRETERMINATE_DATE IS NOT NULL,CTD.CLP_PRETERMINATE_DATE>CURDATE(),CTD.CLP_ENDDATE>CURDATE())  AND CTD.CLP_TERMINATE IS NULL  AND CACD.CACD_VALID_TILL IS NULL'));
	PREPARE TEMPACTIVE_INSERTQUERY_STMT FROM @TEMPACTIVE_INSERTQUERY;
	EXECUTE TEMPACTIVE_INSERTQUERY_STMT;

-- CREATE TABLE TEMP_NON_TERMINATED_CUSTOMER WITH ENDATE/PTD<=CURRDATE ONLY WITH CARD
	SET NON_TERMINATED_CUSTOMER=(SELECT CONCAT('TEMP_NON_TERMINATED_CUSTOMER','_',SYSDATEANDULDID));
	SET @NON_TERMINATED_CUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',NON_TERMINATED_CUSTOMER,'(
	CUSTOMERID INTEGER,
	CUSTOMERNAME VARCHAR(100))'));
	PREPARE NON_TERMINATED_CUSTOMER_CREATEQUERY_STMT FROM @NON_TERMINATED_CUSTOMER_CREATEQUERY;
	EXECUTE NON_TERMINATED_CUSTOMER_CREATEQUERY_STMT;

-- CREATE TABLE TEMP_FINAL_TERMINATED_DATE_CUSTOMER WITH ENDATE/PTD<=CURRDATE NOT IN TABLE TEMP_ACTIVE_DATE_CUSTOMER
	SET FINAL_TERMINATED_CUSTOMER=(SELECT CONCAT('TEMP_FINAL_TERMINATED_DATE_CUSTOMER','_',SYSDATEANDULDID));
	SET @FINAL_TERMINATED_CUSTOMER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',FINAL_TERMINATED_CUSTOMER,'(
	TFTDC_ID INTEGER AUTO_INCREMENT NOT NULL,
	TTDC_ID INTEGER,
	TFTDC_CUSTOMERID INTEGER,
	TFTDC_UNITNO INTEGER,
	TFTDC_CARDNO INTEGER,
	TFTDC_RECVER INTEGER,
	TFTDC_STARTDATE DATE,
	TFTDC_ENDDATE DATE,
	TFTDC_PRETERMINATEDATE DATE,
	TFTDC_PRETERMINATEFLAG CHAR(1),
	TFTDC_TERMINATEFLAG CHAR(1),
	TFTDC_UASDID INTEGER NULL,
	TFTDC_GUESTFLAG CHAR(1),
	PRIMARY KEY(TFTDC_ID))'));
	PREPARE FINAL_TERMINATED_CUSTOMER_CREATEQUERY_STMT FROM @FINAL_TERMINATED_CUSTOMER_CREATEQUERY;
	EXECUTE FINAL_TERMINATED_CUSTOMER_CREATEQUERY_STMT;
	
-- INSERT INTO TABLE TEMP_FINAL_TERMINATED_DATE_CUSTOMER WITH ENDATE/PTD<=CURRDATE NOT IN TABLE TEMP_ACTIVE_DATE_CUSTOMER
	SET @FINAL_TERMINATED_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',FINAL_TERMINATED_CUSTOMER,'(TTDC_ID,TFTDC_CUSTOMERID,TFTDC_UNITNO,TFTDC_CARDNO,TFTDC_RECVER,TFTDC_STARTDATE,TFTDC_ENDDATE,TFTDC_PRETERMINATEDATE,TFTDC_PRETERMINATEFLAG,TFTDC_TERMINATEFLAG,TFTDC_UASDID,TFTDC_GUESTFLAG)
	SELECT TTDC.TTDC_ID,TTDC.TTDC_CUSTOMERID,TTDC.TTDC_UNITNO,TTDC.TTDC_CARDNO,TTDC.TTDC_RECVER,TTDC.TTDC_STARTDATE,TTDC.TTDC_ENDDATE,TTDC.TTDC_PRETERMINATEDATE,TTDC.TTDC_PRETERMINATEFLAG,TTDC.TTDC_TERMINATEFLAG,TTDC.TTDC_UASDID,TTDC.TTDC_GUESTFLAG FROM ',TEMP_TERMINATED_CUSTOMER,' TTDC WHERE NOT EXISTS(SELECT TADC.TADC_CUSTOMERID,TADC.TADC_UNITNO,TADC.TADC_UASDID FROM ',TEMP_ACTIVE_CUSTOMER,' TADC WHERE TADC.TADC_CUSTOMERID=TTDC.TTDC_CUSTOMERID AND TADC.TADC_UNITNO=TTDC_UNITNO AND TADC.TADC_UASDID=TTDC.TTDC_UASDID)'));
	PREPARE FINAL_TERMINATED_INSERTQUERY_STMT FROM @FINAL_TERMINATED_INSERTQUERY;
	EXECUTE FINAL_TERMINATED_INSERTQUERY_STMT;
	
	SET @TFTDCMINID = (SELECT CONCAT('SELECT MIN(TFTDC_ID) INTO @MINTFTDCID FROM ',FINAL_TERMINATED_CUSTOMER,''));
	PREPARE TFTDCMINID_STMT FROM @TFTDCMINID;
	EXECUTE TFTDCMINID_STMT;
	
	SET @TFTDCMAXID = (SELECT CONCAT('SELECT MAX(TFTDC_ID) INTO @MAXTFTDCID FROM ',FINAL_TERMINATED_CUSTOMER,''));
	PREPARE TFTDCMAXID_STMT FROM @TFTDCMAXID;
	EXECUTE TFTDCMAXID_STMT;
	
	SET TFTDC_MINID = @MINTFTDCID;
	SET TFTDC_MAXID = @MAXTFTDCID;
	
	WHILE(TFTDC_MINID <= TFTDC_MAXID)DO

		SET @CUSTID = (SELECT CONCAT('SELECT C.CUSTOMER_ID INTO @TCUSTOMERID FROM CUSTOMER C,',FINAL_TERMINATED_CUSTOMER,' TFTDC WHERE TFTDC.TFTDC_CUSTOMERID=C.CUSTOMER_ID AND TFTDC_ID=',TFTDC_MINID,' AND TFTDC_UASDID IS NOT NULL GROUP BY C.CUSTOMER_ID'));
		PREPARE CUSTID_STMT FROM @CUSTID;
		EXECUTE CUSTID_STMT;
		
		SET @FNAME = (SELECT CONCAT('SELECT C.CUSTOMER_FIRST_NAME INTO @F_NAME FROM CUSTOMER C, ',FINAL_TERMINATED_CUSTOMER,' TFTDC WHERE TFTDC.TFTDC_CUSTOMERID=C.CUSTOMER_ID AND TFTDC_UASDID IS NOT NULL AND TFTDC_ID=',TFTDC_MINID,' GROUP BY C.CUSTOMER_ID'));
		PREPARE FNAME_STMT FROM @FNAME;
		EXECUTE FNAME_STMT;
		
		SET @LNAME = (SELECT CONCAT('SELECT C.CUSTOMER_LAST_NAME INTO @L_NAME FROM CUSTOMER C, ',FINAL_TERMINATED_CUSTOMER,' TFTDC WHERE TFTDC.TFTDC_CUSTOMERID=C.CUSTOMER_ID AND TFTDC_UASDID IS NOT NULL AND TFTDC_ID=',TFTDC_MINID,' GROUP BY C.CUSTOMER_ID'));
		PREPARE LNAME_STMT FROM @LNAME;
		EXECUTE LNAME_STMT;
		
		SET CUST_NAME=(SELECT CONCAT(@F_NAME,'_',@L_NAME));
		
		SET @NAME = CUST_NAME;
		
		SET CUST_ID = @TCUSTOMERID;
		
		IF (CUST_ID IS NOT NULL AND CUST_NAME IS NOT NULL) THEN
	
-- INSERT INTO TABLE TEMP_NON_TERMINATED_CUSTOMER WITH ENDATE/PTD<=CURRDATE ONLY WITH CARD
			SET @NONTERMINATED_CUSTOMER_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',NON_TERMINATED_CUSTOMER,'(CUSTOMERID,CUSTOMERNAME) VALUES(@TCUSTOMERID,@NAME)'));
			PREPARE NONTERMINATED_CUSTOMER_INSERTQUERY_STMT FROM @NONTERMINATED_CUSTOMER_INSERTQUERY;
			EXECUTE NONTERMINATED_CUSTOMER_INSERTQUERY_STMT;
			
		END IF;
				
	SET TFTDC_MINID = TFTDC_MINID+1;
	END WHILE;
	COMMIT;
END;