--version:1.8 --sdate:29/04/2014 --edate:30/04/2014 --issue:817 --desc:changing all temp table as dynamic --doneby:RL
--version --> 1.7 startdate:21/04/2014 --enddate:21/04/2014--- issueno 615 COMMENT NO:67 -->desc:WHILE INSERTING INTO TICKLER FOR REORDERING OF LP IN CUSTOMER LP DETAILS AND CUSTOMER FEE DETAILS, CORRECTED SUBQUERY RETURNS MORE THAN ONE ROW ERROR BY PUNI
--version --> 1.6 startdate:19/04/2014 --enddate:19/04/2014--- issueno 615 COMMENT N0:64 -->desc:CHANGES IN updation of ced_rec_ver for customer fee details,lp details and entry details --done by:Bhavani.R
--version --> 1.5 startdate:18/04/2014 --enddate:18/04/2014--- issueno 615 COMMENT N0:60 -->desc:CHANGES IN TICKLER PART FOR ENTERING PRIMARY KEY FOR CUSTOMER_EXTENSION_SP --done by:Bhavani.R
--version --> 1.4 startdate:15/04/2014 --enddate:16/04/2014--- issueno 345 COMMENT N0:677 -->desc:CREATING TICKLER PART FOR CUSTOMER_EXTENSION_SP --done by:Bhavani.R
--version --> 1.3 startdate:16/04/2014 --enddate:16/04/2014--- issueno 345 -desc:inserted CED_PRETERMINATE FLAG IF CUST PTD IN MIDDLE LP N EXTNDED --done by:PUNI
--version --> 1.2 startdate:01/04/2014 --enddate:01/04/2014--- issueno 345 -->desc:CHECKED IF THE PASSING CARD S INVENTORY OR NOT --done by:RL
--version --> 1.1 startdate:03/04/2014 --enddate:03/04/2014--- issueno 797 commentno:4-->desc:REPLACED TABLENAME AND HEADERNAME by SASIKALA.D
--version --> 1.0 startdate:26/03/2014 --enddate:26/03/2014--- issueno 345 commentno:627-->desc:reordered rec version of the customer-PUNI
--version --> 0.9 startdate:28/02/2014 --enddate:28/02/2014--- issueno 754 commentno:36-->desc:added sub sp to convert userstamp as uld_id done by:Dhivya 
-- version --> 0.8 startdate -->27/02/2014 enddate --> 27/02/2014 description -->REPLACE USERSTAMP TO ULD_ID AND USERSTAM VARCAH TO USERSTAMPINTEGER -BALAJI
-- version --> 0.7 startdate -->19/02/2014 enddate --> 20/02/2014 description --> Implementing flag for success message in SP_CUSTOMER_EXTENSION_INSERT done by:Bhavani.R -->issue:594    comment:#67 
-- version --> 0.6 startdate -->29/01/2014 enddate --> 30/01/2014 description -->UPDATED CUSTOMER ENTRY DETAILS AS PER STIME AND ETIME DATATYPE UPDATION DONE BY:DHIVYA.A -->issue :594 comment:#71
-- version --> 0.5 startdate -->21/11/2013 enddate --> 21/11/2013 description -->removed unexpected condition in customer access card details -->done by:DHIVYA.A-->issue :660
-- version --> 0.4 startdate -->20/11/2013 enddate --> 20/11/2013 description --> added guest card column in customer access card details -->done by:DHIVYA.A-->issue :248-->commentno:110
-- version --> 0.3 startdtae -->06/11/2013 enddate --> 06/11/2013 description --> CARD IS ASSIGNED TO CUSTOMER, EMPLOYEE_DETAILS TABLE RECORD SHLD UPDATE AS NULL IF THAT CARD EXISTS FOR THE EMPLOYEE modified by & changed sp name -->rl -->issue :345 -->commentno: 303
-- version --> 0.2 startdate -->17/09/2013 enddate --> 17/09/2013 description --> added code for delete null rows in company details created by -->CL -->issue :615
-- version --> 0.1 startdate -->23/08/2013 enddate --> 23/08/2013 description --> SP for the customer extension form saving part created by -->CL -->issue :345

DROP PROCEDURE IF EXISTS SP_CUSTOMER_EXTENSION_COMPANY_DTLS_INSERT;
CREATE PROCEDURE SP_CUSTOMER_EXTENSION_COMPANY_DTLS_INSERT(
IN EX_CUSTOMER_ID INTEGER,
IN EX_COMPANY_NAME VARCHAR(50),
IN EX_COMPANY_ADDR VARCHAR(50),
IN EX_POSTAL_CODE VARCHAR(6),
IN EX_OFFICE_NO VARCHAR(8),
IN USERSTAMP VARCHAR(50),
OUT EX_SUCCESSFLAG TEXT)

BEGIN

	DECLARE OLD_CCDID INTEGER;
    DECLARE OLD_COMPANYNAME TEXT;
    DECLARE OLD_COMPANYADDR TEXT;
	DECLARE OLD_POSTALCODE TEXT;
	DECLARE OLD_OFFICENO TEXT;
	DECLARE USERSTAMP_ID INTEGER;
	
    DECLARE NEW_COMPANYNAME TEXT;
    DECLARE NEW_COMPANYADDR TEXT;
	DECLARE NEW_POSTALCODE TEXT;
	DECLARE NEW_OFFICENO TEXT;
    DECLARE OLD_COMPANYTABLEDETAILS TEXT;
    DECLARE NEW_COMPANYTABLEDETAILS TEXT;
    DECLARE COMPANY_HEADERNAME TEXT;
    DECLARE CCD_LENGTH INTEGER;
    DECLARE OLDCOMPANYPOSITION INTEGER;
    DECLARE OLD_COMPANYS TEXT;
    DECLARE NEWCOMPANYPOSITION INTEGER;
    DECLARE NEW_COMPANYS TEXT;
    DECLARE COMPANYHEADPOSITION INTEGER;
    DECLARE COMPANYHEADNAME TEXT;
    DECLARE NEWCOMPANYRECORDS TEXT ;
    DECLARE OLDCOMPANYRECORDS TEXT ;
    DECLARE COMPANYHEADERNAMES TEXT;
    DECLARE CUSTCOMPANY_ID VARCHAR(30);
    DECLARE OLD_COMPANYDTL TEXT;
    DECLARE NEW_COMPANYDTL TEXT;
    DECLARE CUSTCOMPANYHEADERNAME TEXT;
    DECLARE COMPANY_LOCATION INTEGER;
	
	DECLARE CCDID INTEGER;
    DECLARE THID INTEGER;

-- query for rollback command
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
        SET EX_SUCCESSFLAG = 0;
		ROLLBACK; 
	END;

	START TRANSACTION;
	
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);	
	
-- set null for non mandatory fields in CUSTOMER_COMPANY_DETAILS table

	IF EX_COMPANY_NAME='' THEN
		SET EX_COMPANY_NAME=NULL;
	END IF;

	IF EX_COMPANY_ADDR='' THEN
		SET EX_COMPANY_ADDR=NULL;
	END IF;

	IF EX_POSTAL_CODE='' THEN
		SET EX_POSTAL_CODE=NULL;
	END IF;

	IF EX_OFFICE_NO='' THEN
		SET EX_OFFICE_NO=NULL;
	END IF;
	
	SET CUSTCOMPANY_ID = '';
	   
	SET OLD_CCDID = (SELECT CCD_ID FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID = EX_CUSTOMER_ID);
	   
	SET OLD_COMPANYNAME = (SELECT CCD_COMPANY_NAME FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID = EX_CUSTOMER_ID);
	IF(OLD_COMPANYNAME IS NULL)THEN
		SET OLD_COMPANYNAME = 'null';
	END IF;
		
	SET OLD_COMPANYADDR = (SELECT CCD_COMPANY_ADDR FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID = EX_CUSTOMER_ID);
	IF(OLD_COMPANYADDR IS NULL)THEN
		SET OLD_COMPANYADDR = 'null';
	END IF;
		
	SET OLD_POSTALCODE = (SELECT CCD_POSTAL_CODE FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID = EX_CUSTOMER_ID);
	IF(OLD_POSTALCODE IS NULL)THEN
		SET OLD_POSTALCODE = 'null';
	END IF;
		
	SET OLD_OFFICENO = (SELECT CCD_OFFICE_NO FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID = EX_CUSTOMER_ID);
	IF(OLD_OFFICENO IS NULL)THEN
		SET OLD_OFFICENO = 'null';
	END IF;
		
	SET NEW_COMPANYNAME = EX_COMPANY_NAME;
	IF(NEW_COMPANYNAME IS NULL)THEN
		SET NEW_COMPANYNAME = 'null';
	END IF;
		
	SET NEW_COMPANYADDR = EX_COMPANY_ADDR;
	IF(NEW_COMPANYADDR IS NULL)THEN
		SET NEW_COMPANYADDR = 'null';
	END IF;
		
	SET NEW_POSTALCODE = EX_POSTAL_CODE;
	IF(NEW_POSTALCODE IS NULL)THEN
		SET NEW_POSTALCODE = 'null';
	END IF;
		
	SET NEW_OFFICENO = EX_OFFICE_NO;
	IF(NEW_OFFICENO IS NULL)THEN
		SET NEW_OFFICENO = 'null';
	END IF;
	   
	SET COMPANYHEADERNAMES = 'CCD_ID,CCD_COMPANY_NAME,CCD_COMPANY_ADDR,CCD_POSTAL_CODE,CCD_OFFICE_NO';
	SET OLD_COMPANYTABLEDETAILS = (SELECT CONCAT(OLD_CCDID,'^','^',OLD_COMPANYNAME,'^','^',OLD_COMPANYADDR,'^','^',OLD_POSTALCODE,'^','^',OLD_OFFICENO));
	SET NEW_COMPANYTABLEDETAILS = (SELECT CONCAT(OLD_CCDID,'^','^',NEW_COMPANYNAME,'^','^',NEW_COMPANYADDR,'^','^',NEW_POSTALCODE,'^','^',NEW_OFFICENO));
	   
	IF(OLD_COMPANYTABLEDETAILS != NEW_COMPANYTABLEDETAILS)THEN
			
		SET OLDCOMPANYRECORDS = OLD_COMPANYTABLEDETAILS;
		SET NEWCOMPANYRECORDS = NEW_COMPANYTABLEDETAILS;
		SET COMPANYHEADNAME = COMPANYHEADERNAMES;
		SET OLD_COMPANYS = (SELECT CONCAT('CCD_ID=',OLD_CCDID));
		SET NEW_COMPANYS = '';
		SET CCD_LENGTH = 1;
			
		loop_label : LOOP
			   
			SET OLDCOMPANYPOSITION = (SELECT LOCATE('^^',OLDCOMPANYRECORDS,CCD_LENGTH));
			IF (OLDCOMPANYPOSITION=0) THEN
				SET OLD_COMPANYDTL = OLDCOMPANYRECORDS;
			ELSE
				SET OLD_COMPANYDTL =(SELECT SUBSTRING(OLDCOMPANYRECORDS,CCD_LENGTH,OLDCOMPANYPOSITION-1));
				SET OLDCOMPANYRECORDS=(SELECT SUBSTRING(OLDCOMPANYRECORDS,OLDCOMPANYPOSITION+2));
			END IF;
			   
			SET NEWCOMPANYPOSITION = (SELECT LOCATE('^^',NEWCOMPANYRECORDS,CCD_LENGTH));
			IF (NEWCOMPANYPOSITION=0) THEN
				SET NEW_COMPANYDTL = NEWCOMPANYRECORDS;
			ELSE
				SET NEW_COMPANYDTL=(SELECT SUBSTRING(NEWCOMPANYRECORDS,CCD_LENGTH,NEWCOMPANYPOSITION-1));
				SET NEWCOMPANYRECORDS=(SELECT SUBSTRING(NEWCOMPANYRECORDS,NEWCOMPANYPOSITION+2));
			END IF;
			   
			SET COMPANYHEADPOSITION = (SELECT LOCATE(',',COMPANYHEADNAME,CCD_LENGTH));
			IF (COMPANYHEADPOSITION=0) THEN
				SET CUSTCOMPANYHEADERNAME = COMPANYHEADNAME;
			ELSE
				SET CUSTCOMPANYHEADERNAME=(SELECT SUBSTRING(COMPANYHEADNAME,CCD_LENGTH,COMPANYHEADPOSITION-1));
				SET COMPANYHEADNAME=(SELECT SUBSTRING(COMPANYHEADNAME,COMPANYHEADPOSITION+1));
			END IF;
			   
			IF(OLD_COMPANYDTL != NEW_COMPANYDTL)THEN
				SET OLD_COMPANYDTL=(SELECT CONCAT(CUSTCOMPANYHEADERNAME, '=', OLD_COMPANYDTL));
				SET NEW_COMPANYDTL=(SELECT CONCAT(CUSTCOMPANYHEADERNAME, '=' ,NEW_COMPANYDTL));
				SET NEW_COMPANYS=(SELECT CONCAT(NEW_COMPANYS,',',NEW_COMPANYDTL));
				SET OLD_COMPANYS=(SELECT CONCAT(OLD_COMPANYS,',',OLD_COMPANYDTL));
			END IF;  
			   
			IF (COMPANYHEADPOSITION<=0) THEN
				LEAVE  loop_label;
			END IF;
			
		END LOOP;
		  
		SET COMPANY_LOCATION=(SELECT LOCATE(',', NEW_COMPANYS,1));
		SET NEW_COMPANYS=(SELECT SUBSTRING(NEW_COMPANYS,COMPANY_LOCATION+1));
		   
-- UPDATE QUERY FOR CUSTOMER_COMPANY_DETAILS (CUSTOMER_ID EXISTS)

		IF EXISTS(SELECT CUSTOMER_ID FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID=EX_CUSTOMER_ID) THEN

			INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES
			((SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
			(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='CUSTOMER_COMPANY_DETAILS'),
			OLD_COMPANYS,NEW_COMPANYS,USERSTAMP_ID,EX_CUSTOMER_ID);
			   
			UPDATE CUSTOMER_COMPANY_DETAILS SET CCD_COMPANY_NAME=EX_COMPANY_NAME, CCD_COMPANY_ADDR=EX_COMPANY_ADDR, CCD_POSTAL_CODE=EX_POSTAL_CODE, CCD_OFFICE_NO=EX_OFFICE_NO WHERE CUSTOMER_ID=EX_CUSTOMER_ID;
			SET EX_SUCCESSFLAG=1;
			   
		END IF;
			   
	END IF;
			
	IF NOT EXISTS(SELECT CUSTOMER_ID FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID=EX_CUSTOMER_ID) THEN
	
		IF EX_COMPANY_NAME IS NOT NULL OR EX_COMPANY_ADDR IS NOT NULL OR EX_POSTAL_CODE IS NOT NULL OR EX_OFFICE_NO IS NOT NULL THEN
		
			INSERT INTO CUSTOMER_COMPANY_DETAILS(CUSTOMER_ID, CCD_COMPANY_NAME, CCD_COMPANY_ADDR, CCD_POSTAL_CODE, CCD_OFFICE_NO) VALUES(EX_CUSTOMER_ID, EX_COMPANY_NAME, EX_COMPANY_ADDR, EX_POSTAL_CODE, EX_OFFICE_NO);
			SET EX_SUCCESSFLAG=1;
			
		END IF;

	END IF;	
		
	IF (EX_COMPANY_NAME IS NULL AND EX_COMPANY_ADDR IS NULL AND EX_POSTAL_CODE IS NULL AND EX_OFFICE_NO IS NULL) THEN
		
		IF EXISTS(SELECT CUSTOMER_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=EX_CUSTOMER_ID) THEN
			
			SET CCDID = (SELECT CCD_ID FROM CUSTOMER_COMPANY_DETAILS WHERE CUSTOMER_ID=EX_CUSTOMER_ID);
				
			CALL SP_SINGLE_TABLE_ROW_DELETION(9,CCDID,USERSTAMP,@FLAG);
				
			SET THID = (SELECT MAX(TH_ID) FROM TICKLER_HISTORY WHERE TTIP_ID = 9);
				
			UPDATE TICKLER_HISTORY SET CUSTOMER_ID=EX_CUSTOMER_ID WHERE TH_ID=THID;
				
			SET EX_SUCCESSFLAG=1;
				
		END IF;
		
	END IF;
	
	COMMIT;
	
END;