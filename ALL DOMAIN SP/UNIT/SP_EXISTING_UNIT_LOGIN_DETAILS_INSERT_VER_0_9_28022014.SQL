--version 0.9 --sdate:28/02/2014 --edate:28/02/2014 --issue:754 --comment:36 --doneby:RL	
--version 0.8 --sdate:27/02/2014 --edate:27/02/2014 --issue:754,346 --comment:22,250 --doneby:RL	
--version:0.7 --issue:346 --comment:203 --sadte:13/02/2014 --edate:13/02/2014 --doneby:RL
--version:0.6 --ISSUE NO:346 COMMENT NO:#192 sd:12/02/2014 --enddate:12/02/2014 --desc:CHANGED ONE CONDITION IF DOORCODE,WEBLOGIN & WEBPWD NULL MEANS NO UPDATION CAN BE DONE IN UNIT_LOGIN_DETAILS TABLE  DONE BY:DHIVYA.A
--version:0.5 --issue no:636 comment no:#47 sd:07/11/2013 --enddate:07/11/2013 --desc:CHANGED SP NAME DONE BY:DHIVYA.A
--version:0.4 --sd:22/10/2013 --enddate:22/10/2013 --desc:update userstamp in unit_account_details table DONE BY:RL
-- version :0.3 --startdate:29-07-2013 --enddate:29-07-2013 --desc: remove the row which contains only null values which updating the table which contains only non mandatory headers.  --done by :rajalakshmi.r --issue:575
-- version 0.2 --startdate:23/07/2013 --enddate:23/07/2013 --description:implemented rollback & commit done by --rajalakshmi.r
-- version 0.1 --startdate:2013-05-10 --description:unit login details (exisitng unit)-->loganathan
DROP PROCEDURE IF EXISTS SP_EXISTING_UNIT_LOGIN_DETAILS_INSERT;
CREATE PROCEDURE SP_EXISTING_UNIT_LOGIN_DETAILS_INSERT(
IN UNITNO SMALLINT(4),
IN DOORCODE VARCHAR(10),
IN WEBLOGIN VARCHAR(20),
IN WEBPWD VARCHAR(6),
IN USERSTAMP VARCHAR(50),
OUT FLAG INTEGER)
BEGIN 
--query for rollback command
    DECLARE OLDDOORCODE VARCHAR(10);
    DECLARE OLDWEBLOGIN VARCHAR(20);
    DECLARE OLDWEBPWD VARCHAR(6);
	DECLARE USERSTAMP_ID INTEGER(2);
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK; 
    END;
--set null for non mandatory fields
    IF DOORCODE='' THEN 
        SET DOORCODE=NULL;
    END IF;
    IF WEBLOGIN='' THEN
        SET WEBLOGIN=NULL;
    END IF;
    IF WEBPWD='' THEN
        SET WEBPWD=NULL;
    END IF;
    START TRANSACTION;
    SET FLAG = 0;
    CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
    SET OLDDOORCODE = (SELECT ULDTL_DOORCODE FROM UNIT_LOGIN_DETAILS WHERE UNIT_ID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO = UNITNO));
    SET OLDWEBLOGIN = (SELECT ULDTL_WEBLOGIN FROM UNIT_LOGIN_DETAILS WHERE UNIT_ID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO = UNITNO));
    SET OLDWEBPWD = (SELECT ULDTL_WEBPWD FROM UNIT_LOGIN_DETAILS WHERE UNIT_ID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO = UNITNO));
        
    SET DOORCODE=(SELECT(IF (OLDDOORCODE IS NOT NULL,OLDDOORCODE,DOORCODE)));
    SET WEBLOGIN=(SELECT (IF (OLDWEBLOGIN IS NOT NULL,OLDWEBLOGIN,WEBLOGIN)));
    SET WEBPWD=(SELECT (IF (OLDWEBPWD IS NOT NULL,OLDWEBPWD,WEBPWD)));
    
	IF  EXISTS(SELECT UNIT_ID FROM UNIT_LOGIN_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
        UPDATE UNIT_LOGIN_DETAILS SET ULDTL_DOORCODE=DOORCODE,ULDTL_WEBLOGIN=WEBLOGIN,ULDTL_WEBPWD=WEBPWD,ULD_ID=USERSTAMP_ID WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO);
		SET FLAG=1;
    END IF;
        
    IF NOT EXISTS(SELECT UNIT_ID FROM UNIT_LOGIN_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
        INSERT INTO UNIT_LOGIN_DETAILS (UNIT_ID,ULDTL_DOORCODE,ULDTL_WEBLOGIN,ULDTL_WEBPWD,ULD_ID)VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),DOORCODE,WEBLOGIN,WEBPWD,USERSTAMP_ID);
        SET FLAG = 1;
    END IF;
COMMIT;
END;