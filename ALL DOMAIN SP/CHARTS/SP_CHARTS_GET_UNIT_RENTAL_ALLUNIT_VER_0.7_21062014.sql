-- VER 0.1 TRACKER NO:595 COMMENT #39 STARTDATE:22/01/2014 ENDDATE:22/01/2014 DESC: This procedure is called in SP_CHARTS_BIZ_NET_REVENUE_ALLUNIT SP. DONE BY:MANIKANDAN.S
-- VER 0.2 TRACKER NO:595 COMMENT #48 STARTDATE:23/01/2014 ENDDATE:23/01/2014 DESC: Fixed issue in IF condition satisfying the logic. DONE BY:MANIKANDAN.S
-- VER 0.3 TRACKER NO:595 COMMENT # STARTDATE:29/01/2014 ENDDATE:29/01/2014 DESC:INCLUDED IF CONDITION,IF COUNT OF UNIT RENTAL IS NOT 0 THEN ONLY IT ENTERS INTO UNIT PAYMENT CALCULATION LOOP. DONE BY:MANIKANDAN.S
-- VER 0.4 TRACKER NO:595 COMMENT # STARTDATE:30/01/2014 ENDDATE:30/01/2014 DESC:FIXED ISSUE IN GETTING UNIT RENTAL.NOW GETTING ALL THE UNIT RENTAL MATCHING DATE CONDITION. DONE BY:MANIKANDAN.S
-- VER 0.5 TRACKER NO:817 COMMENT #35 STARTDATE:07/05/2014 ENDDATE:07/05/2014 DESC:CHANGES IN TEMP TABLE FOR DYNAMIC PURPOSE DONE BY:BHAVANI.R
-- VER 0.6 TRACKER NO:566 COMMENT #12 STARTDATE:09/06/2014 ENDDATE:09/06/2014 DESC:ADDED ROLLBACK AND COMMITI DONE BY:SASIKALA
-- VER 0.7 TRACKER NO:817 COMMENT #139 STARTDATE:21/06/2014 ENDDATE:21/06/2014 DESC:DROPPING TEMP TABLES IF ROLLBACK OCCURS DONE BY:SASIKALA

DROP PROCEDURE IF EXISTS SP_CHARTS_GET_UNIT_RENTAL_ALLUNIT;
CREATE PROCEDURE SP_CHARTS_GET_UNIT_RENTAL_ALLUNIT(IN FROM_DATE DATE, IN TO_DATE DATE,IN USERSTAMP VARCHAR(50),OUT TEMPTBL_UNIT_RENTAL_ALLUNIT TEXT)
BEGIN
DECLARE STARTDATE VARCHAR(3);
DECLARE YEAR      VARCHAR(10);
DECLARE NUMBMONTHS INT;
DECLARE V_COUNT INT DEFAULT 0;
DECLARE LI_UNIT_NO INT DEFAULT 0;
DECLARE LI_UD_PAYMENT INT DEFAULT 0;
DECLARE UNIT_START_DATE DATE;
DECLARE UNIT_END_DATE DATE;
DECLARE I INT DEFAULT 0;
DECLARE UNIT_RENTAL INT DEFAULT 0;
DECLARE MON INT DEFAULT 0;
DECLARE RSDATE DATE;
DECLARE DATE DATE;
DECLARE COUNT1 VARCHAR(25);
DECLARE UNIT_RENTAL_ALLUNIT_TEMP TEXT;
DECLARE TEMPTBL_UNIT_DETAILS TEXT;
DECLARE TEMPTBL_RENTAL_UNIT_DETAILS TEXT;
DECLARE USERSTAMP_ID INT;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
 ROLLBACK;
  IF (TEMPTBL_RENTAL_UNIT_DETAILS IS NOT NULL) THEN
 SET @DROP_TEMP_UNIT_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMPTBL_RENTAL_UNIT_DETAILS));
		PREPARE DROP_TEMP_UNIT_DETAILS_STMT FROM @DROP_TEMP_UNIT_DETAILS;
		EXECUTE DROP_TEMP_UNIT_DETAILS_STMT;
  END IF;
END;
START TRANSACTION;
--   TEMP TABLE NAME START
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	SET UNIT_RENTAL_ALLUNIT_TEMP=(SELECT CONCAT('TEMP_UNIT_RENTAL_ALLUNIT',SYSDATE()));
	SET TEMPTBL_UNIT_DETAILS=(SELECT CONCAT('TEMP_UNIT_DETAILS',SYSDATE()));
--    NAME FOR MAIN TEMP TABLE
	SET UNIT_RENTAL_ALLUNIT_TEMP=(SELECT REPLACE(UNIT_RENTAL_ALLUNIT_TEMP,' ',''));
	SET UNIT_RENTAL_ALLUNIT_TEMP=(SELECT REPLACE(UNIT_RENTAL_ALLUNIT_TEMP,'-',''));
	SET UNIT_RENTAL_ALLUNIT_TEMP=(SELECT REPLACE(UNIT_RENTAL_ALLUNIT_TEMP,':',''));
	SET TEMPTBL_UNIT_RENTAL_ALLUNIT=(SELECT CONCAT(UNIT_RENTAL_ALLUNIT_TEMP,'_',USERSTAMP_ID)); 
-- NAME FOR INTERMEDIATE TEMP TABLE
	SET TEMPTBL_UNIT_DETAILS=(SELECT REPLACE(TEMPTBL_UNIT_DETAILS,' ',''));
	SET TEMPTBL_UNIT_DETAILS=(SELECT REPLACE(TEMPTBL_UNIT_DETAILS,'-',''));
	SET TEMPTBL_UNIT_DETAILS=(SELECT REPLACE(TEMPTBL_UNIT_DETAILS,':',''));
	SET TEMPTBL_RENTAL_UNIT_DETAILS=(SELECT CONCAT(TEMPTBL_UNIT_DETAILS,'_',USERSTAMP_ID));
--   TEMP TABLE NAME END

-- TEMP TABLE FINAL, FOR SUM OF UNIT RENTAL ALL MONTH

  
      SET @CREATE_TEMP_UNIT_RENTAL_ALLUNIT=(SELECT CONCAT('CREATE TABLE ',TEMPTBL_UNIT_RENTAL_ALLUNIT,'(UNIT_NO SMALLINT(4) UNSIGNED ZEROFILL, UD_PAYMENT INT)'));
	PREPARE CREATE_TEMP_UNIT_RENTAL_ALLUNIT_STMT FROM @CREATE_TEMP_UNIT_RENTAL_ALLUNIT;
	EXECUTE CREATE_TEMP_UNIT_RENTAL_ALLUNIT_STMT;


    SET @CREATE_TEMP_UNIT_DETAILS=(SELECT CONCAT('CREATE TABLE ',TEMPTBL_RENTAL_UNIT_DETAILS,'(ID INT NOT NULL AUTO_INCREMENT,UNIT_NO SMALLINT(4) UNSIGNED ZEROFILL,UD_PAYMENT INT,UD_START_DATE DATE,UD_END_DATE DATE,PRIMARY KEY(ID))'));
	PREPARE CREATE_TEMP_UNIT_DETAILS_STMT FROM @CREATE_TEMP_UNIT_DETAILS;
	EXECUTE CREATE_TEMP_UNIT_DETAILS_STMT;

   	SET @INSERT_TEMP_UNIT_DETAILS=(SELECT CONCAT('INSERT INTO ',TEMPTBL_RENTAL_UNIT_DETAILS,' (UNIT_NO,UD_PAYMENT, UD_START_DATE, UD_END_DATE) SELECT UN.UNIT_NO, UD_PAYMENT, UD.UD_START_DATE, UD.UD_END_DATE FROM UNIT_DETAILS UD,UNIT UN WHERE UN.UNIT_ID=UD.UNIT_ID  AND UD.UD_OBSOLETE IS NULL AND UD.UD_NON_EI IS NULL AND UD.UD_END_DATE > CURDATE() AND ((','"',FROM_DATE,'"', ' BETWEEN UD.UD_START_DATE AND UD.UD_END_DATE) OR (','"',FROM_DATE,'"', ' <= UD.UD_END_DATE)) AND ((','"',TO_DATE,'"', ' BETWEEN UD.UD_START_DATE AND UD.UD_END_DATE) OR (','"',TO_DATE,'"',' >= UD.UD_START_DATE))'));
		PREPARE INSERT_TEMP_UNIT_DETAILS_STMT FROM @INSERT_TEMP_UNIT_DETAILS;
		EXECUTE INSERT_TEMP_UNIT_DETAILS_STMT;
		
	


SET @COUNT_TEMP_UNIT_DETAILS=(SELECT CONCAT('SELECT COUNT(*) INTO @VCOUNT FROM ',TEMPTBL_RENTAL_UNIT_DETAILS)); 
PREPARE COUNT_TEMP_UNIT_DETAILS_STMT FROM @COUNT_TEMP_UNIT_DETAILS;
EXECUTE COUNT_TEMP_UNIT_DETAILS_STMT;
SET V_COUNT=@VCOUNT;
SET NUMBMONTHS =MONTH(TO_DATE) - MONTH(FROM_DATE) + (12 * ( YEAR(TO_DATE) - YEAR(FROM_DATE)))+1;

SET STARTDATE = 01;
SET YEAR = YEAR(FROM_DATE);
SET MON = MONTH(FROM_DATE);
SET DATE= CONCAT(YEAR,'-',MON,'-',STARTDATE); 
IF(V_COUNT != 0) THEN
 L1:
 LOOP
  
  SET @SELECT_TEMP_UNIT_DETAILS=(SELECT CONCAT('SELECT UNIT_NO ,UD_PAYMENT,UD_START_DATE,UD_END_DATE INTO @LI_UNITNO ,@LI_UDPAYMENT,@UNIT_STARTDATE,@UNIT_ENDDATE FROM ',TEMPTBL_RENTAL_UNIT_DETAILS,' WHERE ID =',V_COUNT));
  PREPARE SELECT_TEMP_UNIT_DETAILS_STMT FROM @SELECT_TEMP_UNIT_DETAILS;
  EXECUTE SELECT_TEMP_UNIT_DETAILS_STMT;
  
   SET LI_UNIT_NO=@LI_UNITNO;
   SET LI_UD_PAYMENT=@LI_UDPAYMENT;
   SET UNIT_START_DATE=@UNIT_STARTDATE;
   SET UNIT_END_DATE=@UNIT_ENDDATE;

  SET I = 0;
  SET UNIT_RENTAL=0;
 
        L2: LOOP
        
          SET RSDATE = DATE_ADD(DATE, INTERVAL I MONTH);      
         
            IF(Rsdate BETWEEN DATE_FORMAT(unit_start_date,'%Y-%m-%01') AND DATE_FORMAT(unit_end_date,'%Y-%m-%31')) THEN
             SET UNIT_RENTAL = UNIT_RENTAL+LI_UD_PAYMENT;
              END IF;
           
            SET I = I+1;
          IF(I >= NUMBMONTHS) THEN
            LEAVE L2;
          END IF;  
        END LOOP L2;
        
     		SET @INSERT_TEMP_UNIT_RENTAL_ALLUNIT=(SELECT CONCAT('INSERT INTO ',TEMPTBL_UNIT_RENTAL_ALLUNIT,' (UNIT_NO,UD_PAYMENT)VALUES (',LI_UNIT_NO,',',UNIT_RENTAL,')'));
		PREPARE INSERT_TEMP_UNIT_RENTAL_ALLUNIT_STMT FROM @INSERT_TEMP_UNIT_RENTAL_ALLUNIT;
		EXECUTE INSERT_TEMP_UNIT_RENTAL_ALLUNIT_STMT;


  
 SET V_COUNT = V_COUNT - 1;
  IF (V_COUNT = 0) THEN
    LEAVE L1;
  END IF;  
 END LOOP L1;
END IF; 

	  SET @DROP_TEMP_UNIT_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMPTBL_RENTAL_UNIT_DETAILS));
		PREPARE DROP_TEMP_UNIT_DETAILS_STMT FROM @DROP_TEMP_UNIT_DETAILS;
		EXECUTE DROP_TEMP_UNIT_DETAILS_STMT;

 
COMMIT;
END;
/*
CALL SP_CHARTS_GET_UNIT_RENTAL_ALLUNIT('2013-12-01','2013-12-31','EXPATSINTEGRATED@GMAIL.COM',@TEMPTBL_UNIT_RENTAL_ALLUNIT);
SELECT @TEMPTBL_UNIT_RENTAL_ALLUNIT;
SELECT * FROM TEMP_UNIT_RENTAL_ALLUNIT20140621153246_2;
*/