DROP PROCEDURE IF EXISTS SP_EXPENSE_UNIT_INSERT;
CREATE PROCEDURE SP_EXPENSE_UNIT_INSERT(IN DESTINATIONSCHEMA VARCHAR(50))
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	SET @EXPUNIT_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_UNIT'));
	PREPARE EXPUNIT_DROPQUERYSTMT FROM @EXPUNIT_DROPQUERY;
	EXECUTE EXPUNIT_DROPQUERYSTMT;	
	SET @EXPUNIT_CREATEQUERY = (SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_UNIT(
	EU_ID INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	ECN_ID INTEGER NOT NULL,
	CUSTOMER_ID	INTEGER NULL,
	EU_INVOICE_DATE	DATE NOT NULL,	
	EU_AMOUNT	DECIMAL(7,2) NOT NULL,	
	EU_INVOICE_ITEMS TEXT NOT NULL,	
	EU_INVOICE_FROM	VARCHAR(200) NOT NULL,	
	EU_COMMENTS	TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	EU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EU_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES ',DESTINATIONSCHEMA,'.UNIT (UNIT_ID),
	FOREIGN KEY(ECN_ID) REFERENCES ',DESTINATIONSCHEMA,'.EXPENSE_CONFIGURATION (ECN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
	PREPARE EXPUNIT_CREATEQUERYSTMT FROM @EXPUNIT_CREATEQUERY;
	EXECUTE EXPUNIT_CREATEQUERYSTMT;	
	SET @EXPUNIT_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_UNIT(
	UNIT_ID, CUSTOMER_ID,ECN_ID, EU_INVOICE_DATE, EU_AMOUNT, EU_INVOICE_ITEMS, EU_INVOICE_FROM, EU_COMMENTS, ULD_ID,EU_TIMESTAMP)
	SELECT UNIT_NUMBERID,CUSTOMERID,ECNID,INVOICEDATE,AMOUNT,INVOICEITEMS,INVOICEFROM,COMMENTS,USERSTAMPID,TIME_STAMP
	FROM ',DESTINATIONSCHEMA,'.TEMP_EXPENSE_UNIT'));
	PREPARE EXPUNIT_INSERTQUERYSTMT FROM @EXPUNIT_INSERTQUERY;
	EXECUTE EXPUNIT_INSERTQUERYSTMT;
	SET FOREIGN_KEY_CHECKS=1;	
END;
