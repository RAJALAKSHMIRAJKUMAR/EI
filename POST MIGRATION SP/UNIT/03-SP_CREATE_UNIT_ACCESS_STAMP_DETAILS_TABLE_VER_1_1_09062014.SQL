DROP PROCEDURE IF EXISTS SP_CREATE_UNIT_ACCESS_STAMP_DETAILS_TABLE;
CREATE PROCEDURE SP_CREATE_UNIT_ACCESS_STAMP_DETAILS_TABLE(IN DESTINATIONSCHEMA VARCHAR(50))
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
	SET FOREIGN_KEY_CHECKS=0;
	SET @UASD_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.UNIT_ACCESS_STAMP_DETAILS'));
    PREPARE UASDDROPQUERY FROM @UASD_DROPQUERY;
    EXECUTE UASDDROPQUERY;
	SET @UASD_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.UNIT_ACCESS_STAMP_DETAILS(
	UASD_ID INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID INTEGER NOT NULL,
	USDT_ID INTEGER NULL,
	UASD_STAMPDUTYDATE DATE NULL,   
	UASD_STAMPDUTYAMT DECIMAL(6,2) NULL,   
	UASD_ACCESS_CARD INTEGER(7) UNIQUE NULL,   
	UASD_ACCESS_ACTIVE CHAR(1) NULL,   
	UASD_ACCESS_INVENTORY CHAR(1) NULL,   
	UASD_ACCESS_LOST CHAR(1) NULL,   
	URTD_ID INTEGER NULL,
	UASD_COMMENTS TEXT NULL,   
	ULD_ID INTEGER(2) NOT NULL,   
	UASD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(UASD_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES ',DESTINATIONSCHEMA,'.UNIT(UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE UASDCREATEQUERY FROM @UASD_CREATEQUERY;
    EXECUTE UASDCREATEQUERY;
	SET FOREIGN_KEY_CHECKS=1;
	COMMIT;
END;
