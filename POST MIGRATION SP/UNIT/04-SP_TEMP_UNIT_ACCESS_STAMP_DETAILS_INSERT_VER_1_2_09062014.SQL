DROP PROCEDURE IF EXISTS SP_TEMP_UNIT_ACCESS_STAMP_DETAILS_INSERT;
CREATE PROCEDURE SP_TEMP_UNIT_ACCESS_STAMP_DETAILS_INSERT(IN DESTINATIONSCHEMA VARCHAR(50))
BEGIN
	DECLARE MINUASDID INTEGER;
	DECLARE MAXUASDID INTEGER;
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
	SET @TEMP_UASD_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS'));
	PREPARE TEMP_UASD_DROPQUERYSTMT FROM @TEMP_UASD_DROPQUERY;
	EXECUTE TEMP_UASD_DROPQUERYSTMT;
	SET @TEMP_UASD_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS(
    LIKE ',DESTINATIONSCHEMA,'.UNIT_ACCESS_STAMP_DETAILS)'));
	PREPARE TEMP_UASD_CREATEQUERYSTMT FROM @TEMP_UASD_CREATEQUERY;
	EXECUTE TEMP_UASD_CREATEQUERYSTMT;
	SET @TEMP_UASD_ALTERQUERY = (SELECT CONCAT('ALTER TABLE ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS
	CHANGE COLUMN ULD_ID UASD_USERSTAMP VARCHAR(50)'));
	PREPARE TEMP_UASD_ALTERQUERYSTMT FROM @TEMP_UASD_ALTERQUERY;
	EXECUTE TEMP_UASD_ALTERQUERYSTMT;
	SET @TEMP_UASDALTERQUERY = (SELECT CONCAT('ALTER TABLE ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS
	ADD COLUMN ULD_ID INTEGER(2)'));
	PREPARE TEMP_UASDALTERQUERYSTMT FROM @TEMP_UASDALTERQUERY;
	EXECUTE TEMP_UASDALTERQUERYSTMT;
	SET @TEMP_UASDALTERQUERY = (SELECT CONCAT('ALTER TABLE ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS
	MODIFY COLUMN UASD_TIMESTAMP VARCHAR(50)'));
	PREPARE TEMP_UASDALTERQUERYSTMT FROM @TEMP_UASDALTERQUERY;
	EXECUTE TEMP_UASDALTERQUERYSTMT;
	SET @TEMP_UASD_INSERQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,USDT_ID,UASD_STAMPDUTYDATE,UASD_STAMPDUTYAMT,
    UASD_ACCESS_CARD,UASD_ACCESS_ACTIVE,UASD_ACCESS_INVENTORY,UASD_ACCESS_LOST,URTD_ID,UASD_COMMENTS,UASD_USERSTAMP,UASD_TIMESTAMP)
	SELECT U.UNIT_ID, USDT.USDT_ID, TUSF.UNIT_STAMPDUTYDATE, TUSF.UNIT_STAMPDUTYAMT, TUSF.UNIT_ACCESS_CARD,
    TUSF.UNIT_ACCESS_ACTIVE, TUSF.UNIT_ACCESS_INVENTORY,TUSF.UNIT_ACCESS_LOST, URTD.URTD_ID, TUSF.UNIT_COMMENTS,
    TUSF.USERSTAMP,TUSF.TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_UNIT_SCDB_FORMAT AS TUSF LEFT JOIN ',DESTINATIONSCHEMA,'.UNIT AS U ON U.UNIT_NO=TUSF.UNIT_NO LEFT JOIN ',DESTINATIONSCHEMA,'.UNIT_ROOM_TYPE_DETAILS AS
    URTD ON URTD.URTD_ROOM_TYPE=TUSF.UNIT_ROOM_TYPE LEFT JOIN ',DESTINATIONSCHEMA,'.UNIT_STAMP_DUTY_TYPE AS USDT ON USDT.USDT_DATA=TUSF.UNIT_STAMPDUTYTYPE WHERE
    TUSF.UNIT_ACCESS_CARD IS NOT NULL OR TUSF.UNIT_STAMPDUTYDATE IS NOT NULL OR TUSF.UNIT_STAMPDUTYTYPE IS NOT NULL OR
    TUSF.UNIT_STAMPDUTYAMT IS NOT NULL OR TUSF.UNIT_ROOM_TYPE IS NOT NULL OR TUSF.UNIT_COMMENTS IS NOT NULL'));
	PREPARE TEMP_UASD_INSERQUERYSTMT FROM @TEMP_UASD_INSERQUERY;
	EXECUTE TEMP_UASD_INSERQUERYSTMT;
	SET @MINID =(SELECT CONCAT('SELECT MIN(UASD_ID)INTO @UASD_MIN_ID FROM ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS'));
	PREPARE MINIDSTMT FROM @MINID;
	EXECUTE MINIDSTMT;
	SET MINUASDID = @UASD_MIN_ID;
	SET @MAXID =(SELECT CONCAT('SELECT MAX(UASD_ID)INTO @UASD_MAX_ID FROM ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS'));
	PREPARE MAXIDSTMT FROM @MAXID;
	EXECUTE MAXIDSTMT;
	SET MAXUASDID = @UASD_MAX_ID;
	WHILE (MINUASDID <= MAXUASDID) DO
		SET @ULDID = NULL;
		SET @USERID =(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=
		(SELECT UASD_USERSTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=',MINUASDID,')'));
		PREPARE USERIDSTMT FROM @USERID;
		EXECUTE USERIDSTMT;
		SET @UPDATEUASD = (SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_UNIT_ACCESS_STAMP_DETAILS SET ULD_ID=@ULDID WHERE UASD_ID=',MINUASDID));
		PREPARE UPDATEUASDSTMT FROM @UPDATEUASD;
		EXECUTE UPDATEUASDSTMT;
		SET MINUASDID = MINUASDID+1;
	END WHILE;
	COMMIT;
END;
