DROP PROCEDURE IF EXISTS SP_TEMP_CUSTOMER_ENTRY;
CREATE PROCEDURE SP_TEMP_CUSTOMER_ENTRY(IN SOURCESCHEMA VARCHAR(50),DESTINATIONSCHEMA VARCHAR(50))
BEGIN
DECLARE MAX_CUSTOMER INT;
DECLARE MIN_CUSTOMER INT;
DECLARE REC_VER INT;
DECLARE RE INT;
DECLARE MAX_CED_ID INT;
DECLARE MIN_CED_ID INT;
DECLARE STARTDATE DATE;
DECLARE ENDDATE DATE;
DECLARE PRETERMINATEDATE DATE;
DECLARE ENTRY_REC_VER INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET @SSCHEMA=SOURCESCHEMA;
SET @DSCHEMA=DESTINATIONSCHEMA;
SET @MAX_CUSTOMER_INSERT =(SELECT CONCAT('SELECT MAX(CC_CUST_ID)INTO @ENTRY_MAX_ID FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT'));
PREPARE MAXCUSTOMERSTMT FROM @MAX_CUSTOMER_INSERT;
EXECUTE MAXCUSTOMERSTMT;
SET MAX_CUSTOMER=@ENTRY_MAX_ID;
SET @MIN_CUSTOMER_INSERT =(SELECT CONCAT('SELECT MIN(CC_CUST_ID) INTO @ENTRY_MIN_ID FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT'));
PREPARE MINCUSTOMERSTMT FROM @MIN_CUSTOMER_INSERT;
EXECUTE MINCUSTOMERSTMT;
SET MIN_CUSTOMER=@ENTRY_MIN_ID ;
SET RE=1;
CALL SP_TEMP_CUSTOMER_SCDB_FORMAT(@SSCHEMA,@DSCHEMA);
SET @DROPTEMPENTRY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS'));
PREPARE DROPTEMPENTRYSTMT FROM @DROPTEMPENTRY;
EXECUTE DROPTEMPENTRYSTMT;
SET @CREATETEMPENTRY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS
(CED_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
UNIT_ID INTEGER NOT NULL,
UASD_ID INTEGER NOT NULL,
CED_REC_VER INTEGER NOT NULL,
CED_STARTDATE DATE NOT NULL,
CED_ENDDATE DATE NOT NULL,
CED_PRETERMINATE_DATE DATE NULL,
CED_SD_STIME INTEGER NOT NULL,
CED_SD_ETIME INTEGER NOT NULL,
CED_ED_STIME INTEGER NOT NULL,
CED_ED_ETIME INTEGER NOT NULL,
CED_LEASE_PERIOD VARCHAR(30) NULL,
CED_QUARTERS DECIMAL(5,2) NULL,
CED_EXTENSION CHAR(1) NULL,
CED_RECHECKIN CHAR(1)NULL,
CED_PRETERMINATE CHAR(1) NULL,    
CED_PROCESSING_WAIVED CHAR(1) NULL,
CED_PRORATED CHAR(1) NULL,
CED_NOTICE_PERIOD TINYINT(1) NULL,    
CED_NOTICE_START_DATE DATE NULL,    
CED_CANCEL_DATE    DATE NULL,
CED_COMMENTS TEXT NULL,
CED_USERSTAMP VARCHAR(50) NOT NULL,    
CED_TIMESTAMP TIMESTAMP NOT NULL,
PRIMARY KEY(CED_ID))ENGINE=MYISAM'));
PREPARE CREATETEMPENTRYSTMT FROM @CREATETEMPENTRY;
EXECUTE CREATETEMPENTRYSTMT;
WHILE MIN_CUSTOMER<= MAX_CUSTOMER DO
SET @INSERT_TEMP_ENTRY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS(CUSTOMER_ID,UNIT_ID,UASD_ID,CED_REC_VER,CED_STARTDATE,CED_ENDDATE,CED_PRETERMINATE_DATE, CED_SD_STIME, CED_SD_ETIME, CED_ED_STIME, CED_ED_ETIME,CED_LEASE_PERIOD,
		CED_QUARTERS,CED_EXTENSION,CED_PRETERMINATE,CED_NOTICE_PERIOD,CED_NOTICE_START_DATE,CED_CANCEL_DATE,CED_PROCESSING_WAIVED, CED_USERSTAMP)
		SELECT C2.CC_CUST_ID,U.UNIT_ID,U2.UASD_ID,C2.CC_REC_VER,C2.CC_STARTDATE,C2.CC_ENDDATE,C2.CC_PRE_TERMINATE_DATE,19, 20, 7,
		8,C2.CC_LEASE_PERIOD,C2.CC_QUARTERS,C2.CC_EXTENSION,C2.CC_PRETERMINATE,C2.CC_NOTICE_PERIOD,
		C2.CC_NOTICE_START_DATE,C2.CC_CANCEL_DATE,C2.CC_PROCESSING_WAIVED,C2.USERSTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT C2,',DESTINATIONSCHEMA,'.UNIT_ACCESS_STAMP_DETAILS U2,',DESTINATIONSCHEMA,'.UNIT U,',DESTINATIONSCHEMA,'.UNIT_ROOM_TYPE_DETAILS URTD WHERE CC_GUEST_CARD_NO IS NULL
		AND U.UNIT_ID=U2.UNIT_ID AND URTD.URTD_ID=U2.URTD_ID AND U.UNIT_NO=C2.CC_UNIT_NO AND C2.CC_ROOMTYPE=URTD.URTD_ROOM_TYPE AND C2.CC_CUST_ID=',MIN_CUSTOMER,' ORDER BY C2.CC_REC_VER'));
		PREPARE INSERT_TEMP_ENTRY_STMT FROM @INSERT_TEMP_ENTRY;
		EXECUTE INSERT_TEMP_ENTRY_STMT;        
		SET @MAXCEDID=(SELECT CONCAT('SELECT MAX(CED_ID)INTO @RECMAXID FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=',MIN_CUSTOMER));
		PREPARE MAXCEDIDSTMT FROM @MAXCEDID;
		EXECUTE MAXCEDIDSTMT;
		SET MAX_CED_ID=@RECMAXID;
		SET @MINCEDID=(SELECT CONCAT('SELECT MIN(CED_ID)INTO @RECMINID FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=',MIN_CUSTOMER));
		PREPARE MINCEDIDSTMT FROM @MINCEDID;
		EXECUTE MINCEDIDSTMT;
		SET MIN_CED_ID=@RECMINID;
		SET RE=1;		
		WHILE MIN_CED_ID<=MAX_CED_ID DO
		SET @UPDATECUSTOMERENTRY=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS SET CED_REC_VER=',RE, ' WHERE CED_ID=',MIN_CED_ID));
		PREPARE UPDATECUSTOMERENTRYSTMT FROM @UPDATECUSTOMERENTRY;
		EXECUTE UPDATECUSTOMERENTRYSTMT;		
		SET @STARTDATESTMT=(SELECT CONCAT('SELECT CED_STARTDATE INTO @SDATE FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=(',MIN_CED_ID,'+1) AND IF(CED_PRETERMINATE_DATE IS NOT NULL,CED_PRETERMINATE_DATE>CED_STARTDATE,CED_ENDDATE>CED_STARTDATE)'));
		PREPARE ENTRYSTARTDATESTMT FROM @STARTDATESTMT;
		EXECUTE ENTRYSTARTDATESTMT;
		SET STARTDATE=@SDATE;		
		SET @PRETERMINATEDATESTMT=(SELECT CONCAT('SELECT CED_PRETERMINATE_DATE INTO @PDATE FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=',MIN_CED_ID ));
		PREPARE ENTRYPRETERMINATESTMT FROM @PRETERMINATEDATESTMT;
		EXECUTE ENTRYPRETERMINATESTMT;
		SET PRETERMINATEDATE=@PDATE;		
		IF PRETERMINATEDATE IS NOT NULL THEN		
			SET @PRETERMINATEDATESTMT=(SELECT CONCAT('SELECT CED_PRETERMINATE_DATE INTO @PREDATE FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=',MIN_CED_ID ));
			PREPARE ENTRYPREDATESTMT FROM @PRETERMINATEDATESTMT;
			EXECUTE ENTRYPREDATESTMT;
			SET ENDDATE=@PREDATE;
		ELSE
			SET @ENDDATEDATESTMT=(SELECT CONCAT('SELECT CED_ENDDATE INTO @EDATE FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=',MIN_CED_ID));
			PREPARE ENTRYENDATESTMT FROM @ENDDATEDATESTMT;
			EXECUTE ENTRYENDATESTMT;
			SET ENDDATE=@EDATE;
		END IF;		
		IF (STARTDATE>ENDDATE)THEN
			SET @UPDATEENTRYRECHECKIN=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS SET CED_RECHECKIN=','"X"',' WHERE CED_ID=(',MIN_CED_ID,'+1)'));
			PREPARE UPDATEENTRYRECHECKINSTMT FROM @UPDATEENTRYRECHECKIN;
			EXECUTE UPDATEENTRYRECHECKINSTMT;
		END IF;
		SET RE=RE+1;
		SET MIN_CED_ID=MIN_CED_ID+1;
	END WHILE;
SET MIN_CUSTOMER=MIN_CUSTOMER+1;
END WHILE;
COMMIT;
END;
