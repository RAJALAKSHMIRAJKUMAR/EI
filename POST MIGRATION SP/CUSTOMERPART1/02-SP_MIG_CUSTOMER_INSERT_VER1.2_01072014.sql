DROP PROCEDURE IF EXISTS SP_MIG_CUSTOMER_INSERT;
CREATE PROCEDURE SP_MIG_CUSTOMER_INSERT(IN SOURCESCHEMA VARCHAR(50),IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(100))
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
DECLARE COMPANYNAME VARCHAR(50);
DECLARE COMPANYADDR VARCHAR(50);
DECLARE POSTALCODE VARCHAR(6);
DECLARE OFFICENO VARCHAR(8);
DECLARE MINCUSTOMERID INTEGER;
DECLARE MAXCUSTOMERID INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET @SSCHEMA=SOURCESCHEMA;
SET @DSCHEMA=DESTINATIONSCHEMA;
	SET FOREIGN_KEY_CHECKS=0;
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
	PREPARE LOGINID FROM @LOGIN_ID;
	EXECUTE LOGINID;
	SET @CALL_CUS_SCDB_FORMAT=(SELECT CONCAT('CALL ',SOURCESCHEMA,'.SP_TEMP_CUSTOMER_SCDB_FORMAT(@SSCHEMA,@DSCHEMA)'));
	PREPARE CALLCUSSCDBFORMAT FROM @CALL_CUS_SCDB_FORMAT;
	EXECUTE CALLCUSSCDBFORMAT;
    SET @DROP_MIG_CUSTOMER=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_MIG_CUSTOMER'));
	PREPARE DMIGCUSTOMER FROM @DROP_MIG_CUSTOMER;
	EXECUTE DMIGCUSTOMER;
	SET @CREATE_MIG_CUSTOMER=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_MIG_CUSTOMER(CUSTOMERID INTEGER,CUSTOMER_FIRST_NAME CHAR(30),CUSTOMER_LAST_NAME CHAR(30))'));
	PREPARE CMIGCUSTOMER FROM @CREATE_MIG_CUSTOMER;
	EXECUTE CMIGCUSTOMER;
	SET @INSERT_MIG_CUSTOMER=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_MIG_CUSTOMER(CUSTOMERID,CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME)SELECT DISTINCT(CC_CUST_ID),CC_FIRST_NAME,CC_LAST_NAME FROM 
	CUSTOMER_SCDB_FORMAT'));
	PREPARE INMIGCUSTOMER FROM @INSERT_MIG_CUSTOMER;
	EXECUTE INMIGCUSTOMER;
	SET @UPDATE_MIG_CUSTOMER=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_MIG_CUSTOMER SET CUSTOMER_LAST_NAME=CUSTOMER_FIRST_NAME WHERE CUSTOMER_LAST_NAME IS NULL'));
	PREPARE UPMIGCUSTOMER FROM @UPDATE_MIG_CUSTOMER;
	EXECUTE UPMIGCUSTOMER;
	SET FOREIGN_KEY_CHECKS=0;
	SET START_TIME=(SELECT CURTIME());
	SET FOREIGN_KEY_CHECKS=0;
	SET @DROPCUSTOMER=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.CUSTOMER'));
	PREPARE DRCUSTOMER FROM @DROPCUSTOMER;
	EXECUTE DRCUSTOMER;
	SET @CREATECUSTOMER=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.CUSTOMER(
	CUSTOMER_ID	INTEGER NOT NULL AUTO_INCREMENT,
	CUSTOMER_FIRST_NAME	CHAR(30) NOT NULL,	
	CUSTOMER_LAST_NAME	CHAR(30) NOT NULL,
	PRIMARY KEY(CUSTOMER_ID))'));
	PREPARE CRCUSTOMER FROM @CREATECUSTOMER;
	EXECUTE CRCUSTOMER;
	SET @INSERTCUSTOMER=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.CUSTOMER SELECT distinct(CUSTOMERID),CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME FROM ',
	DESTINATIONSCHEMA,'.TEMP_MIG_CUSTOMER'));
	PREPARE INCUSTOMER FROM @INSERTCUSTOMER;
	EXECUTE INCUSTOMER;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @SCDBCUSTOMER=(SELECT CONCAT('SELECT DISTINCT COUNT(DISTINCT(CC_CUST_ID))INTO @COUNT_SCDB_CUSTOMER FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT WHERE CC_FIRST_NAME IS NOT NULL AND CC_LAST_NAME IS NOT NULL'));
	PREPARE COUNTSCDBCUSTOMER FROM @SCDBCUSTOMER;
	EXECUTE COUNTSCDBCUSTOMER;
	SET @SPLITTEDCUSTOMERCOUNT=(SELECT CONCAT('SELECT COUNT(*)INTO @COUNT_SPLITTED_CUSTOMER FROM ',DESTINATIONSCHEMA,'.CUSTOMER'));
	PREPARE COUNTSPLITTIEDCUSTOMER FROM @SPLITTEDCUSTOMERCOUNT;
	EXECUTE COUNTSPLITTIEDCUSTOMER;
	SET @REJECTION_COUNT=(@COUNT_SCDB_CUSTOMER-@COUNT_SPLITTED_CUSTOMER);
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_CUSTOMER WHERE PREASP_DATA='CUSTOMER';
	SET FOREIGN_KEY_CHECKS=0;
    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER'),@COUNT_SPLITTED_CUSTOMER,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CUSTOMER'),DURATION,@REJECTION_COUNT,@ULDID);
	SET FOREIGN_KEY_CHECKS=0;
	SET START_TIME=(SELECT CURTIME());
	SET @DROPCOMPANYDETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS'));
	PREPARE DRCUSTOMERCOMPANY FROM @DROPCOMPANYDETAILS;
	EXECUTE DRCUSTOMERCOMPANY;
	SET @CREATECUSTOMERCOMPANYDETAILS=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS(
	CCD_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CUSTOMER_ID INTEGER NOT NULL,
	CCD_COMPANY_NAME VARCHAR(50) NULL,	
	CCD_COMPANY_ADDR VARCHAR(50) NULL,	
	CCD_POSTAL_CODE	VARCHAR(6) NULL,	
	CCD_OFFICE_NO VARCHAR(8) NULL,	
	PRIMARY KEY(CCD_ID),
	FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID))'));
	PREPARE CRCUSTOMERCOMPANY FROM @CREATECUSTOMERCOMPANYDETAILS;
	EXECUTE CRCUSTOMERCOMPANY;
	SET @INSERTCUSTOMERCOMPANY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS(CUSTOMER_ID,CCD_COMPANY_NAME,CCD_COMPANY_ADDR,CCD_POSTAL_CODE,
	CCD_OFFICE_NO)
    SELECT  CSF.CC_CUST_ID, CSF.CC_COMPANY_NAME, CSF.CC_COMPANY_ADDR, CSF.CC_POSTAL_CODE, CSF.CC_OFFICE_NO FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT CSF WHERE (CSF.CC_COMPANY_NAME IS NOT NULL OR CSF.CC_COMPANY_ADDR IS NOT NULL OR CSF.CC_POSTAL_CODE IS NOT NULL OR CSF.CC_OFFICE_NO IS NOT NULL) GROUP BY CSF.CC_CUST_ID'));
	PREPARE INCUSCOMPANY FROM @INSERTCUSTOMERCOMPANY;
	EXECUTE INCUSCOMPANY;
	SET MINCUSTOMERID=(SELECT MIN(CC_CUST_ID) FROM CUSTOMER_SCDB_FORMAT);
	SET MAXCUSTOMERID=(SELECT MAX(CC_CUST_ID) FROM CUSTOMER_SCDB_FORMAT);
	WHILE MINCUSTOMERID<=MAXCUSTOMERID DO
	SET COMPANYNAME=(SELECT CC_COMPANY_NAME FROM CUSTOMER_SCDB_FORMAT WHERE CC_CUST_ID=MINCUSTOMERID AND CC_REC_VER=(SELECT MAX(CC_REC_VER) FROM CUSTOMER_SCDB_FORMAT WHERE CC_COMPANY_NAME IS NOT NULL));
	IF COMPANYNAME IS NOT NULL THEN
	SET @UPDATE_COMP_NAME=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS SET CCD_COMPANY_NAME=','"',COMPANYNAME,'"',' WHERE CUSTOMER_ID=',MINCUSTOMERID));
	PREPARE UPDATE_COMP_NAME_STMT FROM @UPDATE_COMP_NAME;
	EXECUTE UPDATE_COMP_NAME_STMT;
	END IF;
	SET  COMPANYADDR=(SELECT CC_COMPANY_ADDR FROM CUSTOMER_SCDB_FORMAT WHERE CC_CUST_ID=MINCUSTOMERID AND CC_REC_VER=(SELECT MAX(CC_REC_VER) FROM CUSTOMER_SCDB_FORMAT WHERE CC_COMPANY_ADDR IS NOT NULL));
	IF COMPANYADDR IS NOT NULL THEN
	SET @UPDATE_COMPANY_ADDR=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS SET CCD_COMPANY_ADDR=','"',COMPANYADDR,'"',' WHERE CUSTOMER_ID=',MINCUSTOMERID));
	PREPARE UPDATE_COMPANY_ADDR_STMT FROM @UPDATE_COMPANY_ADDR;
	EXECUTE UPDATE_COMPANY_ADDR_STMT;
	END IF;
	SET POSTALCODE=(SELECT CC_POSTAL_CODE FROM CUSTOMER_SCDB_FORMAT WHERE CC_CUST_ID=MINCUSTOMERID AND CC_REC_VER=(SELECT MAX(CC_REC_VER) FROM CUSTOMER_SCDB_FORMAT WHERE CC_POSTAL_CODE IS NOT NULL)); 
	IF POSTALCODE IS NOT NULL THEN
	SET @UPDATE_POSTAL_CODE=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS SET CCD_POSTAL_CODE=','"',POSTALCODE,'"',' WHERE CUSTOMER_ID=',MINCUSTOMERID));
	PREPARE UPDATE_POSTAL_CODE_STMT FROM @UPDATE_POSTAL_CODE;
	EXECUTE UPDATE_POSTAL_CODE_STMT;
	END IF;
	SET OFFICENO=(SELECT CC_OFFICE_NO FROM CUSTOMER_SCDB_FORMAT WHERE CC_CUST_ID=MINCUSTOMERID AND CC_REC_VER=(SELECT MAX(CC_REC_VER) FROM CUSTOMER_SCDB_FORMAT WHERE CC_OFFICE_NO IS NOT NULL)); 
	IF  OFFICENO IS NOT NULL THEN
	SET @UPDATE_OFFICE_NO=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS SET CCD_OFFICE_NO=','"',OFFICENO,'"',' WHERE CUSTOMER_ID=',MINCUSTOMERID));
	PREPARE UPDATE_OFFICE_NO_STMT FROM @UPDATE_OFFICE_NO;
	EXECUTE UPDATE_OFFICE_NO_STMT;
	END IF;
	SET MINCUSTOMERID=MINCUSTOMERID+1;
	END WHILE;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @VW_CUS_COMPANY=(SELECT CONCAT('CREATE OR REPLACE VIEW ',DESTINATIONSCHEMA,'.VW_CUSTOMER_COMPANY_DETAILS AS SELECT  CSF.CC_CUST_ID, CSF.CC_COMPANY_NAME, CSF.CC_COMPANY_ADDR, CSF.CC_POSTAL_CODE, CSF.CC_OFFICE_NO FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT CSF WHERE (CSF.CC_COMPANY_NAME IS NOT NULL OR CSF.CC_COMPANY_ADDR IS NOT NULL OR CSF.CC_POSTAL_CODE IS NOT NULL OR CSF.CC_OFFICE_NO IS NOT NULL) GROUP BY CSF.CC_CUST_ID'));
	PREPARE VWCUSCOMPANY FROM @VW_CUS_COMPANY;
	EXECUTE VWCUSCOMPANY;
	SET @COUNTSCDBCCD=(SELECT CONCAT('SELECT COUNT(*)INTO @COUNT_SCDB_CCD FROM ',DESTINATIONSCHEMA,'.VW_CUSTOMER_COMPANY_DETAILS'));
	PREPARE COUNTCCD FROM @COUNTSCDBCCD;
	EXECUTE COUNTCCD;
	SET @COUNTSPLITTIEDCCD=(SELECT CONCAT('SELECT COUNT(*)INTO @COUNT_SPLITTIED_CCD FROM ',DESTINATIONSCHEMA,'.CUSTOMER_COMPANY_DETAILS'));
	PREPARE SPLITTEDCCD FROM @COUNTSPLITTIEDCCD;
	EXECUTE SPLITTEDCCD;
	SET @REJECTION_COUNT=(@COUNT_SCDB_CCD-@COUNT_SPLITTIED_CCD);
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_CCD WHERE PREASP_DATA='CUSTOMER_COMPANY_DETAILS';
	SET FOREIGN_KEY_CHECKS=0;
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_COMPANY_DETAILS'),@COUNT_SPLITTIED_CCD,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER_COMPANY_DETAILS'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CUSTOMER'),DURATION,@REJECTION_COUNT,@ULDID);
	SET FOREIGN_KEY_CHECKS=1;
	SET @DROPTEMPCUSTOMER=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_MIG_CUSTOMER'));
	PREPARE DRTEMPCUSTOMER FROM @DROPTEMPCUSTOMER;
	EXECUTE DRTEMPCUSTOMER;
	SET @DROPVIEWCUSTOMERCMPANY=(SELECT CONCAT('DROP VIEW IF EXISTS ',DESTINATIONSCHEMA,'.VW_CUSTOMER_COMPANY_DETAILS'));
	PREPARE DROPVIEWCUSTOMERCMPANYSTMT FROM @DROPVIEWCUSTOMERCMPANY;
	EXECUTE DROPVIEWCUSTOMERCMPANYSTMT;
	COMMIT;
END;
