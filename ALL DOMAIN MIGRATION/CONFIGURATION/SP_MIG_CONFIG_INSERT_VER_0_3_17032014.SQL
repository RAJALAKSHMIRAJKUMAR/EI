-- version:0.3 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--    version:0.2 --    sdate:25/02/2014 --    edate:25/02/2014 --    issue:750 --    desc:getting userstamp n time stamp from db & userstamp changed as uld_id --    doneby:RL
--    version:0.1 --    sdate:20/02/2014 --    edate:21/02/2014 --    issue:750 --    desc:Implementing audit table insert --    doneby:RL
DROP PROCEDURE IF EXISTS SP_MIG_CONFIG_INSERT;
CREATE PROCEDURE SP_MIG_CONFIG_INSERT(IN CONFIG_USERSTAMP VARCHAR(50))
BEGIN
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	SET FOREIGN_KEY_CHECKS=0;
--    1.QUERY FOR CREATE TEMP_CUSTOMER_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_CUSTOMER_CONFIGURATION;
	CREATE TABLE TEMP_CUSTOMER_CONFIGURATION(
	TCCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TCCN_DATA TEXT NOT NULL,
	TCCN_INITIALIZE_FLAG	CHAR(1) NULL,
	TCCN_USERSTAMP VARCHAR(50)NULL,
	TCCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TCCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
--     QUERY FOR INSERT TEMP_CUSTOMER_CONFIGURATION
	INSERT INTO TEMP_CUSTOMER_CONFIGURATION(TCCN_DATA,CGN_ID,TCCN_INITIALIZE_FLAG,TCCN_USERSTAMP,TCCN_TIMESTAMP) (SELECT DISTINCT(DATA),CGN_ID,INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,33,39,47,50,53,54));
--     QUERY FOR UPDATE TEMP_CUSTOMER_CONFIGURATION
	UPDATE TEMP_CUSTOMER_CONFIGURATION SET TCCN_USERSTAMP='expatsintegrated@gmail.com' WHERE TCCN_USERSTAMP IS NULL;
--     QUERY FOR CREATE CUSTOMER_CONFIGURATION
	DROP TABLE IF EXISTS CUSTOMER_CONFIGURATION;
	CREATE TABLE CUSTOMER_CONFIGURATION(
	CCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	CCN_DATA TEXT NOT NULL,
	CCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	CCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(CCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--    QUERY FOR INSERT VALUES IN CUSTOMER_CONFIGURATION TABLE
	INSERT INTO CUSTOMER_CONFIGURATION(CCN_DATA,CGN_ID,CCN_INITIALIZE_FLAG,ULD_ID,CCN_TIMESTAMP) 
	(SELECT TCCN.TCCN_DATA,TCCN.CGN_ID,TCCN.TCCN_INITIALIZE_FLAG,ULD.ULD_ID,TCCN.TCCN_TIMESTAMP FROM TEMP_CUSTOMER_CONFIGURATION TCCN, USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TCCN.TCCN_USERSTAMP);
	DROP TABLE IF EXISTS TEMP_CUSTOMER_CONFIGURATION;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--    COUNT CHECKING FOR CUSTOMER_CONFIGURATION DETAILS
	SET @COUNT_CUSTOMER_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,33,39,47,50,53,54));
	SET @COUNT_SPLITING_CUSTOMER_CONFIGURATION = (SELECT COUNT(*) FROM CUSTOMER_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_CUSTOMER_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_CUSTOMER_CONFIGURATION);
--    QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_CUSTOMER_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='CUSTOMER_CONFIGURATION';
--    QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_CONFIGURATION'),@COUNT_SPLITING_CUSTOMER_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--    2.QUERY FOR CREATE UNIT_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS UNIT_CONFIGURATION;
	CREATE TABLE UNIT_CONFIGURATION(
	UCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	UCN_DATA TEXT NOT NULL,
	UCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	UCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(UCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--    QUERY FOR INSERT VALUES IN UNIT_CONFIGURATION TABLE
	INSERT INTO UNIT_CONFIGURATION(CGN_ID,UCN_DATA,UCN_INITIALIZE_FLAG,ULD_ID) (SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID FROM CONFIG_SQL_FORMAT CSQL, USER_LOGIN_DETAILS ULD WHERE  CSQL.DATA IS NOT NULL AND CSQL.CGN_ID=32 AND CSQL.USER_STAMP=ULD.ULD_LOGINID);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--    COUNT CHECKING FOR UNIT_CONFIGURATION DETAILS
	SET @COUNT_UNIT_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT WHERE DATA IS NOT NULL AND CGN_ID=32);
	SET @COUNT_SPLITING_UNIT_CONFIGURATION = (SELECT COUNT(*) FROM UNIT_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_UNIT_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_UNIT_CONFIGURATION);
--    QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_UNIT_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='UNIT_CONFIGURATION';
--    QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_CONFIGURATION'),@COUNT_SPLITING_UNIT_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--    3.QUERY FOR CREATE TEMP_PAYMENT_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_PAYMENT_CONFIGURATION;
	CREATE TABLE TEMP_PAYMENT_CONFIGURATION(
	TPCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TPCN_DATA TEXT NOT NULL,
	TPCN_INITIALIZE_FLAG CHAR(1) NULL,
	TPCN_USERSTAMP VARCHAR(50) NULL,
	TPCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TPCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
--    QUERY FOR INSERT VALUES IN TEMP_PAYMENT_CONFIGURATION TABLE	
	INSERT INTO TEMP_PAYMENT_CONFIGURATION(TPCN_DATA,CGN_ID,TPCN_INITIALIZE_FLAG,TPCN_USERSTAMP,TPCN_TIMESTAMP)
	(SELECT DISTINCT(DATA),CGN_ID,INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN (28,49,58));
--    QUERY FOR UPDATE VALUES IN TEMP_PAYMENT_CONFIGURATION TABLE		
	UPDATE TEMP_PAYMENT_CONFIGURATION SET TPCN_USERSTAMP='expatsintegrated@gmail.com' WHERE TPCN_USERSTAMP IS NULL;
--    QUERY FOR CREATE PAYMENT_CONFIGURATION
	DROP TABLE IF EXISTS PAYMENT_CONFIGURATION;
	CREATE TABLE PAYMENT_CONFIGURATION(
	PCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	PCN_DATA TEXT NOT NULL,
	PCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	PCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(PCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--    QUERY FOR INSERT VALUES IN PAYMENT_CONFIGURATION TABLE
	INSERT INTO PAYMENT_CONFIGURATION(PCN_DATA,CGN_ID,PCN_INITIALIZE_FLAG,ULD_ID,PCN_TIMESTAMP) 
	(SELECT  TPCN.TPCN_DATA,TPCN.CGN_ID,TPCN.TPCN_INITIALIZE_FLAG,ULD.ULD_ID,TPCN.TPCN_TIMESTAMP FROM TEMP_PAYMENT_CONFIGURATION TPCN , USER_LOGIN_DETAILS ULD WHERE  ULD.ULD_LOGINID=TPCN.TPCN_USERSTAMP);
	DROP TABLE IF EXISTS TEMP_PAYMENT_CONFIGURATION;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--    COUNT CHECKING FOR PAYMENT_CONFIGURATION DETAILS
	SET @COUNT_PAYMENT_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN (28,49,58));
	SET @COUNT_SPLITING_PAYMENT_CONFIGURATION = (SELECT COUNT(*) FROM PAYMENT_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_PAYMENT_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_PAYMENT_CONFIGURATION);
--    QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_PAYMENT_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='PAYMENT_CONFIGURATION';
--    QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='PAYMENT_CONFIGURATION'),@COUNT_SPLITING_PAYMENT_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='PAYMENT_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--   4.QUERY FOR CREATE ACCESS_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS ACCESS_CONFIGURATION;
	CREATE TABLE ACCESS_CONFIGURATION(
	ACN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	ACN_DATA TEXT NOT NULL,
	ACN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	ACN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ACN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--   QUERY FOR INSERT VALUES IN ACCESS_CONFIGURATION TABLE
	INSERT INTO ACCESS_CONFIGURATION(ACN_DATA,CGN_ID,ACN_INITIALIZE_FLAG,ULD_ID,ACN_TIMESTAMP)  (SELECT DISTINCT(CSQL.DATA),CSQL.CGN_ID,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA , USER_LOGIN_DETAILS ULD  WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN (16,17) AND ULD.ULD_LOGINID=TCSCDB.USERSTAMP ORDER BY CGN_ID);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--   COUNT CHECKING FOR ACCESS_CONFIGURATION DETAILS
	SET @COUNT_ACCESS_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN (16,17));
	SET @COUNT_SPLITING_ACCESS_CONFIGURATION = (SELECT COUNT(*) FROM ACCESS_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_ACCESS_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ACCESS_CONFIGURATION);
--   QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_ACCESS_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ACCESS_CONFIGURATION';
--   QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ACCESS_CONFIGURATION'),@COUNT_SPLITING_ACCESS_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ACCESS_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--  5.QUERY FOR CREATE OCBC_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS OCBC_CONFIGURATION;
	CREATE TABLE OCBC_CONFIGURATION(
	OCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	OCN_DATA TEXT NOT NULL,
	OCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	OCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(OCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--  QUERY FOR INSERT VALUES IN OCBC_CONFIGURATION TABLE
	INSERT INTO OCBC_CONFIGURATION(OCN_DATA,CGN_ID,OCN_INITIALIZE_FLAG,ULD_ID,OCN_TIMESTAMP) (SELECT DISTINCT(CSQL.DATA),CSQL.CGN_ID,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA , USER_LOGIN_DETAILS ULD WHERE CSQL.DATA IS NOT NULL AND CGN_ID=29 AND ULD.ULD_LOGINID=TCSCDB.USERSTAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR OCBC_CONFIGURATION DETAILS
	SET @COUNT_OCBC_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CSQL.CGN_ID=29);
	SET @COUNT_SPLITING_OCBC_CONFIGURATION = (SELECT COUNT(*) FROM OCBC_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_OCBC_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_OCBC_CONFIGURATION);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_OCBC_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='OCBC_CONFIGURATION';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='OCBC_CONFIGURATION'),@COUNT_SPLITING_OCBC_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='OCBC_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--  6.QUERY FOR CREATE TEMP_EXPENSE_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_EXPENSE_CONFIGURATION;
	CREATE TABLE TEMP_EXPENSE_CONFIGURATION(
	TECN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TECN_DATA TEXT NOT NULL,
	TECN_INITIALIZE_FLAG	CHAR(1) NULL,
	TECN_USERSTAMP VARCHAR(50) NULL,
	TECN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TECN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
--    QUERY FOR INSERT VALUES IN TEMP_EXPENSE_CONFIGURATION TABLE	
	INSERT INTO TEMP_EXPENSE_CONFIGURATION(TECN_DATA,CGN_ID,TECN_INITIALIZE_FLAG,TECN_USERSTAMP,TECN_TIMESTAMP)
	(SELECT DISTINCT(DATA),CGN_ID,INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN(18,19,27,20,26,21,22,23,24,25,34,35,36,37,38,40,41,51,52));
--    QUERY FOR UPDATE VALUES IN TEMP_EXPENSE_CONFIGURATION TABLE		
	UPDATE TEMP_EXPENSE_CONFIGURATION SET TECN_USERSTAMP='expatsintegrated@gmail.com' WHERE TECN_USERSTAMP IS NULL;
--   QUERY FOR CREATE EXPENSE_CONFIGURATION	
	DROP TABLE IF EXISTS EXPENSE_CONFIGURATION;
	CREATE TABLE EXPENSE_CONFIGURATION(
	ECN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	ECN_DATA TEXT NOT NULL,
	ECN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	ECN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ECN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
-- QUERY FOR INSERT VALUES IN EXPENSE_CONFIGURATION TABLE
	INSERT INTO EXPENSE_CONFIGURATION(ECN_DATA,CGN_ID,ECN_INITIALIZE_FLAG,ULD_ID,ECN_TIMESTAMP)
	(SELECT TECN.TECN_DATA,TECN.CGN_ID,TECN.TECN_INITIALIZE_FLAG,ULD.ULD_ID,TECN.TECN_TIMESTAMP FROM TEMP_EXPENSE_CONFIGURATION TECN , USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TECN.TECN_USERSTAMP);
	DROP TABLE IF EXISTS TEMP_EXPENSE_CONFIGURATION;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR EXPENSE_CONFIGURATION DETAILS
	SET @COUNT_EXPENSE_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT CSQL  WHERE DATA IS NOT NULL AND CGN_ID IN(18,19,20,21,22,23,24,25,26,27,34,35,36,37,38,40,41,51,52));
	SET @COUNT_SPLITING_EXPENSE_CONFIGURATION = (SELECT COUNT(*) FROM EXPENSE_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_EXPENSE_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_EXPENSE_CONFIGURATION);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_EXPENSE_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='EXPENSE_CONFIGURATION';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_CONFIGURATION'),@COUNT_SPLITING_EXPENSE_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);

--  7.QUERY FOR CREATE TEMP_DEPOSIT_DEDUCTION_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
	CREATE TABLE TEMP_DEPOSIT_DEDUCTION_CONFIGURATION(
	TDDC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TDDC_DATA TEXT NOT NULL,
	TDDC_SUB_DATA TEXT NULL,
	TDDC_INITIALIZE_FLAG	CHAR(1) NULL,
	TDDC_USERSTAMP	VARCHAR(50)NULL,
	TDDC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TDDC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
--  QUERY FOR INSERT VALUES IN TEMP_DEPOSIT_DEDUCTION_CONFIGURATION TABLE	
	INSERT INTO TEMP_DEPOSIT_DEDUCTION_CONFIGURATION(CGN_ID,TDDC_DATA,TDDC_SUB_DATA,TDDC_INITIALIZE_FLAG,TDDC_USERSTAMP,TDDC_TIMESTAMP)
	(SELECT CGN_ID,DATA,SUB_DATA,INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN(30,42,48) );
--  QUERY FOR UPDATE VALUES IN TEMP_DEPOSIT_DEDUCTION_CONFIGURATION TABLE		
	UPDATE TEMP_DEPOSIT_DEDUCTION_CONFIGURATION SET TDDC_USERSTAMP='expatsintegrated@gmail.com' WHERE TDDC_USERSTAMP IS NULL;	
-- QUERY FOR CREATE DEPOSIT_DEDUCTION_CONFIGURATION
	DROP TABLE IF EXISTS DEPOSIT_DEDUCTION_CONFIGURATION;
	CREATE TABLE DEPOSIT_DEDUCTION_CONFIGURATION(
	DDC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	DDC_DATA TEXT NOT NULL,
	DDC_SUB_DATA TEXT NULL,
	DDC_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	DDC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(DDC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN DEPOSIT_DEDUCTION_CONFIGURATION TABLE
	INSERT INTO DEPOSIT_DEDUCTION_CONFIGURATION(CGN_ID,DDC_DATA,DDC_SUB_DATA,DDC_INITIALIZE_FLAG,ULD_ID,DDC_TIMESTAMP)
	(SELECT TDDCN.CGN_ID,TDDCN.TDDC_DATA,TDDCN.TDDC_SUB_DATA,TDDCN.TDDC_INITIALIZE_FLAG,ULD.ULD_ID,TDDCN.TDDC_TIMESTAMP FROM TEMP_DEPOSIT_DEDUCTION_CONFIGURATION  TDDCN , USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TDDCN.TDDC_USERSTAMP);
	DROP TABLE IF EXISTS TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR DEPOSIT_DEDUCTION_CONFIGURATION DETAILS
	SET @COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN(30,42,48));
	SET @COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION = (SELECT COUNT(*) FROM DEPOSIT_DEDUCTION_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION'),@COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--8.QUERY FOR CREATE TEMP_ERROR_MESSAGE_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_ERROR_MESSAGE_CONFIGURATION;
	CREATE TABLE TEMP_ERROR_MESSAGE_CONFIGURATION(
	TEMC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	TEMC_CODE INTEGER NOT NULL,
	TEMC_DATA TEXT NOT NULL,
	TEMC_USERSTAMP VARCHAR(50) NULL,
	TEMC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TEMC_ID),
	FOREIGN KEY(CNP_ID) REFERENCES CONFIGURATION_PROFILE(CNP_ID));
--  QUERY FOR INSERT VALUES IN TEMP_ERROR_MESSAGE_CONFIGURATION TABLE	
	INSERT INTO TEMP_ERROR_MESSAGE_CONFIGURATION(CNP_ID,TEMC_CODE,TEMC_DATA,TEMC_USERSTAMP,TEMC_TIMESTAMP)
	(SELECT CSQL.CNP_ID,CSQL.EMC_CODE,CSQL.EMC_DATA,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN CONFIG_SCDB_FORMAT TCSCDB ON CSQL.EMC_DATA = TCSCDB.CF_DATA WHERE CSQL.EMC_DATA IS NOT NULL);
--  QUERY FOR UPDATE VALUES IN TEMP_ERROR_MESSAGE_CONFIGURATION TABLE		
	UPDATE TEMP_ERROR_MESSAGE_CONFIGURATION SET TEMC_USERSTAMP='expatsintegrated@gmail.com' WHERE TEMC_USERSTAMP IS NULL;	
-- QUERY FOR CREATE ERROR_MESSAGE_CONFIGURATION	
	DROP TABLE IF EXISTS ERROR_MESSAGE_CONFIGURATION;
	CREATE TABLE ERROR_MESSAGE_CONFIGURATION(
	EMC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	EMC_CODE INTEGER NOT NULL,
	EMC_DATA TEXT NOT NULL,
	ULD_ID INTEGER(2) NOT NULL,
	EMC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EMC_ID),
	FOREIGN KEY(CNP_ID) REFERENCES CONFIGURATION_PROFILE(CNP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN ERROR_MESSAGE_CONFIGURATION TABLE
	INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) 
	(SELECT TEMC.CNP_ID,TEMC.TEMC_CODE,TEMC.TEMC_DATA,ULD.ULD_ID,TEMC.TEMC_TIMESTAMP FROM TEMP_ERROR_MESSAGE_CONFIGURATION TEMC,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TEMC.TEMC_USERSTAMP);
	DROP TABLE IF EXISTS TEMP_ERROR_MESSAGE_CONFIGURATION;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR ERROR_MESSAGE_CONFIGURATION DETAILS
	SET @COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(EMC_DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN CONFIG_SCDB_FORMAT TCSCDB ON CSQL.EMC_DATA = TCSCDB.CF_DATA WHERE CSQL.EMC_DATA IS NOT NULL);
	SET @COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION = (SELECT COUNT(*) FROM ERROR_MESSAGE_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ERROR_MESSAGE_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERROR_MESSAGE_CONFIGURATION'),@COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERROR_MESSAGE_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--9.QUERY FOR CREATE TRIGGER_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TRIGGER_CONFIGURATION;
	CREATE TABLE TRIGGER_CONFIGURATION(
	TC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TC_DATA	TEXT NOT NULL,
	TC_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	TC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN TRIGGER_CONFIGURATION TABLE
	INSERT INTO TRIGGER_CONFIGURATION(CGN_ID,TC_DATA,TC_INITIALIZE_FLAG,ULD_ID,TC_TIMESTAMP) 
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,TCSCDB.TIMESTAMP 
FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON 
CSQL.DATA = TCSCDB.CF_DATA ,USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN(31,74) 
AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID = CSQL.USER_STAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR TRIGGER_CONFIGURATION DETAILS
	SET @COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(CSQL.DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID IN(31,74) AND CSQL.DATA IS NOT NULL);
	SET @COUNT_SPLITING_TRIGGER_CONFIGURATION = (SELECT COUNT(*) FROM TRIGGER_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_TRIGGER_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='TRIGGER_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='TRIGGER_CONFIGURATION'),@COUNT_SPLITING_TRIGGER_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='TRIGGER_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--10.QUERY FOR CREATE TEMP_NATIONALITY_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_NATIONALITY_CONFIGURATION;
	CREATE TABLE TEMP_NATIONALITY_CONFIGURATION(
	TNC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TNC_DATA	TEXT NOT NULL,
	TNC_INITIALIZE_FLAG	CHAR(1) NULL,
	TNC_USERSTAMP VARCHAR(50) NULL,
	TNC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TNC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
--  QUERY FOR INSERT VALUES IN TEMP_NATIONALITY_CONFIGURATION TABLE	
	INSERT INTO TEMP_NATIONALITY_CONFIGURATION(CGN_ID,TNC_DATA,TNC_INITIALIZE_FLAG,TNC_USERSTAMP,TNC_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID=15 AND CSQL.DATA IS NOT NULL);
--  QUERY FOR UPDATE VALUES IN TEMP_NATIONALITY_CONFIGURATION TABLE		
	UPDATE TEMP_NATIONALITY_CONFIGURATION SET TNC_USERSTAMP='expatsintegrated@gmail.com' WHERE TNC_USERSTAMP IS NULL;	
-- QUERY FOR CREATE TEMP_NATIONALITY_CONFIGURATION	
	DROP TABLE IF EXISTS NATIONALITY_CONFIGURATION;
	CREATE TABLE NATIONALITY_CONFIGURATION(
	NC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	NC_DATA	TEXT NOT NULL,
	NC_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	NC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(NC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN NATIONALITY_CONFIGURATION TABLE
	INSERT INTO NATIONALITY_CONFIGURATION(CGN_ID,NC_DATA,NC_INITIALIZE_FLAG,ULD_ID,NC_TIMESTAMP) 
	(SELECT TNCN.CGN_ID,TNCN.TNC_DATA,TNCN.TNC_INITIALIZE_FLAG,ULD.ULD_ID,TNCN.TNC_TIMESTAMP FROM TEMP_NATIONALITY_CONFIGURATION TNCN,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TNCN.TNC_USERSTAMP);
	DROP TABLE IF EXISTS TEMP_NATIONALITY_CONFIGURATION;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR NATIONALITY_CONFIGURATION DETAILS
	SET @COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(CSQL.DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID=15 AND CSQL.DATA IS NOT NULL);
	SET @COUNT_SPLITING_NATIONALITY_CONFIGURATION = (SELECT COUNT(*) FROM NATIONALITY_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_NATIONALITY_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='NATIONALITY_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='NATIONALITY_CONFIGURATION'),@COUNT_SPLITING_NATIONALITY_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='NATIONALITY_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--11.QUERY FOR CREATE ERM_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS ERM_CONFIGURATION;
	CREATE TABLE ERM_CONFIGURATION(
	ERMCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	ERMCN_DATA TEXT NOT NULL,
	ERMCN_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	ERMCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ERMCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN ERM_CONFIGURATION TABLE
	INSERT INTO ERM_CONFIGURATION(CGN_ID,ERMCN_DATA,ERMCN_INITIALIZE_FLAG,ULD_ID) (SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID FROM CONFIG_SQL_FORMAT CSQL, USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID=55 AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR ERM_CONFIGURATION DETAILS
	SET @COUNT_ERM_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT WHERE CGN_ID=55 AND DATA IS NOT NULL);
	SET @COUNT_SPLITING_ERM_CONFIGURATION = (SELECT COUNT(*) FROM ERM_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_ERM_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ERM_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_ERM_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ERM_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERM_CONFIGURATION'),@COUNT_SPLITING_ERM_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERM_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);
	
--12.QUERY FOR CREATE BANKTT_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS BANKTT_CONFIGURATION;
	CREATE TABLE BANKTT_CONFIGURATION(
	BCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	BCN_DATA TEXT NOT NULL,
	BCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	BCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(BCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN BANKTT_CONFIGURATION TABLE
	INSERT INTO BANKTT_CONFIGURATION(CGN_ID,BCN_DATA,BCN_INITIALIZE_FLAG,ULD_ID) (SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID FROM CONFIG_SQL_FORMAT CSQL, USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN (56,69,70,71,72) AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR BANKTT_CONFIGURATION DETAILS
	SET @COUNT_BANKTT_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT WHERE CGN_ID IN (56,69,70,71,72) AND DATA IS NOT NULL);
	SET @COUNT_SPLITING_BANKTT_CONFIGURATION = (SELECT COUNT(*) FROM BANKTT_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_BANKTT_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_BANKTT_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_BANKTT_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='BANKTT_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='BANKTT_CONFIGURATION'),@COUNT_SPLITING_BANKTT_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='BANKTT_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--13.QUERY FOR CREATE CHEQUE_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS CHEQUE_CONFIGURATION;
	CREATE TABLE CHEQUE_CONFIGURATION(
	CQCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	CQCN_DATA TEXT NOT NULL,
	CQCN_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	CQCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(CQCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN CHEQUE_CONFIGURATION TABLE
	INSERT INTO CHEQUE_CONFIGURATION(CGN_ID,CQCN_DATA,CQCN_INITIALIZE_FLAG,ULD_ID) (SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID FROM CONFIG_SQL_FORMAT CSQL, USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID=57 AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR CHEQUE_CONFIGURATION DETAILS
	SET @COUNT_CHEQUE_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT WHERE CGN_ID=57 AND DATA IS NOT NULL);
	SET @COUNT_SPLITING_CHEQUE_CONFIGURATION = (SELECT COUNT(*) FROM CHEQUE_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_CHEQUE_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_CHEQUE_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_CHEQUE_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='CHEQUE_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CHEQUE_CONFIGURATION'),@COUNT_SPLITING_CHEQUE_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CHEQUE_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--14.QUERY FOR CREATE REPORT_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS REPORT_CONFIGURATION;
	CREATE TABLE REPORT_CONFIGURATION(
	RCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	RCN_DATA TEXT NOT NULL,
	RCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	RCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(RCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN REPORT_CONFIGURATION TABLE
	INSERT INTO REPORT_CONFIGURATION(CGN_ID,RCN_DATA,RCN_INITIALIZE_FLAG,ULD_ID) (SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID FROM CONFIG_SQL_FORMAT CSQL, USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN (59,60,61,62,63,64,65,73) AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR REPORT_CONFIGURATION DETAILS
	SET @COUNT_REPORT_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(DATA) FROM CONFIG_SQL_FORMAT WHERE CGN_ID IN (59,60,61,62,63,64,65,73) AND DATA IS NOT NULL);
	SET @COUNT_SPLITING_REPORT_CONFIGURATION = (SELECT COUNT(*) FROM REPORT_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_REPORT_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_REPORT_CONFIGURATION);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_REPORT_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='REPORT_CONFIGURATION';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='REPORT_CONFIGURATION'),@COUNT_SPLITING_REPORT_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='REPORT_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--15.QUERY FOR CREATE CUSTOMER_PAYMENT_PROFILE
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS CUSTOMER_PAYMENT_PROFILE;
	CREATE TABLE CUSTOMER_PAYMENT_PROFILE(
	CPP_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CPP_DATA VARCHAR(50) NOT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	CPP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(CPP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--QUERY FOR INSERT VALUES IN CUSTOMER_PAYMENT_PROFILE TABLE
	INSERT INTO CUSTOMER_PAYMENT_PROFILE(CPP_DATA,ULD_ID) 
	(SELECT CSQL.CPP_DATA,ULD.ULD_ID FROM CONFIG_SQL_FORMAT CSQL,USER_LOGIN_DETAILS ULD WHERE 
	CSQL.CPP_DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR CUSTOMER_PAYMENT_PROFILE DETAILS
	SET @COUNT_CUSTOMER_PAYMENT_PROFILE_SQL_FORMAT = (SELECT COUNT(CPP_DATA) FROM CONFIG_SQL_FORMAT WHERE CPP_DATA IS NOT NULL);
	SET @COUNT_SPLITING_CUSTOMER_PAYMENT_PROFILE = (SELECT COUNT(*) FROM CUSTOMER_PAYMENT_PROFILE);
	SET @REJECTION_COUNT=(@COUNT_CUSTOMER_PAYMENT_PROFILE_SQL_FORMAT-@COUNT_SPLITING_CUSTOMER_PAYMENT_PROFILE);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_CUSTOMER_PAYMENT_PROFILE_SQL_FORMAT WHERE PREASP_DATA='CUSTOMER_PAYMENT_PROFILE';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_PAYMENT_PROFILE'),@COUNT_SPLITING_CUSTOMER_PAYMENT_PROFILE,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER_PAYMENT_PROFILE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--16.QUERY FOR CREATE CUSTOMER_TIME_PROFILE
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS CUSTOMER_TIME_PROFILE;
	CREATE TABLE CUSTOMER_TIME_PROFILE(
	CTP_ID INTEGER NOT NULL AUTO_INCREMENT,
	CTP_DATA TIME NOT NULL,
	PRIMARY KEY(CTP_ID));
--QUERY FOR INSERT VALUES IN CUSTOMER_TIME_PROFILE TABLE
	INSERT INTO CUSTOMER_TIME_PROFILE(CTP_DATA) (SELECT CTP_DATA FROM CONFIG_SQL_FORMAT WHERE CTP_DATA IS NOT NULL);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR CUSTOMER_TIME_PROFILE DETAILS
	SET @COUNT_CUSTOMER_TIME_PROFILE_SQL_FORMAT = (SELECT COUNT(CTP_DATA) FROM CONFIG_SQL_FORMAT WHERE CTP_DATA IS NOT NULL);
	SET @COUNT_SPLITING_CUSTOMER_TIME_PROFILE = (SELECT COUNT(*) FROM CUSTOMER_TIME_PROFILE);
	SET @REJECTION_COUNT=(@COUNT_CUSTOMER_TIME_PROFILE_SQL_FORMAT-@COUNT_SPLITING_CUSTOMER_TIME_PROFILE);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_CUSTOMER_TIME_PROFILE_SQL_FORMAT WHERE PREASP_DATA='CUSTOMER_TIME_PROFILE';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_TIME_PROFILE'),@COUNT_SPLITING_CUSTOMER_TIME_PROFILE,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER_TIME_PROFILE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	

--17.QUERY FOR CREATE PAYMENT_PROFILE
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS PAYMENT_PROFILE;
	CREATE TABLE PAYMENT_PROFILE(
	PP_ID INTEGER NOT NULL AUTO_INCREMENT,
	PP_DATA	VARCHAR(50) NOT NULL,
	PRIMARY KEY(PP_ID));
--QUERY FOR INSERT VALUES IN PAYMENT_PROFILE TABLE
	INSERT INTO PAYMENT_PROFILE(PP_DATA) (SELECT PP_DATA FROM CONFIG_SQL_FORMAT WHERE PP_DATA IS NOT NULL);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR PAYMENT_PROFILE DETAILS
	SET @COUNT_PAYMENT_PROFILE_SQL_FORMAT = (SELECT COUNT(PP_DATA) FROM CONFIG_SQL_FORMAT WHERE PP_DATA IS NOT NULL);
	SET @COUNT_SPLITING_PAYMENT_PROFILE = (SELECT COUNT(*) FROM PAYMENT_PROFILE);
	SET @REJECTION_COUNT=(@COUNT_PAYMENT_PROFILE_SQL_FORMAT-@COUNT_SPLITING_PAYMENT_PROFILE);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_PAYMENT_PROFILE_SQL_FORMAT WHERE PREASP_DATA='PAYMENT_PROFILE';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='PAYMENT_PROFILE'),@COUNT_SPLITING_PAYMENT_PROFILE,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='PAYMENT_PROFILE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	
--18.QUERY FOR CREATE TICKLER_PROFILE
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TICKLER_PROFILE;
	CREATE TABLE TICKLER_PROFILE(
	TP_ID INTEGER NOT NULL AUTO_INCREMENT,
	TP_TYPE	CHAR(10) NOT NULL,
	PRIMARY KEY(TP_ID));
--QUERY FOR INSERT VALUES IN TICKLER_PROFILE TABLE
	INSERT INTO TICKLER_PROFILE(TP_TYPE) (SELECT TP_TYPE FROM CONFIG_SQL_FORMAT WHERE TP_TYPE IS NOT NULL);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR TICKLER_PROFILE DETAILS
	SET @COUNT_TICKLER_PROFILE_SQL_FORMAT = (SELECT COUNT(TP_TYPE) FROM CONFIG_SQL_FORMAT WHERE TP_TYPE IS NOT NULL);
	SET @COUNT_SPLITING_TICKLER_PROFILE = (SELECT COUNT(*) FROM TICKLER_PROFILE);
	SET @REJECTION_COUNT=(@COUNT_TICKLER_PROFILE_SQL_FORMAT-@COUNT_SPLITING_TICKLER_PROFILE);
--QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_TICKLER_PROFILE_SQL_FORMAT WHERE PREASP_DATA='TICKLER_PROFILE';
--QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='TICKLER_PROFILE'),@COUNT_SPLITING_TICKLER_PROFILE,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='TICKLER_PROFILE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,CONFIG_USERSTAMP);	
	SET FOREIGN_KEY_CHECKS=1;
END;

CALL SP_MIG_CONFIG_INSERT('aa@gmail.com');