-- version:0.6 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--VERSION 0.5--sdate:04/03/2014 --edate:04/03/2014--CHANGING header datatype as int(2)- DONE BY SAFI
--VERSION 0.4-sdate:25/02/2014 --edate:25/02/2014--DESC-ADDING SOURCE TIMESTAMP AND CHANGING USAERSTAMP TO ULD_ID
--VERSION 0.3--sdate:20/02/2014 --edate:21/02/2014--IMPLEMENT AUDIT QUREY AND MIGRATED DATA'S DIRECTLY FROM SCDB- DONE BY SAFI
--version:0.2 --sdate:31/01/2014 --edate:31/01/2014 --issue:522 --desc:added PUBLIC_HOLIDAY,STORED_PROCEDURE_PROFILE,VIEW_PROFILE,PLATFORM_MANAGEMENT table insert quereis --doneby:RL
--version:0.1 --sdate:23/01/2014 --edate:23/01/2014 --desc:all user rights table insert queries --doneby:RL
DROP PROCEDURE IF EXISTS SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES;
CREATE PROCEDURE SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(IN SPECIAL_CHARACTER VARCHAR(30), IN INPUT_STRING_WITH_COMMAS TEXT, OUT VALUE TEXT, OUT REMAINING_STRING TEXT)
BEGIN
SET @LENGTH = 1;
SET @TEMP = INPUT_STRING_WITH_COMMAS;
SET @SPECIAL_CHAR_LENGTH = LENGTH(SPECIAL_CHARACTER);

    	SET @POSITION=(SELECT LOCATE(SPECIAL_CHARACTER, @TEMP,@LENGTH));
		IF @POSITION<=0 THEN
			SET VALUE = @TEMP;
		ELSE
			SELECT SUBSTRING(@TEMP,@LENGTH,@POSITION-1) INTO VALUE;
			SET REMAINING_STRING =(SELECT SUBSTRING(@TEMP,@POSITION+ @SPECIAL_CHAR_LENGTH ));
		END IF;
    
 COMMIT;   
END;
DROP PROCEDURE IF EXISTS SP_INSERT_USER_RIGHTS_SCDB_FORMAT;
CREATE PROCEDURE SP_INSERT_USER_RIGHTS_SCDB_FORMAT(IN USERSTAMP VARCHAR(50))
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
SET FOREIGN_KEY_CHECKS=0;

-- USER_MENU_DETAILS	
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS USER_MENU_DETAILS;				
CREATE TABLE USER_MENU_DETAILS(
MD_ID INTEGER NOT NULL AUTO_INCREMENT,
MP_ID INTEGER(2) NOT NULL,
RC_ID INTEGER(2) NOT NULL,
ULD_ID INT(2) NOT NULL,	
MD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(MD_ID),
FOREIGN KEY(MP_ID) REFERENCES MENU_PROFILE (MP_ID),
FOREIGN KEY(RC_ID) REFERENCES ROLE_CREATION (RC_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));
--  CREATE TABLE FOR TEMP MENU DETAILS
DROP TABLE IF EXISTS TEMP_MENU_DETAILS;
CREATE TABLE TEMP_MENU_DETAILS(ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,`Mroles` varchar(255) DEFAULT NULL,`Mname` varchar(255) DEFAULT NULL,`Msubmenu` varchar(255) DEFAULT NULL,`Msub` varchar(255) DEFAULT NULL,`ULD_ID` INT(2) DEFAULT NULL,timestamp TIMESTAMP not null);
INSERT INTO TEMP_MENU_DETAILS(Mroles,Mname,Msub,Msubmenu,ULD_ID,timeStamp)SELECT URSF.Mroles,URSF.Mname,URSF.Msub,URSF.Msubmenu,ULD.ULD_ID ,URSF.timeStamp FROM USER_RIGHTS_SCDB_FORMAT URSF,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=URSF.USERSTAMP AND Mroles IS NOT NULL ORDER BY Mroles;
update TEMP_MENU_DETAILS set Msubmenu=null, Msub='ACCESS RIGHTS-SEARCH/UPDATE' where Msubmenu='ACCESS RIGHTS-SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu=null, Msub='TERMINATE-SEARCH/UPDATE' where Msubmenu='TERMINATE-SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu=null, Msub='ACCESS RIGHTS-SEARCH/UPDATE' where Msubmenu='USER-SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu=null, Msub='USER SEARCH DETAILS' where Msubmenu='USER SEARCH DETAILS';
update TEMP_MENU_DETAILS set Msubmenu=null, Msub='CHARTS',Mname='REPORT' where Mname='CHARTS';
update TEMP_MENU_DETAILS set Msubmenu='ENTRY', Msub='CONFIGURATION' where Msubmenu='ENTRY';
update TEMP_MENU_DETAILS set Msubmenu='SEARCH/UPDATE/DELETE', Msub='CONFIGURATION' where Msubmenu='CF-SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='ENTRY', Msub='EMAIL TEMPLATE' where Msubmenu='TEMPLATE';
update TEMP_MENU_DETAILS set Msubmenu='SEARCH/UPDATE', Msub='EMAIL TEMPLATE' where Msubmenu='EMAIL-SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu=null,Msub='TRIGGER',Mname='REPORT' where Msubmenu='TRIGGER';
update TEMP_MENU_DETAILS set Msubmenu='EXPIRY LIST',Msub='CUSTOMER' where Msubmenu="EXPIRY IN 'X' WEEK";
update TEMP_MENU_DETAILS set Msubmenu='ERM SEARCH/UPDATE',Msub='CUSTOMER' where Msubmenu='ERM SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu='EXTENSION',Msub='CUSTOMER' where Msubmenu='EXTENSION';
update TEMP_MENU_DETAILS set Msubmenu='RE CHECKIN',Msub='CUSTOMER' where Msubmenu='RE-CHECK IN';
update TEMP_MENU_DETAILS set Msubmenu='SEARCH/UPDATE/DELETE',Msub='CUSTOMER' where Msubmenu='CC-SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu='CREATION',Msub='CUSTOMER' where Msubmenu='CREATION';
update TEMP_MENU_DETAILS set Msubmenu='ERM ENTRY',Msub='CUSTOMER' where Msubmenu='ERM ENTRY';
update TEMP_MENU_DETAILS set Msubmenu='CANCEL',Msub='CUSTOMER' where Msubmenu='CANCEL';
update TEMP_MENU_DETAILS set Msubmenu='EXPIRY LIST',Msub='CUSTOMER' where Msubmenu='EXPIRY';
update TEMP_MENU_DETAILS set Msubmenu='TERMINATION',Msub='CUSTOMER' where Msubmenu='TERMINATION';
update TEMP_MENU_DETAILS set Msubmenu='CARD ASSIGN ',Msub='ACCESS CARD' where Msubmenu='CARD ASSIGN';
update TEMP_MENU_DETAILS set Msubmenu='SEARCH/UPDATE',Msub='ACCESS CARD' where Msub='ACCESS' and Msubmenu='SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='REPLACE',Msub='ACCESS CARD' where Msubmenu='REPLACE';
update TEMP_MENU_DETAILS set Msubmenu='VIEW',Msub='ACCESS CARD' where Msubmenu='VIEW';
update TEMP_MENU_DETAILS set Msubmenu=null,Msub='EXISTING UNIT' where Mname='UNIT' and Msubmenu='EXISTING UNIT';
update TEMP_MENU_DETAILS set Msubmenu=null,Msub='UNIT CREATION' where  Mname='UNIT' and Msubmenu='UNIT CREATION';
update TEMP_MENU_DETAILS set Msubmenu=null,Msub='SEARCH/UPDATE' where  Mname='UNIT' and Msubmenu='SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu=null,Msub='SEARCH/UPDATE DOOR CODE' where Mname='UNIT' and Msubmenu='SEARCH/UPDATE DOOR CODE';
update TEMP_MENU_DETAILS set Msubmenu=null,Msub='UNIT TERMINATION' where  Mname='UNIT' and Msubmenu='UNIT TERMINATION';
update TEMP_MENU_DETAILS set Msubmenu='PAYMENTS ENTRY-ACTIVE CUSTOMER',Msub='FINANCE' where Msubmenu='PAYMENT';
update TEMP_MENU_DETAILS set Msubmenu='PAYMENTS-SEARCH/UPDATE',Msub='FINANCE' where Msubmenu='PAYMENT-SEARCH/UPDATE';
update TEMP_MENU_DETAILS set Msubmenu='DAILY ENTRY:SEARCH/UPDATE/DELETE',Msub='BIZ EXPENSE' where Msubmenu='BIZ-DAILY-SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='DAILY ENTRY',Msub='BIZ EXPENSE' where Msubmenu='BIZ-DAILY ENTRY';
update TEMP_MENU_DETAILS set Msubmenu='DETAIL ENTRY:SEARCH/UPDATE/DELETE',Msub='BIZ EXPENSE' where 
Msubmenu='BIZ-DETAIL-SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='DETAIL ENTRY',Msub='BIZ EXPENSE' where Msubmenu='BIZ-DETAIL ENTRY';
update TEMP_MENU_DETAILS set Msubmenu='DAILY ENTRY:SEARCH/UPDATE/DELETE' where Msub='STAFF' and Msubmenu='DAILY-SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='DAILY ENTRY' where Msub='STAFF' and Msubmenu='DAILY ENTRY';
update TEMP_MENU_DETAILS set Msubmenu='DETAIL ENTRY:SEARCH/UPDATE/DELETE' where Msub='STAFF' and Msubmenu='DETAIL-SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='DETAIL ENTRY' where Msub='STAFF' and Msubmenu='DAILY ENTRY';
update TEMP_MENU_DETAILS set Msubmenu='DAILY ENTRY:SEARCH/UPDATE/DELETE',Msub='PERSONAL' where Msubmenu='PERSONAL-DAILY-SEARCH/UPDATE/DELETE';
update TEMP_MENU_DETAILS set Msubmenu='DAILY ENTRY',Msub='PERSONAL' where Msubmenu='PERSONAL-DAILY ENTRY';
update TEMP_MENU_DETAILS set Msub='FINANCE' where Msub='FINAC';
SET @MAX_MID=(SELECT MAX(ID) FROM TEMP_MENU_DETAILS);
SET @MIN_MID=(SELECT MIN(ID) FROM TEMP_MENU_DETAILS);
WHILE(@MIN_MID<=@MAX_MID)DO
--  INSERT VALUES FOR USER_MENU_DETAILS
INSERT INTO USER_MENU_DETAILS(MP_ID,RC_ID,ULD_ID,MD_TIMESTAMP)VALUES((SELECT MP_ID FROM MENU_PROFILE WHERE IFNULL(MP_MSUBMENU,' ')=IFNULL((SELECT Msubmenu FROM TEMP_MENU_DETAILS WHERE ID=@MIN_MID),' ') AND IFNULL(MP_MSUB,' ')=IFNULL((select Msub from TEMP_MENU_DETAILS WHERE ID=@MIN_MID),' ')),(SELECT RC_ID FROM ROLE_CREATION WHERE RC_NAME=(SELECT Mroles FROM TEMP_MENU_DETAILS WHERE ID=@MIN_MID)),(SELECT ULD_ID FROM TEMP_MENU_DETAILS WHERE ID=@MIN_MID),(SELECT timeStamp FROM TEMP_MENU_DETAILS WHERE ID=@MIN_MID));
SET @MIN_MID=@MIN_MID+1;
END WHILE;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR USER_MENU_DETAILS DETAILS
SET @COUNT_USER_MENU_DETAILS_SCDB_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SCDB_FORMAT WHERE Mroles IS NOT NULL);
SET @COUNT_SPLITING_USER_MENU_DETAILS = (SELECT COUNT(*) FROM USER_MENU_DETAILS);
SET @REJECTION_COUNT=(@COUNT_USER_MENU_DETAILS_SCDB_FORMAT-@COUNT_SPLITING_USER_MENU_DETAILS);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_USER_MENU_DETAILS_SCDB_FORMAT WHERE PREASP_DATA='USER_MENU_DETAILS';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='USER_MENU_DETAILS'),@COUNT_SPLITING_USER_MENU_DETAILS,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='USER_MENU_DETAILS'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

-- USER_FILE_DETAILS
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS USER_FILE_DETAILS;		
CREATE TABLE USER_FILE_DETAILS(
UFD_ID INTEGER NOT NULL	AUTO_INCREMENT,
RC_ID INTEGER(2) NOT NULL,
FP_ID INTEGER(2) NOT NULL,	
ULD_ID INT(2) NOT NULL,	
UFD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(UFD_ID),
FOREIGN KEY(RC_ID) REFERENCES ROLE_CREATION (RC_ID),
FOREIGN KEY(FP_ID) REFERENCES FILE_PROFILE (FP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));

SET @FINAL_COUNT=0;
SET @MIN_RCID=(SELECT MIN(RC_ID) FROM ROLE_CREATION);
SET @MAX_RCID=(SELECT MAX(RC_ID) FROM ROLE_CREATION);
WHILE(@MIN_RCID<=@MAX_RCID)DO
SET @C=0;
DROP TABLE IF EXISTS TEMP_USER_FILE_DETAILS;
CREATE TABLE TEMP_USER_FILE_DETAILS(ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,RC_ID INTEGER,FP_ID TEXT,ULD_ID INT(2) DEFAULT NULL);
INSERT INTO TEMP_USER_FILE_DETAILS(FP_ID,ULD_ID)SELECT DISTINCT FP_ID,ULD.ULD_ID FROM MENU_PROFILE MP,ROLE_CREATION RC,USER_MENU_DETAILS UMD,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=RC.RC_USERSTAMP AND RC.RC_ID=UMD.RC_ID AND UMD.MP_ID=MP.MP_ID AND RC.RC_ID=@MIN_RCID AND MP.FP_ID IS NOT NULL;
SET @MIN_FPID=(SELECT MIN(ID) FROM TEMP_USER_FILE_DETAILS);
SET @MAX_FPID=(SELECT MAX(ID) FROM TEMP_USER_FILE_DETAILS);
WHILE(@MIN_FPID<=@MAX_FPID)DO
SET @FP_ID=(SELECT FP_ID FROM TEMP_USER_FILE_DETAILS WHERE ID=@MIN_FPID);
SET @FP_LENGTH=(select length(@FP_ID)- length(replace(@FP_ID,',','')));

IF(@FP_LENGTH>0)THEN
SET @remaining_string=@FP_ID;
loop_label : LOOP

	CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@remaining_string,@value,@remaining_string);
   SET @C=@C+1;

SELECT @value;
SELECT @remaining_string;
INSERT INTO USER_FILE_DETAILS(RC_ID,FP_ID,ULD_ID)VALUES(@MIN_RCID,@value,(SELECT ULD_ID FROM TEMP_USER_FILE_DETAILS WHERE ID=@MIN_FPID));
SET @FP_LENGTH=@FP_LENGTH-1;
IF @remaining_string IS NULL THEN
	LEAVE  loop_label;
END IF;
END loop;
ELSE
SET @C=@C+1;
INSERT INTO USER_FILE_DETAILS(RC_ID,FP_ID,ULD_ID)VALUES(@MIN_RCID,@FP_ID,(SELECT ULD_ID FROM TEMP_USER_FILE_DETAILS WHERE ID=@MIN_FPID));
END IF;
SET  @MIN_FPID=@MIN_FPID+1;
END WHILE;

SET @FINAL_COUNT=@FINAL_COUNT+@C;

SET @MIN_RCID=@MIN_RCID+1;
END WHILE;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR USER_FILE_DETAILS DETAILS
SET @COUNT_USER_FILE_DETAILS_SCDB_FORMAT =@FINAL_COUNT;
SET @COUNT_SPLITING_USER_FILE_DETAILS = (SELECT COUNT(*) FROM USER_FILE_DETAILS);
SET @REJECTION_COUNT=(@COUNT_USER_FILE_DETAILS_SCDB_FORMAT-@COUNT_SPLITING_USER_FILE_DETAILS);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_USER_FILE_DETAILS_SCDB_FORMAT WHERE PREASP_DATA='USER_FILE_DETAILS';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='USER_FILE_DETAILS'),@COUNT_SPLITING_USER_FILE_DETAILS,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='USER_FILE_DETAILS'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);
SET FOREIGN_KEY_CHECKS=1;
DROP TABLE IF EXISTS TEMP_MENU_DETAILS;
DROP TABLE IF EXISTS TEMP_USER_FILE_DETAILS;
END;


CALL SP_INSERT_USER_RIGHTS_SCDB_FORMAT('SAFIYULLAH.MOHIDEEN@SSOMENS.COM');