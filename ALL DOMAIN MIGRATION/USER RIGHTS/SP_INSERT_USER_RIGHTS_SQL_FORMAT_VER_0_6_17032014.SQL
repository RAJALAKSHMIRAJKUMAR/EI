-- version:0.6 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--VERSION 0.5--sdate:04/03/2014 --edate:04/03/2014--CHANGING header datatype as int(2)- DONE BY SAFI
--VERSION 0.4--sdate:25/02/2014 --edate:25/02/2014--CHANGING USAERSTAMP TO ULD_ID- DONE BY SAFI
--VERSION 0.3--sdate:20/02/2014 --edate:21/02/2014--IMPLEMENT AUDIT QUREY - DONE BY SAFI
--version:0.2 --sdate:31/01/2014 --edate:31/01/2014 --issue:522 --desc:added PUBLIC_HOLIDAY,STORED_PROCEDURE_PROFILE,VIEW_PROFILE,PLATFORM_MANAGEMENT table insert quereis --doneby:RL
--version:0.1 --sdate:23/01/2014 --edate:23/01/2014 --desc:all user rights table insert queries --doneby:RL

DROP PROCEDURE IF EXISTS SP_INSERT_USER_RIGHTS_SQL_FORMAT;
CREATE PROCEDURE `SP_INSERT_USER_RIGHTS_SQL_FORMAT`(IN USERSTAMP VARCHAR(50))
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
SET FOREIGN_KEY_CHECKS=0;
--  QUERY FOR CREATE MENU_PROFILE
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS MENU_PROFILE;
CREATE TABLE MENU_PROFILE(		
MP_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
EP_ID INTEGER NULL,
FP_ID VARCHAR(10) NULL,
MP_MNAME VARCHAR(25) NOT NULL,
MP_MSUB	VARCHAR(35) NULL,
MP_MSUBMENU	VARCHAR(35) NULL,
MP_MFILENAME VARCHAR(100) NOT NULL,
MP_SCRIPT_FLAG CHAR(1) NULL,
PRIMARY KEY(MP_ID));	
--  INSERT QUERY FOR MENU_PROFILE TABLE
INSERT INTO MENU_PROFILE(EP_ID,FP_ID,MP_MNAME,MP_MSUB,MP_MSUBMENU,MP_MFILENAME) 
SELECT EP_ID,FP_ID,MP_MNAME,MP_MSUB,MP_MSUBMENU,MP_MFILENAME FROM USER_RIGHTS_SQL_FORMAT WHERE MP_MNAME IS NOT NULL AND MP_MFILENAME IS NOT NULL;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR MENU_PROFILE DETAILS
SET @COUNT_MENU_PROFILE_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE MP_MNAME IS NOT NULL AND MP_MFILENAME IS NOT NULL);
SET @COUNT_SPLITING_MENU_PROFILE = (SELECT COUNT(*) FROM MENU_PROFILE);
SET @REJECTION_COUNT=(@COUNT_MENU_PROFILE_SQL_FORMAT-@COUNT_SPLITING_MENU_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_MENU_PROFILE_SQL_FORMAT WHERE PREASP_DATA='MENU_PROFILE';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='MENU_PROFILE'),@COUNT_SPLITING_MENU_PROFILE,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='MENU_PROFILE'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  INSERT QUERY FOR FILE PROFILE
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS FILE_PROFILE;
CREATE TABLE FILE_PROFILE(
FP_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
FP_FOLDER_ID TEXT NOT NULL,
FP_FILE_ID TEXT,
FP_FILE_FLAG TEXT,
PRIMARY KEY(FP_ID));

--  INSERT QUERY FOR FILE_PROFILE TABLE
INSERT INTO FILE_PROFILE(FP_FOLDER_ID,FP_FILE_ID,FP_FILE_FLAG) 
SELECT FP_FOLDER_ID,FP_FILE_ID,FP_FILE_FLAG FROM USER_RIGHTS_SQL_FORMAT WHERE FP_FOLDER_ID IS NOT NULL;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR FILE_PROFILE DETAILS
SET @COUNT_FILE_PROFILE_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE FP_FOLDER_ID IS NOT NULL);
SET @COUNT_SPLITING_FILE_PROFILE = (SELECT COUNT(*) FROM FILE_PROFILE);
SET @REJECTION_COUNT=(@COUNT_FILE_PROFILE_SQL_FORMAT-@COUNT_SPLITING_FILE_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_FILE_PROFILE_SQL_FORMAT WHERE PREASP_DATA='FILE_PROFILE';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='FILE_PROFILE'),@COUNT_SPLITING_FILE_PROFILE,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='FILE_PROFILE'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  BASIC_ROLE_PROFILE
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS BASIC_ROLE_PROFILE;
CREATE TABLE BASIC_ROLE_PROFILE	(
BRP_ID INTEGER NOT NULL AUTO_INCREMENT,
URC_ID INTEGER(2) NOT NULL, 
BRP_BR_ID INTEGER NOT NULL, 
ULD_ID INT(2) NOT NULL,	
BRP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(BRP_ID),
FOREIGN KEY(URC_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID),
FOREIGN KEY(BRP_BR_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));
--  INSERT QUERY FOR BASIC_ROLE_PROFILE TABLE
INSERT INTO BASIC_ROLE_PROFILE(URC_ID,BRP_BR_ID,ULD_ID) 
SELECT URSF.URC_ID,URSF.BRP_BR_ID,ULD.ULD_ID FROM USER_LOGIN_DETAILS ULD , USER_RIGHTS_SQL_FORMAT URSF WHERE ULD.ULD_LOGINID=URSF.USERSTAMP AND URSF.URC_ID IS NOT NULL AND URSF.BRP_BR_ID IS NOT NULL AND URSF.USERSTAMP IS NOT NULL;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR BASIC_ROLE_PROFILE DETAILS
SET @COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE URC_ID IS NOT NULL AND BRP_BR_ID IS NOT NULL AND USERSTAMP IS NOT NULL);
SET @COUNT_SPLITING_BASIC_ROLE_PROFILE = (SELECT COUNT(*) FROM BASIC_ROLE_PROFILE);
SET @REJECTION_COUNT=(@COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT-@COUNT_SPLITING_BASIC_ROLE_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT WHERE PREASP_DATA='BASIC_ROLE_PROFILE';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='BASIC_ROLE_PROFILE'),@COUNT_SPLITING_BASIC_ROLE_PROFILE,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='BASIC_ROLE_PROFILE'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  BASIC_MENU_PROFILE
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS BASIC_MENU_PROFILE;
CREATE TABLE BASIC_MENU_PROFILE	(
BMP_ID INTEGER NOT NULL AUTO_INCREMENT,
URC_ID INTEGER(2) NOT NULL, 
MP_ID INTEGER(2) NOT NULL, 
ULD_ID INT(2) NOT NULL,	
BMP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(BMP_ID),
FOREIGN KEY(URC_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID),
FOREIGN KEY(MP_ID) REFERENCES MENU_PROFILE (MP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));

--  INSERT QUERY FOR BASIC_MENU_PROFILE TABLE
INSERT INTO BASIC_MENU_PROFILE(URC_ID,MP_ID,ULD_ID) 
SELECT URSF.URC_ID,URSF.MP_ID,ULD.ULD_ID FROM USER_LOGIN_DETAILS ULD,USER_RIGHTS_SQL_FORMAT URSF WHERE ULD.ULD_LOGINID=URSF.USERSTAMP AND URC_ID IS NOT NULL AND MP_ID IS NOT NULL AND USERSTAMP IS NOT NULL;

SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR BASIC_MENU_PROFILE DETAILS
SET @COUNT_BASIC_MENU_PROFILE_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE URC_ID IS NOT NULL AND MP_ID IS NOT NULL AND USERSTAMP IS NOT NULL);
SET @COUNT_SPLITING_BASIC_MENU_PROFILE = (SELECT COUNT(*) FROM BASIC_MENU_PROFILE);
SET @REJECTION_COUNT=(@COUNT_BASIC_MENU_PROFILE_SQL_FORMAT-@COUNT_SPLITING_BASIC_MENU_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_BASIC_MENU_PROFILE_SQL_FORMAT WHERE PREASP_DATA='BASIC_MENU_PROFILE';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='BASIC_MENU_PROFILE'),@COUNT_SPLITING_BASIC_MENU_PROFILE,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='BASIC_MENU_PROFILE'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  PUBLIC_HOLIDAY
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS PUBLIC_HOLIDAY;
CREATE TABLE PUBLIC_HOLIDAY
(
PH_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
PH_DESCRIPTION VARCHAR(20) NOT NULL,
PH_DATE DATE NOT NULL,
PRIMARY KEY(PH_ID));
--  INSERT QUERY FOR PUBLIC_HOLIDAY TABLE
INSERT INTO PUBLIC_HOLIDAY(PH_DESCRIPTION,PH_DATE)
SELECT PH_DESCRIPTION,PH_DATE FROM USER_RIGHTS_SQL_FORMAT WHERE PH_DESCRIPTION IS NOT NULL AND PH_DATE IS NOT NULL;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR PUBLIC_HOLIDAY DETAILS
SET @COUNT_PUBLIC_HOLIDAY_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE PH_DESCRIPTION IS NOT NULL AND PH_DATE IS NOT NULL);
SET @COUNT_SPLITING_PUBLIC_HOLIDAY = (SELECT COUNT(*) FROM PUBLIC_HOLIDAY);
SET @REJECTION_COUNT=(@COUNT_PUBLIC_HOLIDAY_SQL_FORMAT-@COUNT_SPLITING_PUBLIC_HOLIDAY);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_PUBLIC_HOLIDAY_SQL_FORMAT WHERE PREASP_DATA='PUBLIC_HOLIDAY';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='PUBLIC_HOLIDAY'),@COUNT_SPLITING_PUBLIC_HOLIDAY,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='PUBLIC_HOLIDAY'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  STORED_PROCEDURE_PROFILE
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS STORED_PROCEDURE_PROFILE;
CREATE TABLE STORED_PROCEDURE_PROFILE
(
SPP_ID INTEGER NOT NULL AUTO_INCREMENT,
SPP_NAME VARCHAR(100) NOT NULL,
PRIMARY KEY(SPP_ID));
--  INSERT QUERY FOR STORED_PROCEDURE_PROFILE TABLE	
INSERT INTO STORED_PROCEDURE_PROFILE(SPP_NAME)
SELECT SPP_NAME FROM USER_RIGHTS_SQL_FORMAT WHERE SPP_NAME IS NOT NULL;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR STORED_PROCEDURE_PROFILE DETAILS
SET @COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE SPP_NAME IS NOT NULL);
SET @COUNT_SPLITING_STORED_PROCEDURE_PROFILE = (SELECT COUNT(*) FROM STORED_PROCEDURE_PROFILE);
SET @REJECTION_COUNT=(@COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT-@COUNT_SPLITING_STORED_PROCEDURE_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT WHERE PREASP_DATA='STORED_PROCEDURE_PROFILE';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='STORED_PROCEDURE_PROFILE'),@COUNT_SPLITING_STORED_PROCEDURE_PROFILE,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='STORED_PROCEDURE_PROFILE'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  VIEW_PROFILE

SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS VIEW_PROFILE;
CREATE TABLE VIEW_PROFILE(
VP_ID INTEGER NOT NULL AUTO_INCREMENT,
VP_NAME VARCHAR(100) NOT NULL,
PRIMARY KEY(VP_ID));
--  INSERT QUERY FOR VIEW_PROFILE TABLE	
INSERT INTO VIEW_PROFILE(VP_NAME)
SELECT VP_NAME FROM USER_RIGHTS_SQL_FORMAT WHERE VP_NAME IS NOT NULL;
SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR VIEW_PROFILE DETAILS
SET @COUNT_VIEW_PROFILE_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE VP_NAME IS NOT NULL);
SET @COUNT_SPLITING_VIEW_PROFILE = (SELECT COUNT(*) FROM VIEW_PROFILE);
SET @REJECTION_COUNT=(@COUNT_VIEW_PROFILE_SQL_FORMAT-@COUNT_SPLITING_VIEW_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_VIEW_PROFILE_SQL_FORMAT WHERE PREASP_DATA='VIEW_PROFILE';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='VIEW_PROFILE'),@COUNT_SPLITING_VIEW_PROFILE,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='VIEW_PROFILE'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);

--  PLATFORM_MANAGEMENT
SET START_TIME = (SELECT CURTIME());
DROP TABLE IF EXISTS PLATFORM_MANAGEMENT;
CREATE TABLE PLATFORM_MANAGEMENT(
PM_ID INTEGER NOT NULL AUTO_INCREMENT,
MP_ID INTEGER(2) NOT NULL,
POSTAP_ID INTEGER,
SPP_ID INTEGER,
VP_ID INTEGER,
PRIMARY KEY(PM_ID),
FOREIGN KEY(MP_ID) REFERENCES MENU_PROFILE (MP_ID));
--  INSERT QUERY FOR PLATFORM_MANAGEMENT TABLE
INSERT INTO PLATFORM_MANAGEMENT(MP_ID,POSTAP_ID,SPP_ID,VP_ID)
SELECT MP_ID,POSTAP_ID,SPP_ID,VP_ID FROM USER_RIGHTS_SQL_FORMAT WHERE MP_ID IS NOT NULL AND PM_ID IS NOT NULL;

SET END_TIME = (SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR PLATFORM_MANAGEMENT DETAILS
SET @COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SQL_FORMAT WHERE MP_ID IS NOT NULL AND PM_ID IS NOT NULL);
SET @COUNT_SPLITING_PLATFORM_MANAGEMENT = (SELECT COUNT(*) FROM PLATFORM_MANAGEMENT);
SET @REJECTION_COUNT=(@COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT-@COUNT_SPLITING_PLATFORM_MANAGEMENT);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT WHERE PREASP_DATA='PLATFORM_MANAGEMENT';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='PLATFORM_MANAGEMENT'),@COUNT_SPLITING_PLATFORM_MANAGEMENT,
(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='PLATFORM_MANAGEMENT'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USERSTAMP);
SET FOREIGN_KEY_CHECKS=1;
END;


CALL SP_INSERT_USER_RIGHTS_SQL_FORMAT('SAFIYULLAH.MOHIDEEN@SSOMENS.COM');
