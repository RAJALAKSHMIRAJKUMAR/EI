-- version:0.7 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
 --version:0.6 --sdate:25/02/2014 --edate:26/02/2014 --issue:750 comment:#30 -desc:added uld_id header and source timestamp by:dhivya
--version:0.5--sdate:20/02/2014 --edate:20/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
--VER 0.4 STARTDATE:06/02/2014 ENDDATE:06/02/2014 ISSUE NO:594 COMMENT :#86 DESC:REMOVED TERMINATE='X' FOR GUEST CARDS DONE BY:DHIVYA.A
--VER 0.3 STARTDATE:29/01/2014 ENDDATE:29/01/2014 ISSUE NO:594 COMMENT :#70 DESC:CUSTOMER_ENTRY_DETAILS TABLE S UPDATED AS PER STIME AND ETIME DATATYPE UPDATION DONE BY:DHIVYA.A
--VER 0.2 STARTDATE:21/01/2014 ENDDATE:22/01/2014 ISSUE NO:594 COMMENT :#50 DESC:ALL UPDATION DONE IN THE SPLITTED TABLE ITSELF NOT IN THE CUSTOMER SCDB FORMAT TABLE DONE BY:DHIVYA

--INSERT QUERY FOR CUSTOMER_TERMINATION_DETAILS
DROP PROCEDURE IF EXISTS SP_MIG_CUSTOMER_TERMINATION_DETAILS;
CREATE PROCEDURE SP_MIG_CUSTOMER_TERMINATION_DETAILS(IN CUSTOMER_USERSTAMP VARCHAR(100))
BEGIN
	-- VARIABLE DECLARATION
    DECLARE MAX_CUSTOMER INT;
    DECLARE MIN_CUSTOMER INT;
    DECLARE RE INT;
    DECLARE MAX_CTD_ID INT;
    DECLARE MIN_CTD_ID INT;
    DECLARE MIN_REC_VER INT;
    DECLARE MAX_REC_VER INT;
    DECLARE CUSTOMERID INT;
  
    DECLARE MAX_GUEST_CTD_ID INT;
    DECLARE MIN_GUEST_CTD_ID INT;
    DECLARE CUSTID INT;
    DECLARE STARTDATE DATE;
    DECLARE ENDDATE DATE;
    DECLARE PRETERMINATEDATE DATE;
    DECLARE RECVER INTEGER;
    DECLARE GUEST_RECVER INTEGER;
    DECLARE ACTIVE_REC_VER INTEGER;
    DECLARE MIN_RECHECKINID INTEGER;
    DECLARE MAX_RECHECKINID INTEGER;
	DECLARE TIME_MAX_REC_VER INTEGER;
	DECLARE TIME_PRETERMINATE_DATE DATE;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	CALL SP_TEMP_CUSTOMER_SCDB_FORMAT();
  SET START_TIME=(SELECT CURTIME());
-- TEMP TABLE FOR CUSTOMER_TERMINATION_DETAILS
DROP TABLE IF EXISTS TEMP_CUSTOMER_TERMINATION_DETAILS;
CREATE TABLE TEMP_CUSTOMER_TERMINATION_DETAILS(
CTD_ID INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
CUSTOMER_ID INTEGER NOT NULL,
UASD_ID INTEGER,
CED_REC_VER INTEGER,
CTD_STARTDATE DATE NOT NULL,
CTD_ENDDATE DATE NOT NULL,
CTD_PRETERMINATEDATE DATE ,
CTD_TERMINATE CHAR(1),
CED_RECHECKIN CHAR(1),
CTD_GUEST_CARD CHAR(1),
RENT_AMOUNT DECIMAL(7,2),
DEPOSIT DECIMAL(7,2),
PROCESSING_FEE DECIMAL(7,2),
AIRCON_FIXED_FEE DECIMAL(7,2),
ELECTRICITY_CAP DECIMAL(7,2),
DRYCLEAN_FEE DECIMAL(7,2),
AIRCON_QUARTERLY_FEE DECIMAL(7,2),
CHECKOUT_CLEANING_FEE DECIMAL(7,2),
ULD_ID INTEGER NOT NULL,
CTD_TIMESTAMP VARCHAR(50) NOT NULL);

-- TEMP TABLE FOR TEMP_TERMINATION_DETAILS
DROP TABLE IF EXISTS TEMP_TERMINATION_DETAILS;
CREATE TABLE TEMP_TERMINATION_DETAILS(
CTD_ID INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
CUSTOMER_ID INTEGER NOT NULL,
UASD_ID INTEGER,
CED_REC_VER INTEGER,
CTD_STARTDATE DATE NOT NULL,
CTD_ENDDATE DATE NOT NULL,
CTD_PRETERMINATEDATE DATE ,
CTD_TERMINATE CHAR(1),
CED_RECHECKIN CHAR(1),
CTD_GUEST_CARD CHAR(1),
RENT_AMOUNT DECIMAL(7,2),
DEPOSIT DECIMAL(7,2),
PROCESSING_FEE DECIMAL(7,2),
AIRCON_FIXED_FEE DECIMAL(7,2),
ELECTRICITY_CAP DECIMAL(7,2),
DRYCLEAN_FEE DECIMAL(7,2),
AIRCON_QUARTERLY_FEE DECIMAL(7,2),
CHECKOUT_CLEANING_FEE DECIMAL(7,2),
ULD_ID INTEGER NOT NULL,
CTD_TIMESTAMP VARCHAR(50) NOT NULL);

--TEMP TABLE FOR TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS
DROP TABLE IF EXISTS TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS;
CREATE TABLE TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS(
CTD_ID INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
CUSTOMER_ID INTEGER NOT NULL,
UASD_ID INTEGER,
CED_REC_VER INTEGER,
CTD_STARTDATE DATE NOT NULL,
CTD_ENDDATE DATE NOT NULL,
CTD_PRETERMINATEDATE DATE ,
CTD_TERMINATE CHAR(1),
CTD_GUEST_CARD CHAR(1),
ULD_ID INTEGER NOT NULL,
CTD_TIMESTAMP VARCHAR(50) NOT NULL);

-- INSERT QUERY FOR TEMP_TERMINATION_DETAILS
INSERT INTO TEMP_TERMINATION_DETAILS(CUSTOMER_ID,UASD_ID,CED_REC_VER,CTD_STARTDATE,CTD_ENDDATE,CTD_PRETERMINATEDATE,CTD_TERMINATE,CTD_GUEST_CARD,RENT_AMOUNT,DEPOSIT,PROCESSING_FEE,AIRCON_FIXED_FEE,ELECTRICITY_CAP,DRYCLEAN_FEE,AIRCON_QUARTERLY_FEE,CHECKOUT_CLEANING_FEE,ULD_ID,CTD_TIMESTAMP)
SELECT M.CC_CUST_ID,U.UASD_ID,M.CC_REC_VER,M.CC_STARTDATE,M.CC_ENDDATE,M.CC_PRE_TERMINATE_DATE,M.CC_TERMINATE,M.CC_GUEST_CARD_NO,M.CC_RENT_AMOUNT,M.CC_DEPOSIT,M.CC_PROCESSING_FEE,M.CC_AIRCON_FIXED_FEE,M.CC_ELECTRICITY_CAP,M.CC_DRYCLEAN_FEE,M.CC_AIRCON_QUARTERLY_FEE,M.CC_CHECKOUT_CLEANING_FEE,ULD.ULD_ID,M.TIMESTAMP FROM TEMP_CUSTOMER_SCDB_FORMAT M,UNIT_ACCESS_STAMP_DETAILS U,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=M.USERSTAMP AND U.UASD_ACCESS_CARD=M.CC_CARD_NO AND M.CC_GUEST_CARD_NO IS NULL ORDER BY M.CC_CUST_ID,M.CC_REC_VER;
INSERT INTO TEMP_TERMINATION_DETAILS(CUSTOMER_ID,CED_REC_VER,CTD_STARTDATE,CTD_ENDDATE,CTD_PRETERMINATEDATE,CTD_TERMINATE,CTD_GUEST_CARD,RENT_AMOUNT,DEPOSIT,PROCESSING_FEE,AIRCON_FIXED_FEE,ELECTRICITY_CAP,DRYCLEAN_FEE,AIRCON_QUARTERLY_FEE,CHECKOUT_CLEANING_FEE,ULD_ID,CTD_TIMESTAMP)
SELECT M.CC_CUST_ID,M.CC_REC_VER,M.CC_STARTDATE,M.CC_ENDDATE,M.CC_PRE_TERMINATE_DATE,M.CC_TERMINATE,M.CC_GUEST_CARD_NO,M.CC_RENT_AMOUNT,M.CC_DEPOSIT,M.CC_PROCESSING_FEE,M.CC_AIRCON_FIXED_FEE,M.CC_ELECTRICITY_CAP,M.CC_DRYCLEAN_FEE,M.CC_AIRCON_QUARTERLY_FEE,M.CC_CHECKOUT_CLEANING_FEE,ULD.ULD_ID,M.TIMESTAMP FROM TEMP_CUSTOMER_SCDB_FORMAT M,USER_LOGIN_DETAILS ULD WHERE M.CC_CARD_NO IS NULL AND M.USERSTAMP=ULD.ULD_LOGINID AND M.CC_GUEST_CARD_NO IS NULL ORDER BY M.CC_CUST_ID,M.CC_REC_VER;


-- INSERT QUERY FOR TEMP_CUSTOMER_TERMINATION_DETAILS
INSERT INTO TEMP_CUSTOMER_TERMINATION_DETAILS(CUSTOMER_ID,UASD_ID,CED_REC_VER,CTD_STARTDATE,CTD_ENDDATE,CTD_PRETERMINATEDATE,CTD_TERMINATE,CTD_GUEST_CARD,RENT_AMOUNT,DEPOSIT,PROCESSING_FEE,AIRCON_FIXED_FEE,ELECTRICITY_CAP,DRYCLEAN_FEE,AIRCON_QUARTERLY_FEE,CHECKOUT_CLEANING_FEE,ULD_ID,CTD_TIMESTAMP)
SELECT CUSTOMER_ID,UASD_ID,CED_REC_VER,CTD_STARTDATE,CTD_ENDDATE,CTD_PRETERMINATEDATE,CTD_TERMINATE,CTD_GUEST_CARD,RENT_AMOUNT,DEPOSIT,PROCESSING_FEE,AIRCON_FIXED_FEE,ELECTRICITY_CAP,DRYCLEAN_FEE,AIRCON_QUARTERLY_FEE,CHECKOUT_CLEANING_FEE,ULD_ID,CTD_TIMESTAMP FROM TEMP_TERMINATION_DETAILS ORDER BY CUSTOMER_ID,CED_REC_VER;

-- INSERT QUERY FOR TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS
INSERT INTO TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS(CUSTOMER_ID,UASD_ID,CED_REC_VER,CTD_STARTDATE,CTD_ENDDATE,CTD_PRETERMINATEDATE,CTD_TERMINATE,CTD_GUEST_CARD,ULD_ID,CTD_TIMESTAMP)
SELECT M.CC_CUST_ID,U.UASD_ID,M.CC_REC_VER,M.CC_STARTDATE,M.CC_ENDDATE,M.CC_PRE_TERMINATE_DATE,M.CC_TERMINATE,M.CC_GUEST_CARD_NO,ULD.ULD_ID,M.TIMESTAMP FROM TEMP_CUSTOMER_SCDB_FORMAT M,USER_LOGIN_DETAILS ULD,UNIT_ACCESS_STAMP_DETAILS U WHERE U.UASD_ACCESS_CARD=M.CC_CARD_NO AND ULD.ULD_LOGINID=M.USERSTAMP AND M.CC_GUEST_CARD_NO IS NOT NULL ORDER BY M.CC_CUST_ID,M.CC_REC_VER;
INSERT INTO TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS(CUSTOMER_ID,CED_REC_VER,CTD_STARTDATE,CTD_ENDDATE,CTD_PRETERMINATEDATE,CTD_TERMINATE,CTD_GUEST_CARD,ULD_ID,CTD_TIMESTAMP)
SELECT M.CC_CUST_ID,M.CC_REC_VER,M.CC_STARTDATE,M.CC_ENDDATE,M.CC_PRE_TERMINATE_DATE,M.CC_TERMINATE,M.CC_GUEST_CARD_NO,ULD.ULD_ID,M.TIMESTAMP FROM TEMP_CUSTOMER_SCDB_FORMAT M,USER_LOGIN_DETAILS ULD WHERE M.CC_CARD_NO IS NULL AND ULD.ULD_LOGINID=M.USERSTAMP AND  M.CC_GUEST_CARD_NO IS NOT NULL ORDER BY M.CC_CUST_ID,M.CC_REC_VER;

UPDATE TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS SET CTD_TERMINATE=NULL;
UPDATE TEMP_CUSTOMER_TERMINATION_DETAILS SET CTD_TERMINATE=NULL;
  
  
    SET MAX_CUSTOMER =(SELECT MAX(CUSTOMER_ID) FROM TEMP_CUSTOMER_TERMINATION_DETAILS);
    SET MIN_CUSTOMER =(SELECT MIN(CUSTOMER_ID) FROM TEMP_CUSTOMER_TERMINATION_DETAILS);
  
    WHILE MIN_CUSTOMER<= MAX_CUSTOMER DO
    SET MAX_CTD_ID=(SELECT MAX(CTD_ID) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER );
    SET MIN_CTD_ID=(SELECT MIN(CTD_ID) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER );
  

    SET RE=1;
        WHILE MIN_CTD_ID<=MAX_CTD_ID DO
      
			-- UPDATE RECVER IN TEMP_CUSTOMER_TERMINATION_DETAILS
            UPDATE TEMP_CUSTOMER_TERMINATION_DETAILS SET CED_REC_VER=RE WHERE CTD_ID=MIN_CTD_ID;
            SET CUSTID=(SELECT CUSTOMER_ID FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_CTD_ID);
            SET RECVER=(SELECT CED_REC_VER FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_CTD_ID);
			
			-- UPDATE RECHECKIN FLAG IN TEMP_CUSTOMER_TERMINATION_DETAILS
            UPDATE TEMP_CUSTOMER_TERMINATION_DETAILS SET CED_RECHECKIN=(SELECT CED_RECHECKIN FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE
            CUSTOMER_ID=CUSTID AND CED_REC_VER=RECVER)WHERE CTD_ID=MIN_CTD_ID;
            SET RE=RE+1;
            SET MIN_CTD_ID=MIN_CTD_ID+1;
            END WHILE;
          
			-- TEMP TABLE FOR TEMP_RECHECKIN_CUSTOMER FOR PUTTING TERMINATE COLUMN AS 'X'
            DROP TABLE IF EXISTS TEMP_RECHECKIN_CUSTOMER;
            CREATE TABLE TEMP_RECHECKIN_CUSTOMER(ID INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,CUSTOMER_ID INTEGER,REC_VER INTEGER);
            INSERT INTO TEMP_RECHECKIN_CUSTOMER(CUSTOMER_ID,REC_VER) SELECT CUSTOMER_ID,CED_REC_VER FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_RECHECKIN='X';

		-- IF THE DATA NOT IN THE TEMP_RECHECKIN_CUSTOMER THAT CUSTOMER S NOT A RECHECKIN CUSTOMER 
        IF NOT EXISTS(SELECT * FROM TEMP_RECHECKIN_CUSTOMER)THEN
            SET ACTIVE_REC_VER=(SELECT MAX(CED_REC_VER) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CTD_STARTDATE,CTD_ENDDATE>CTD_STARTDATE)AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CURDATE(),CTD_ENDDATE>CURDATE()));
                IF ACTIVE_REC_VER IS NULL THEN
                    SET MAX_REC_VER=(SELECT MAX(CED_REC_VER) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>=CTD_STARTDATE,CTD_ENDDATE>=CTD_STARTDATE)AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE<=CURDATE(),CTD_ENDDATE<=CURDATE()));
                        IF MAX_REC_VER IS NOT NULL THEN
							UPDATE TEMP_CUSTOMER_TERMINATION_DETAILS SET CTD_TERMINATE='X' WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_REC_VER=MAX_REC_VER;
                        END IF;
                END IF;
      
        END IF;
        IF EXISTS(SELECT CUSTOMER_ID FROM TEMP_RECHECKIN_CUSTOMER GROUP BY CUSTOMER_ID)THEN
        SET MIN_RECHECKINID=(SELECT MIN(ID) FROM TEMP_RECHECKIN_CUSTOMER);
        SET MAX_RECHECKINID=(SELECT MAX(ID) FROM TEMP_RECHECKIN_CUSTOMER);
            WHILE MIN_RECHECKINID<=MAX_RECHECKINID DO
              
                    SET MAX_REC_VER=(SELECT MAX(CED_REC_VER) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_REC_VER<(SELECT REC_VER FROM TEMP_RECHECKIN_CUSTOMER WHERE ID=MIN_RECHECKINID) AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CTD_STARTDATE,CTD_ENDDATE>CTD_STARTDATE)AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE<=CURDATE(),CTD_ENDDATE<=CURDATE()));
                        IF MAX_REC_VER IS NOT NULL THEN
                            UPDATE TEMP_CUSTOMER_TERMINATION_DETAILS SET CTD_TERMINATE='X' WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_REC_VER=MAX_REC_VER;
							-- CUSTOMER_ENTRY_DETAILS TIME PROFILE UPDATION
						IF EXISTS(SELECT CTD_PRETERMINATEDATE FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND CTD_GUEST_CARD IS NULL AND CED_REC_VER=MAX_REC_VER AND CTD_PRETERMINATEDATE!=' ')THEN
							UPDATE CUSTOMER_ENTRY_DETAILS SET CED_ED_STIME=25,CED_ED_ETIME=26 WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_REC_VER=MAX_REC_VER;
						END IF;
                    END IF;
          
  
            SET MIN_RECHECKINID=MIN_RECHECKINID+1;
            END WHILE;
        END IF;
    SET ACTIVE_REC_VER=(SELECT MAX(CED_REC_VER) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER  AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CTD_STARTDATE,CTD_ENDDATE>CTD_STARTDATE)AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CURDATE(),CTD_ENDDATE>CURDATE()));
    IF ACTIVE_REC_VER IS NULL THEN
        SET MAX_REC_VER=(SELECT MAX(CED_REC_VER) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CTD_STARTDATE,CTD_ENDDATE>CTD_STARTDATE)AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE<=CURDATE(),CTD_ENDDATE<=CURDATE()));
            IF MAX_REC_VER IS NOT NULL THEN
                UPDATE TEMP_CUSTOMER_TERMINATION_DETAILS SET CTD_TERMINATE='X' WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_REC_VER=MAX_REC_VER;
            END IF;
    END IF;
			
			SET TIME_MAX_REC_VER=(SELECT MAX(CED_REC_VER) FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND CTD_GUEST_CARD IS NULL AND IF(CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>CTD_STARTDATE,CTD_ENDDATE>CTD_STARTDATE));
			
			-- UPDATE TIME_PROFILE ID IN CUSTOMER_ENTRY_DETAILS TABLE
			IF EXISTS(SELECT CTD_PRETERMINATEDATE FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER AND CTD_GUEST_CARD IS NULL AND CED_REC_VER=TIME_MAX_REC_VER AND CTD_PRETERMINATEDATE!=' ')THEN
				UPDATE CUSTOMER_ENTRY_DETAILS SET CED_ED_STIME=25,CED_ED_ETIME=26 WHERE CUSTOMER_ID=MIN_CUSTOMER AND CED_REC_VER=TIME_MAX_REC_VER;
			END IF;
				
            
          
      
        SET MIN_CUSTOMER=MIN_CUSTOMER+1;
    END WHILE;
  
    UPDATE TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS SET CED_REC_VER=NULL;
    SET MAX_GUEST_CTD_ID=(SELECT MAX(CTD_ID) FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS);
    SET MIN_GUEST_CTD_ID=(SELECT MIN(CTD_ID) FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS);
    WHILE MIN_GUEST_CTD_ID<=MAX_GUEST_CTD_ID DO
        SET CUSTID=(SELECT CUSTOMER_ID FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_GUEST_CTD_ID);
        SET STARTDATE=(SELECT CTD_STARTDATE FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_GUEST_CTD_ID);
        SET PRETERMINATEDATE=(SELECT CTD_PRETERMINATEDATE FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_GUEST_CTD_ID);
        IF PRETERMINATEDATE IS NOT NULL THEN
            SET ENDDATE=(SELECT CTD_PRETERMINATEDATE FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_GUEST_CTD_ID);
        ELSE
            SET ENDDATE=(SELECT CTD_ENDDATE FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_GUEST_CTD_ID);
        END IF;
        UPDATE TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS  SET CED_REC_VER=(SELECT CED_REC_VER FROM TEMP_CUSTOMER_TERMINATION_DETAILS WHERE CUSTOMER_ID=CUSTID AND CTD_STARTDATE<=STARTDATE AND IF (CTD_PRETERMINATEDATE IS NOT NULL,CTD_PRETERMINATEDATE>=ENDDATE,CTD_ENDDATE>=ENDDATE)) WHERE CTD_ID=MIN_GUEST_CTD_ID;
        SET GUEST_RECVER=(SELECT CED_REC_VER FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS WHERE CTD_ID=MIN_GUEST_CTD_ID);
      
        SET MIN_GUEST_CTD_ID=MIN_GUEST_CTD_ID+1;
    END WHILE;
  
    SET FOREIGN_KEY_CHECKS=0;
	
	DROP TABLE IF EXISTS CUSTOMER_TERMINATION_DETAILS;
	CREATE TABLE CUSTOMER_TERMINATION_DETAILS(
	CTD_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CUSTOMER_ID	INTEGER NOT NULL,
	CED_REC_VER	INTEGER NOT NULL,
	UASD_ID	INTEGER NULL,
	CTD_STARTDATE DATE NOT NULL,
	CTD_ENDDATE	DATE NOT NULL,
	CTD_TERMINATE CHAR(1) NULL,
	CTD_PRETERMINATE_DATE DATE NULL,
	CTD_GUEST_CARD CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	CTD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(CTD_ID),
	FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
	-- INSERT QUERY FOR CUSTOMER_TERMINATION_DETAILS TABLE
    INSERT INTO CUSTOMER_TERMINATION_DETAILS(CUSTOMER_ID,CED_REC_VER,UASD_ID,CTD_STARTDATE,CTD_ENDDATE,CTD_TERMINATE,CTD_PRETERMINATE_DATE,CTD_GUEST_CARD,ULD_ID,CTD_TIMESTAMP)
    SELECT CUSTOMER_ID,CED_REC_VER,UASD_ID,CTD_STARTDATE,CTD_ENDDATE,CTD_TERMINATE,CTD_PRETERMINATEDATE,CTD_GUEST_CARD,ULD_ID,CTD_TIMESTAMP FROM TEMP_CUSTOMER_TERMINATION_DETAILS;
    INSERT INTO CUSTOMER_TERMINATION_DETAILS(CUSTOMER_ID,CED_REC_VER,UASD_ID,CTD_STARTDATE,CTD_ENDDATE,CTD_TERMINATE,CTD_PRETERMINATE_DATE,CTD_GUEST_CARD,ULD_ID,CTD_TIMESTAMP)
    SELECT CUSTOMER_ID,CED_REC_VER,UASD_ID,CTD_STARTDATE,CTD_ENDDATE,CTD_TERMINATE,CTD_PRETERMINATEDATE,CTD_GUEST_CARD,ULD_ID,CTD_TIMESTAMP FROM TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS;
  
 SET END_TIME=(SELECT CURTIME());
 SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
 SET @COUNT_SCDB_CTD=(SELECT COUNT(*) FROM CUSTOMER_SCDB_FORMAT);
 SET @COUNT_SPLITTING_CTD=(SELECT COUNT(*) FROM CUSTOMER_TERMINATION_DETAILS);
 SET @REJECTION_COUNT=(@COUNT_SCDB_CTD-@COUNT_SPLITTING_CTD);
	
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_CTD WHERE PREASP_DATA='CUSTOMER_TERMINATION_DETAILS';
		
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_TERMINATION_DETAILS'),@COUNT_SPLITTING_CTD,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER_TERMINATION_DETAILS'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CUSTOMER'),DURATION,@REJECTION_COUNT,CUSTOMER_USERSTAMP);
DROP TABLE IF EXISTS TEMP_RECHECKIN_CUSTOMER;
DROP TABLE IF EXISTS TEMP_GUEST_CUSTOMER_TERMINATION_DETAILS;
DROP TABLE IF EXISTS TEMP_TERMINATION_DETAILS;
		
COMMIT;
END;