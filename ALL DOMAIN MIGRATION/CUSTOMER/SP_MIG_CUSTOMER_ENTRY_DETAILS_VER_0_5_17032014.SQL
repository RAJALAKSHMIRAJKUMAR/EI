-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.4--sdate:20/02/2014 --edate:20/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
--VER 0.3 STARTDATE:29/01/2014 ENDDATE:29/01/2014 ISSUE NO:594 COMMENT :#70 DESC:CUSTOMER_ENTRY_DETAILS TABLE S UPDATED AS PER STIME AND ETIME DATATYPE UPDATION DONE BY:DHIVYA.A
--VER 0.2 STARTDATE:21/01/2014 ENDDATE:22/01/2014 ISSUE NO:594 COMMENT :#50 DESC:ALL UPDATION DONE IN THE SPLITTED TABLE ITSELF NOT IN THE CUSTOMER SCDB FORMAT TABLE DONE BY:DHIVYA


--TEMPORARY SP FOR CUSTOMER_ENTRY_DETAILS TABLE
DROP PROCEDURE IF EXISTS SP_TEMP_CUSTOMER_ENTRY;
CREATE PROCEDURE SP_TEMP_CUSTOMER_ENTRY()
BEGIN
DECLARE MAX_CUSTOMER INT;
DECLARE MIN_CUSTOMER INT;
DECLARE REC_VER INT;
DECLARE RE INT;
DECLARE MAX_CED_ID INT;
DECLARE MIN_CED_ID INT;
DECLARE STARTDATE DATE;
DECLARE ENDDATE DATE;
DECLARE PRETERMINATEDATE DATE;

SET MAX_CUSTOMER =(SELECT MAX(CC_CUST_ID) FROM TEMP_CUSTOMER_SCDB_FORMAT);
SET MIN_CUSTOMER =(SELECT MIN(CC_CUST_ID) FROM TEMP_CUSTOMER_SCDB_FORMAT);
SET RE=1;
CALL SP_TEMP_CUSTOMER_SCDB_FORMAT();
DROP TABLE IF EXISTS TEMP_CUSTOMER_ENTRY_DETAILS;
CREATE TABLE TEMP_CUSTOMER_ENTRY_DETAILS
(CED_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
UNIT_ID INTEGER NOT NULL,
UASD_ID INTEGER NOT NULL,
CED_REC_VER INTEGER NOT NULL,
CED_STARTDATE DATE NOT NULL,
CED_ENDDATE DATE NOT NULL,
CED_PRETERMINATE_DATE DATE NULL,
CED_SD_STIME INTEGER NOT NULL,
CED_SD_ETIME INTEGER NOT NULL,
CED_ED_STIME INTEGER NOT NULL,
CED_ED_ETIME INTEGER NOT NULL,
CED_LEASE_PERIOD VARCHAR(30) NULL,
CED_QUARTERS DECIMAL(5,2) NULL,
CED_EXTENSION CHAR(1) NULL,
CED_RECHECKIN CHAR(1)NULL,
CED_PRETERMINATE CHAR(1) NULL,    
CED_PROCESSING_WAIVED CHAR(1) NULL,
CED_PRORATED CHAR(1) NULL,
CED_NOTICE_PERIOD TINYINT(1) NULL,    
CED_NOTICE_START_DATE DATE NULL,    
CED_CANCEL_DATE    DATE NULL,
CED_COMMENTS TEXT NULL,
CED_USERSTAMP VARCHAR(50) NOT NULL,    
CED_TIMESTAMP TIMESTAMP NOT NULL,
PRIMARY KEY(CED_ID));


WHILE MIN_CUSTOMER<= MAX_CUSTOMER DO
	IF EXISTS(SELECT CC_REC_VER FROM TEMP_CUSTOMER_SCDB_FORMAT WHERE MIN_CUSTOMER=CC_CUST_ID ORDER BY 
			CC_REC_VER ASC) THEN
		INSERT INTO `TEMP_CUSTOMER_ENTRY_DETAILS`(`CUSTOMER_ID`,`UNIT_ID`,`UASD_ID`,`CED_REC_VER`,`CED_STARTDATE`,`CED_ENDDATE`,CED_PRETERMINATE_DATE, CED_SD_STIME, CED_SD_ETIME, CED_ED_STIME, CED_ED_ETIME,`CED_LEASE_PERIOD`,
		`CED_QUARTERS`,`CED_EXTENSION`,`CED_PRETERMINATE`,`CED_NOTICE_PERIOD`,`CED_NOTICE_START_DATE`,`CED_CANCEL_DATE`,CED_PROCESSING_WAIVED, `CED_USERSTAMP`)
		SELECT C2.CC_CUST_ID,U.UNIT_ID,U2.UASD_ID,C2.CC_REC_VER,C2.CC_STARTDATE,C2.CC_ENDDATE,C2.CC_PRE_TERMINATE_DATE,19, 20, 7,
		8,C2.CC_LEASE_PERIOD,C2.CC_QUARTERS,C2.CC_EXTENSION,C2.CC_PRETERMINATE,C2.CC_NOTICE_PERIOD,
		C2.CC_NOTICE_START_DATE,C2.CC_CANCEL_DATE,C2.CC_PROCESSING_WAIVED,C2.USERSTAMP FROM TEMP_CUSTOMER_SCDB_FORMAT C2,UNIT_ACCESS_STAMP_DETAILS U2,UNIT U,UNIT_ROOM_TYPE_DETAILS URTD WHERE CC_GUEST_CARD_NO IS NULL
		AND U.UNIT_ID=U2.UNIT_ID AND URTD.URTD_ID=U2.URTD_ID AND U.UNIT_NO=C2.CC_UNIT_NO AND C2.CC_ROOMTYPE=URTD.URTD_ROOM_TYPE AND C2.CC_CUST_ID=MIN_CUSTOMER ORDER BY C2.CC_REC_VER;
        
		SET MAX_CED_ID=(SELECT MAX(CED_ID) FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER);SET MIN_CED_ID=(SELECT MIN(CED_ID) FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER);
		SET RE=1;

				
	WHILE MIN_CED_ID<=MAX_CED_ID DO
		UPDATE TEMP_CUSTOMER_ENTRY_DETAILS SET CED_REC_VER=RE WHERE CED_ID=MIN_CED_ID;
		SET STARTDATE=(SELECT CED_STARTDATE FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=(MIN_CED_ID+1) AND IF(CED_PRETERMINATE_DATE IS NOT NULL,CED_PRETERMINATE_DATE>CED_STARTDATE,CED_ENDDATE>CED_STARTDATE));
		SET PRETERMINATEDATE=(SELECT CED_PRETERMINATE_DATE FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=MIN_CED_ID );
		IF PRETERMINATEDATE IS NOT NULL THEN
			SET ENDDATE=(SELECT CED_PRETERMINATE_DATE FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=MIN_CED_ID );
		ELSE
			SET ENDDATE=(SELECT CED_ENDDATE FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE CED_ID=MIN_CED_ID);
		END IF;
		IF (STARTDATE>ENDDATE)THEN
			UPDATE TEMP_CUSTOMER_ENTRY_DETAILS SET CED_RECHECKIN='X' WHERE CED_ID=(MIN_CED_ID+1);
		END IF;

		SET RE=RE+1;
		SET MIN_CED_ID=MIN_CED_ID+1;
	END WHILE;
END IF;
SET MIN_CUSTOMER=MIN_CUSTOMER+1;
END WHILE;
END;



--SP FOR CUSTOMER_ENTRY_DETAILS
DROP PROCEDURE IF EXISTS SP_TEMP_MIG_CUSTOMER_ENTRY_INSERT;
CREATE PROCEDURE SP_TEMP_MIG_CUSTOMER_ENTRY_INSERT()
BEGIN
	DECLARE MAX_CUSTOMER INT;
	DECLARE MIN_CUSTOMER INT;
	DECLARE REC_VER INT;
	DECLARE RE INT;
	DECLARE MAX_CED_ID INT;
	DECLARE MIN_CED_ID INT;
	DECLARE MIN_REC_VER INT;
	DECLARE MAX_REC_VER INT;
	DECLARE CUSTID INT;
	DECLARE RECVER INT;
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS CUSTOMER_ENTRY_DETAILS;
CREATE TABLE CUSTOMER_ENTRY_DETAILS(
CED_ID INTEGER NOT NULL	AUTO_INCREMENT,
CUSTOMER_ID	INTEGER NOT NULL,
UNIT_ID	INTEGER NOT NULL,
UASD_ID	INTEGER NOT NULL, 
CED_REC_VER	INTEGER NOT NULL,	
CED_SD_STIME INTEGER NOT NULL,	
CED_SD_ETIME INTEGER NOT NULL,	
CED_ED_STIME INTEGER NOT NULL,	
CED_ED_ETIME INTEGER NOT NULL,	
CED_LEASE_PERIOD VARCHAR(30) NULL,	
CED_QUARTERS DECIMAL(5,2) NULL,	
CED_RECHECKIN CHAR(1) NULL,	
CED_EXTENSION CHAR(1) NULL,	
CED_PRETERMINATE CHAR(1) NULL,	
CED_PROCESSING_WAIVED CHAR(1) NULL,	
CED_PRORATED CHAR(1) NULL,	
CED_NOTICE_PERIOD TINYINT(1) NULL,	
CED_NOTICE_START_DATE DATE NULL,	
CED_CANCEL_DATE	DATE NULL,
PRIMARY KEY(CED_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
FOREIGN KEY(UASD_ID) REFERENCES UNIT_ACCESS_STAMP_DETAILS(UASD_ID),
FOREIGN KEY(CED_SD_STIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID),
FOREIGN KEY(CED_SD_ETIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID),
FOREIGN KEY(CED_ED_STIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID),
FOREIGN KEY(CED_ED_ETIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID));

	SET MAX_CUSTOMER =(SELECT MAX(CC_CUST_ID) FROM TEMP_CUSTOMER_SCDB_FORMAT);
	SET MIN_CUSTOMER =(SELECT MIN(CC_CUST_ID) FROM TEMP_CUSTOMER_SCDB_FORMAT);
	SET RE=1;
	WHILE MIN_CUSTOMER<= MAX_CUSTOMER DO
		
			IF EXISTS(SELECT CC_REC_VER FROM TEMP_CUSTOMER_SCDB_FORMAT WHERE MIN_CUSTOMER=CC_CUST_ID ORDER BY 
			CC_REC_VER ASC) THEN
				SET FOREIGN_KEY_CHECKS=0;
				INSERT INTO CUSTOMER_ENTRY_DETAILS(CUSTOMER_ID,UNIT_ID,UASD_ID,CED_REC_VER,CED_SD_STIME,
				CED_SD_ETIME,CED_ED_STIME,CED_ED_ETIME,CED_LEASE_PERIOD,CED_QUARTERS,CED_EXTENSION,
				CED_PRETERMINATE,CED_NOTICE_PERIOD,CED_NOTICE_START_DATE,CED_PROCESSING_WAIVED,CED_CANCEL_DATE)
				SELECT MIN_CUSTOMER,U.UNIT_ID,UASD.UASD_ID,RE,19, 20, 7,8,M.CC_LEASE_PERIOD,M.CC_QUARTERS,M.CC_EXTENSION,M.CC_PRETERMINATE,M.CC_NOTICE_PERIOD,
				M.CC_NOTICE_START_DATE,M.CC_PROCESSING_WAIVED,M.CC_CANCEL_DATE FROM CUSTOMER AS C JOIN TEMP_CUSTOMER_SCDB_FORMAT AS M 
				ON  C.CUSTOMER_ID = M.CC_CUST_ID LEFT JOIN UNIT U ON U.UNIT_NO=M.CC_UNIT_NO LEFT JOIN 
				UNIT_ACCESS_STAMP_DETAILS UASD ON U.UNIT_ID=UASD.UNIT_ID LEFT JOIN UNIT_ROOM_TYPE_DETAILS AS URTD 
				ON URTD.URTD_ID=UASD.URTD_ID WHERE M.CC_CUST_ID=MIN_CUSTOMER AND UASD.UNIT_ID=U.UNIT_ID AND 
				M.CC_GUEST_CARD_NO IS NULL AND M.CC_ROOMTYPE=URTD.URTD_ROOM_TYPE ORDER BY M.CC_REC_VER;

		SET MAX_CED_ID=(SELECT MAX(CED_ID) FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER);
		SET MIN_CED_ID=(SELECT MIN(CED_ID) FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=MIN_CUSTOMER);
		SET RE=1;
				WHILE MIN_CED_ID<=MAX_CED_ID DO
					UPDATE CUSTOMER_ENTRY_DETAILS SET CED_REC_VER=RE WHERE CED_ID=MIN_CED_ID;
					SET CUSTID=(SELECT CUSTOMER_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=MIN_CED_ID);
					SET RECVER=(SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=MIN_CED_ID);
					UPDATE CUSTOMER_ENTRY_DETAILS  SET CED_RECHECKIN=(SELECT CED_RECHECKIN FROM TEMP_CUSTOMER_ENTRY_DETAILS WHERE 
					CUSTOMER_ID=CUSTID AND CED_REC_VER=RECVER)WHERE CUSTOMER_ID=CUSTID AND CED_REC_VER=RECVER;
					
					SET RE=RE+1;
					SET MIN_CED_ID=MIN_CED_ID+1;
				END WHILE;
			
			END IF;
		SET MIN_CUSTOMER=MIN_CUSTOMER+1;
	END WHILE;
	SET FOREIGN_KEY_CHECKS=1;
END;


DROP PROCEDURE IF EXISTS SP_MIG_CUSTOMER_ENTRY_DETAILS;
CREATE PROCEDURE SP_MIG_CUSTOMER_ENTRY_DETAILS(IN CUSTOMER_USERSTAMP VARCHAR(100))
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
SET START_TIME=(SELECT CURTIME());
CALL SP_TEMP_CUSTOMER_ENTRY();
CALL SP_TEMP_MIG_CUSTOMER_ENTRY_INSERT();
SET END_TIME=(SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
SET @COUNT_SCDB_CED=(SELECT COUNT(*)FROM TEMP_CUSTOMER_SCDB_FORMAT WHERE CC_GUEST_CARD_NO IS NULL);
SET @COUNT_SPLITTED_CED=(SELECT COUNT(*) FROM CUSTOMER_ENTRY_DETAILS);
SET @REJECTION_COUNT=(@COUNT_SCDB_CED-@COUNT_SPLITTED_CED);
	
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_CED WHERE PREASP_DATA='CUSTOMER_ENTRY_DETAILS';
		
		-- IF EXISTS(SELECT POSTAP_ID FROM POST_AUDIT_HISTORY WHERE POSTAP_ID=(SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_ENTRY_DETAILS'))THEN
			-- DELETE FROM POST_AUDIT_HISTORY WHERE POSTAP_ID=(SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_ENTRY_DETAILS');
		-- END IF;
		
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CUSTOMER_ENTRY_DETAILS'),@COUNT_SPLITTED_CED,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CUSTOMER_ENTRY_DETAILS'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CUSTOMER'),DURATION,@REJECTION_COUNT,CUSTOMER_USERSTAMP);
		
END;



