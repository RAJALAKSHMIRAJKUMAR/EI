-- version:0.9 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.8 --sdate:14/03/2014 --edate:14/03/2014 --issue:750 --desc:added comments in unit_access_stamp_details --doneby:RL
--version:0.7 --sdate:26/02/2014 --edate:26/02/2014 --issue:750 --desc:uld_id datatype intger changed as integer(2) --doneby:RL
DROP PROCEDURE IF EXISTS SP_TEMP_UNIT_SCDB_FORMAT;
CREATE PROCEDURE SP_TEMP_UNIT_SCDB_FORMAT()
BEGIN
--QUERY FOR CREATE TEMP_UNIT_SCDB_FORMAT TABLE
    DROP TABLE IF EXISTS TEMP_UNIT_SCDB_FORMAT;
    CREATE TABLE TEMP_UNIT_SCDB_FORMAT LIKE UNIT_SCDB_FORMAT;
--INSERT QUERY FOR CREATE TEMP_UNIT_SCDB_FORMAT TABLE
    INSERT INTO TEMP_UNIT_SCDB_FORMAT SELECT * FROM UNIT_SCDB_FORMAT;
--UPDATE QUERY FOR CREATE TEMP_UNIT_SCDB_FORMAT TABLE
    UPDATE TEMP_UNIT_SCDB_FORMAT SET UNIT_ROOM_TYPE='Studio1' WHERE UNIT_ROOM_TYPE='STUDIO 1';
    UPDATE TEMP_UNIT_SCDB_FORMAT SET UNIT_ROOM_TYPE='Studio2' WHERE UNIT_ROOM_TYPE='STUDIO 2';
END;   

--ALL UNIT DOMAIN SPLITED TABLE INSERT QUEREIS
DROP PROCEDURE IF EXISTS SP_UNIT_INSERT;
CREATE PROCEDURE SP_UNIT_INSERT(IN UNIT_USERSTAMP VARCHAR(100))
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
    SET FOREIGN_KEY_CHECKS=0;
    SET START_TIME=(SELECT CURTIME());
        --CREATE QUERY FOR UNIT_ROOM_TYPE_DETAILS
        DROP TABLE IF EXISTS UNIT_ROOM_TYPE_DETAILS;
        CREATE TABLE UNIT_ROOM_TYPE_DETAILS(
        URTD_ID    INTEGER NOT NULL AUTO_INCREMENT,
        URTD_ROOM_TYPE VARCHAR(30) UNIQUE NOT NULL,   
        ULD_ID INTEGER(2) NOT NULL,   
        URTD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY(URTD_ID),
		FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--INSERT QUERY FOR UNIT_ROOM_TYPE_DETAILS TABLE
        INSERT INTO UNIT_ROOM_TYPE_DETAILS(URTD_ROOM_TYPE,ULD_ID,URTD_TIMESTAMP)
		SELECT DISTINCT T.UNIT_ROOM_TYPE,ULD.ULD_ID,T.TIMESTAMP FROM TEMP_UNIT_SCDB_FORMAT T,USER_LOGIN_DETAILS ULD WHERE T.UNIT_ROOM_TYPE IS NOT NULL AND T.USERSTAMP=ULD.ULD_LOGINID GROUP BY UNIT_ROOM_TYPE;        
		SET END_TIME=(SELECT CURTIME());
        SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--COUNT CHECKING FOR UNIT_ROOM_TYPE_DETAILS
        SET @COUNT_SCDB_UNIT_ROOM_TYPE=(SELECT COUNT(DISTINCT(UNIT_ROOM_TYPE)) FROM TEMP_UNIT_SCDB_FORMAT WHERE UNIT_ROOM_TYPE IS NOT NULL);
        SET @COUNT_SPLITTING_UNIT_ROOM_TYPE=(SELECT COUNT(*) FROM UNIT_ROOM_TYPE_DETAILS);
        SET @REJECTION_COUNT=(@COUNT_SCDB_UNIT_ROOM_TYPE-@COUNT_SPLITTING_UNIT_ROOM_TYPE);
        UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UNIT_ROOM_TYPE WHERE PREASP_DATA='UNIT_ROOM_TYPE_DETAILS';
       INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
        VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_ROOM_TYPE_DETAILS'),@COUNT_SPLITTING_UNIT_ROOM_TYPE,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_ROOM_TYPE_DETAILS'),
        (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
       
	   --UNIT_STAMP_DUTY_TYPE
        SET START_TIME=(SELECT CURTIME());
        DROP TABLE IF EXISTS UNIT_STAMP_DUTY_TYPE;
        CREATE TABLE UNIT_STAMP_DUTY_TYPE(
        USDT_ID    INTEGER NOT NULL AUTO_INCREMENT,
        USDT_DATA CHAR(12) UNIQUE NOT NULL,   
        ULD_ID INTEGER(2) NOT NULL,   
        USDT_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY(USDT_ID),
		FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
        --INSERT QUERY FOR UNIT_STAMP_DUTY_TYPE TABLE
        INSERT INTO UNIT_STAMP_DUTY_TYPE(USDT_DATA,ULD_ID,USDT_TIMESTAMP)
		SELECT DISTINCT T.UNIT_STAMPDUTYTYPE,ULD.ULD_ID,T.TIMESTAMP FROM TEMP_UNIT_SCDB_FORMAT T,USER_LOGIN_DETAILS ULD WHERE T.UNIT_STAMPDUTYTYPE IS NOT NULL AND T.USERSTAMP=ULD.ULD_LOGINID GROUP BY UNIT_STAMPDUTYTYPE;        
		SET END_TIME=(SELECT CURTIME());
        SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
        --COUNT CHECKING FOR UNIT_STAMP_DUTY_TYPE
        SET @COUNT_SCDB_UNIT_STAMP_DUTY_TYPE=(SELECT COUNT(DISTINCT(UNIT_STAMPDUTYTYPE)) FROM TEMP_UNIT_SCDB_FORMAT WHERE UNIT_STAMPDUTYTYPE IS NOT NULL);
        SET @COUNT_SPLITTING_STAMP_DUTY_TYPE=(SELECT COUNT(*) FROM UNIT_STAMP_DUTY_TYPE);
        SET @REJECTION_COUNT=(@COUNT_SCDB_UNIT_STAMP_DUTY_TYPE-@COUNT_SPLITTING_STAMP_DUTY_TYPE);
        UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UNIT_STAMP_DUTY_TYPE WHERE PREASP_DATA='UNIT_STAMP_DUTY_TYPE';
        INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
        VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_STAMP_DUTY_TYPE'),@COUNT_SPLITTING_STAMP_DUTY_TYPE,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_STAMP_DUTY_TYPE'),
        (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
        
		SET START_TIME=(SELECT CURTIME());
        DROP TABLE IF EXISTS UNIT;
        CREATE TABLE UNIT(
        UNIT_ID    INTEGER NOT NULL AUTO_INCREMENT,
        UNIT_NO    SMALLINT(4) UNSIGNED ZEROFILL UNIQUE NOT NULL,
        PRIMARY KEY(UNIT_ID));
        --INSERT QUERY FOR UNIT TABLE
        INSERT INTO UNIT (UNIT_NO) SELECT UNIT_NO FROM TEMP_UNIT_SCDB_FORMAT GROUP BY UNIT_NO ORDER BY UNIT_NO;
        SET END_TIME=(SELECT CURTIME());
        SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
        --COUNT CHECKING FOR UNIT
        SET @COUNT_SCDB_UNIT=(SELECT COUNT(DISTINCT(UNIT_NO)) FROM TEMP_UNIT_SCDB_FORMAT WHERE UNIT_NO IS NOT NULL);
        SET @COUNT_SPLITTING_UNIT=(SELECT COUNT(*) FROM UNIT);
        SET @REJECTION_COUNT=(@COUNT_SCDB_UNIT-@COUNT_SPLITTING_UNIT);
        UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UNIT WHERE PREASP_DATA='UNIT';
        INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
        VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT'),@COUNT_SPLITTING_UNIT,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT'),
        (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
        
		SET START_TIME=(SELECT CURTIME());
        DROP TABLE IF EXISTS UNIT_DETAILS;
        CREATE TABLE UNIT_DETAILS(
        UD_ID INTEGER NOT NULL AUTO_INCREMENT,
        UNIT_ID    INTEGER NOT NULL,
        UD_START_DATE DATE NOT NULL,
        UD_END_DATE    DATE NOT NULL,   
        UD_PAYMENT SMALLINT(4) NOT NULL,   
        UD_DEPOSIT INTEGER(5) NULL,   
        UD_OBSOLETE CHAR(1) NULL,   
        UD_NON_EI CHAR(1) NULL,   
        UD_COMMENTS    TEXT NULL,   
        ULD_ID INTEGER(2) NOT NULL,   
        UD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY(UD_ID),
        FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
		FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
        --INSERT QUERY FOR UNIT_DETAILS TABLE
        INSERT INTO UNIT_DETAILS(UNIT_ID,UD_START_DATE,UD_END_DATE,UD_PAYMENT,UD_OBSOLETE,UD_NON_EI,UD_COMMENTS,ULD_ID,UD_TIMESTAMP)
         SELECT DISTINCT(U.UNIT_ID),TUSF.UNIT_START_DATE,TUSF.UNIT_END_DATE,TUSF.UNIT_RENTAL,TUSF.UNIT_OBSOLETE,
		TUSF.UD_NON_EI,TUSF.UNIT_COMMENTS,ULD.ULD_ID,TUSF.TIMESTAMP FROM UNIT U INNER JOIN TEMP_UNIT_SCDB_FORMAT TUSF
        ON U.UNIT_NO= TUSF.UNIT_NO JOIN USER_LOGIN_DETAILS ULD WHERE TUSF.UNIT_START_DATE IS NOT NULL AND TUSF.UNIT_END_DATE IS NOT NULL AND
        TUSF.UNIT_RENTAL IS NOT NULL AND ULD.ULD_LOGINID=TUSF.USERSTAMP GROUP BY UNIT_ID;
        SET END_TIME=(SELECT CURTIME());
        SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
        --COUNT CHECKING FOR UNIT_DETAILS
        SET @COUNT_SCDB_UNIT_DETAILS=(SELECT COUNT(*) FROM UNIT_SCDB_FORMAT WHERE UNIT_START_DATE IS NOT NULL AND UNIT_END_DATE IS NOT NULL AND UNIT_RENTAL IS NOT NULL);
        SET @COUNT_SPLITTING_UNIT_DETAILS=(SELECT COUNT(*) FROM UNIT_DETAILS);
        SET @REJECTION_COUNT=(@COUNT_SCDB_UNIT_DETAILS-@COUNT_SPLITTING_UNIT_DETAILS);
        UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UNIT_DETAILS WHERE PREASP_DATA='UNIT_DETAILS';
        INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
        VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_DETAILS'),@COUNT_SPLITTING_UNIT_DETAILS,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_DETAILS'),
        (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
        
		SET START_TIME=(SELECT CURTIME());
        DROP TABLE IF EXISTS UNIT_LOGIN_DETAILS;
        CREATE TABLE UNIT_LOGIN_DETAILS(
        ULDTL_ID    INTEGER NOT NULL AUTO_INCREMENT,
        UNIT_ID    INTEGER NOT NULL,
		ULDTL_DOORCODE VARCHAR(10) NULL,   
        ULDTL_WEBLOGIN VARCHAR(20) NULL,   
        ULDTL_WEBPWD VARCHAR(6) NULL,   
        ULD_ID INTEGER(2) NOT NULL,   
        ULDTL_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        PRIMARY KEY(ULDTL_ID),
        FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
		FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
        --INSERT QUERY FOR UNIT_LOGIN_DETAILS TABLE
        INSERT INTO UNIT_LOGIN_DETAILS(UNIT_ID,ULDTL_DOORCODE,ULDTL_WEBLOGIN,ULDTL_WEBPWD,ULD_ID,ULDTL_TIMESTAMP)
        SELECT U.UNIT_ID,TUSF.UNIT_DOORCODE,TUSF.UNIT_WEBLOGIN,TUSF.UNIT_WEBPWD,ULD.ULD_ID,TUSF.TIMESTAMP FROM UNIT U INNER JOIN
		TEMP_UNIT_SCDB_FORMAT TUSF ON U.UNIT_NO= TUSF.UNIT_NO JOIN USER_LOGIN_DETAILS ULD WHERE (TUSF.UNIT_DOORCODE IS NOT NULL OR TUSF.UNIT_WEBLOGIN IS NOT NULL
		OR TUSF.UNIT_WEBPWD) AND ULD.ULD_LOGINID=TUSF.USERSTAMP GROUP BY TUSF.UNIT_DOORCODE;
        SET END_TIME=(SELECT CURTIME());
        SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
        CREATE OR REPLACE VIEW VW_UNIT_LOGIN_DETAILS AS SELECT COUNT(*) FROM UNIT_SCDB_FORMAT WHERE UNIT_DOORCODE IS NOT NULL OR UNIT_WEBLOGIN IS NOT NULL OR UNIT_WEBPWD IS NOT NULL GROUP BY UNIT_DOORCODE;
        SET @COUNT_SCDB_UNIT_LOGIN_DETAILS=(SELECT COUNT(*) FROM VW_UNIT_LOGIN_DETAILS);
        SET @COUNT_SPLITTING_UNIT_LOGIN_DETAILS=(SELECT COUNT(*) FROM UNIT_LOGIN_DETAILS);
        SET @REJECTION_COUNT=(@COUNT_SCDB_UNIT_LOGIN_DETAILS-@COUNT_SPLITTING_UNIT_LOGIN_DETAILS);
        UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UNIT_LOGIN_DETAILS WHERE PREASP_DATA='UNIT_LOGIN_DETAILS';
        INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
        VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_LOGIN_DETAILS'),@COUNT_SPLITTING_UNIT_LOGIN_DETAILS,(SELECT PREASP_ID FROM     PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_LOGIN_DETAILS'),
        (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
       
        SET START_TIME=(SELECT CURTIME());
        DROP TABLE IF EXISTS UNIT_ACCOUNT_DETAILS;
        CREATE TABLE UNIT_ACCOUNT_DETAILS(
        UACD_ID    INTEGER NOT NULL AUTO_INCREMENT,
        UNIT_ID    INTEGER NOT NULL,
        UACD_ACC_NO    VARCHAR(15) NULL,   
        UACD_ACC_NAME VARCHAR(25) NULL,   
        UACD_BANK_CODE VARCHAR(5) NULL,   
        UACD_BRANCH_CODE VARCHAR(5) NULL,   
        UACD_BANK_ADDRESS VARCHAR(250) NULL,
        PRIMARY KEY(UACD_ID),
        FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID));
        --INSERT QUERY FOR UNIT_ACCOUNT_DETAILS TABLE
        INSERT INTO UNIT_ACCOUNT_DETAILS (UNIT_ID,UACD_ACC_NO,UACD_ACC_NAME,UACD_BANK_CODE,UACD_BRANCH_CODE,UACD_BANK_ADDRESS)
        SELECT DISTINCT(U.UNIT_ID),TUSF.UNIT_ACC_NO,TUSF.UNIT_ACC_NAME,TUSF.UNIT_BANKCODE,TUSF.UNIT_BRANCHCODE,TUSF.UNIT_BANKADDR
        FROM UNIT U INNER JOIN  TEMP_UNIT_SCDB_FORMAT TUSF ON U.UNIT_NO= TUSF.UNIT_NO WHERE TUSF.UNIT_ACC_NO IS NOT NULL OR TUSF.UNIT_ACC_NAME IS NOT NULL OR TUSF.UNIT_BANKCODE
        IS NOT NULL OR TUSF.UNIT_BRANCHCODE IS NOT NULL OR TUSF.UNIT_BANKADDR IS NOT NULL GROUP BY TUSF.UNIT_ACC_NO;
        SET END_TIME=(SELECT CURTIME());
        SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
        CREATE OR REPLACE VIEW VW_UNIT_ACCOUNT_DETAILS AS SELECT COUNT(*) FROM UNIT_SCDB_FORMAT WHERE UNIT_ACC_NO IS NOT NULL OR UNIT_ACC_NAME IS NOT NULL OR UNIT_BANKCODE IS NOT NULL OR UNIT_BRANCHCODE IS NOT NULL OR UNIT_BANKADDR IS NOT NULL GROUP BY UNIT_ACC_NO;
        SET @COUNT_SCDB_UNIT_ACCOUNT_DETAILS=(SELECT COUNT(*) FROM VW_UNIT_ACCOUNT_DETAILS);
        SET @COUNT_SPLITTING_UNIT_ACCOUNT_DETAILS=(SELECT COUNT(*) FROM UNIT_ACCOUNT_DETAILS);
        SET @REJECTION_COUNT=(@COUNT_SCDB_UNIT_ACCOUNT_DETAILS-@COUNT_SPLITTING_UNIT_ACCOUNT_DETAILS);
        UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UNIT_ACCOUNT_DETAILS WHERE PREASP_DATA='UNIT_ACCOUNT_DETAILS';
        INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
        VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_ACCOUNT_DETAILS'),@COUNT_SPLITTING_UNIT_ACCOUNT_DETAILS,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_ACCOUNT_DETAILS'),
        (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
        DROP VIEW IF EXISTS VW_UNIT_ACCOUNT_DETAILS;
        DROP VIEW IF EXISTS VW_UNIT_LOGIN_DETAILS;
        --QUERY FOR DROP SP_TEMP_UNIT_SCDB_FORMAT
        SET FOREIGN_KEY_CHECKS=1;
END;

DROP PROCEDURE IF EXISTS SP_UNIT_ACCESS_STAMP_DETAILS_TABLE;
CREATE PROCEDURE SP_UNIT_ACCESS_STAMP_DETAILS_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS UNIT_ACCESS_STAMP_DETAILS;
	CREATE TABLE UNIT_ACCESS_STAMP_DETAILS(
	UASD_ID    INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID    INTEGER NOT NULL,
	USDT_ID    INTEGER NULL,
	UASD_STAMPDUTYDATE DATE NULL,   
	UASD_STAMPDUTYAMT DECIMAL(6,2) NULL,   
	UASD_ACCESS_CARD INTEGER(7)    UNIQUE NULL,   
	UASD_ACCESS_ACTIVE CHAR(1) NULL,   
	UASD_ACCESS_INVENTORY CHAR(1) NULL,   
	UASD_ACCESS_LOST CHAR(1) NULL,   
	URTD_ID    INTEGER NULL,
	UASD_COMMENTS TEXT NULL,   
	ULD_ID INTEGER(2) NOT NULL,   
	UASD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(UASD_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--ALL UNIT_ACCESS_STAMP_DETAILS INSERT
DROP PROCEDURE IF EXISTS SP_UNIT_ACCESS_STAMP_DETAILS_INSERT;
CREATE PROCEDURE SP_UNIT_ACCESS_STAMP_DETAILS_INSERT(IN UNIT_USERSTAMP VARCHAR(100))
BEGIN
--VARIABLE DECLARATION
    DECLARE DONE INT DEFAULT FALSE;
    DECLARE UNITID INTEGER;
    DECLARE USDTID INTEGER;
    DECLARE DUTYDATE DATE;
    DECLARE AMOUNT DECIMAL(7,2);
    DECLARE CARDNO INTEGER(7);
    DECLARE ACCESSACTIVE VARCHAR(10);
    DECLARE ACCESSINVENTORY VARCHAR(10);
    DECLARE ACCESSLOST VARCHAR(10);
    DECLARE URTDID INTEGER;
    DECLARE COMMENTS TEXT;
    DECLARE USERSTAMP VARCHAR(50);
    DECLARE START_TIME TIME;
    DECLARE END_TIME TIME;
    DECLARE DURATION TIME;
	DECLARE UNIT_TIMESTAMP TIMESTAMP;
    DECLARE FILTER_CURSOR CURSOR FOR
    SELECT U.UNIT_ID, USDT.USDT_ID, TUSF.UNIT_STAMPDUTYDATE, TUSF.UNIT_STAMPDUTYAMT, TUSF.UNIT_ACCESS_CARD,
    TUSF.UNIT_ACCESS_ACTIVE, TUSF.UNIT_ACCESS_INVENTORY,TUSF.UNIT_ACCESS_LOST, URTD.URTD_ID, TUSF.UNIT_COMMENTS,
    TUSF.USERSTAMP,TIMESTAMP FROM TEMP_UNIT_SCDB_FORMAT AS TUSF LEFT JOIN UNIT AS U ON U.UNIT_NO=TUSF.UNIT_NO LEFT JOIN UNIT_ROOM_TYPE_DETAILS AS
    URTD ON URTD.URTD_ROOM_TYPE=TUSF.UNIT_ROOM_TYPE LEFT JOIN UNIT_STAMP_DUTY_TYPE AS USDT ON USDT.USDT_DATA=TUSF.UNIT_STAMPDUTYTYPE WHERE
    TUSF.UNIT_ACCESS_CARD IS NOT NULL OR TUSF.UNIT_STAMPDUTYDATE IS NOT NULL OR TUSF.UNIT_STAMPDUTYTYPE IS NOT NULL OR
    TUSF.UNIT_STAMPDUTYAMT IS NOT NULL OR TUSF.UNIT_ROOM_TYPE IS NOT NULL OR TUSF.UNIT_COMMENTS IS NOT NULL;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
    OPEN FILTER_CURSOR;
        SET START_TIME=(SELECT CURTIME());
        read_loop: LOOP
            FETCH FILTER_CURSOR INTO UNITID,USDTID,DUTYDATE,AMOUNT,CARDNO,ACCESSACTIVE,ACCESSINVENTORY,ACCESSLOST,
            URTDID,COMMENTS,USERSTAMP,UNIT_TIMESTAMP;
            IF DONE THEN
                LEAVE read_loop;
            END IF;
            IF EXISTS (SELECT URTD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UNIT_ID = UNITID AND URTD_ID = URTDID)THEN
                SET URTDID = NULL;
            END IF;
            IF EXISTS (SELECT USDT_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UNIT_ID = UNITID AND USDT_ID = USDTID)THEN
                SET USDTID = NULL;
            END IF;
--INSERT QUERY FOR UNIT_ACCESS_STAMP_DETAILS TABLE
            SET FOREIGN_KEY_CHECKS=0;
            INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,USDT_ID,UASD_STAMPDUTYDATE,UASD_STAMPDUTYAMT,
            UASD_ACCESS_CARD,UASD_ACCESS_ACTIVE,UASD_ACCESS_INVENTORY,UASD_ACCESS_LOST,URTD_ID,UASD_COMMENTS,ULD_ID,UASD_TIMESTAMP)
            VALUES (UNITID,USDTID,DUTYDATE,AMOUNT,CARDNO,ACCESSACTIVE,ACCESSINVENTORY,ACCESSLOST,
            URTDID,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP),UNIT_TIMESTAMP);
        END LOOP;
    CLOSE FILTER_CURSOR;
    SET END_TIME=(SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--CHECK COUNT FOR UNIT_ACCESS_STAMP_DETAILS
    SET @COUNT_SCDB_UASD=(SELECT COUNT(*) FROM TEMP_UNIT_SCDB_FORMAT
    WHERE UNIT_STAMPDUTYTYPE IS NOT NULL OR UNIT_STAMPDUTYAMT IS NOT NULL OR UNIT_STAMPDUTYDATE IS NOT NULL OR UNIT_ROOM_TYPE IS NOT NULL OR UNIT_COMMENTS IS NOT NULL OR UNIT_ACCESS_CARD IS NOT NULL);
    SET @COUNT_SPLITTING_UASD=(SELECT COUNT(*) FROM UNIT_ACCESS_STAMP_DETAILS);
    SET @UNIT_USERSTAMP='expatsintegrated@gmail.com';
    SET @REJECTION_COUNT=(@COUNT_SCDB_UASD-@COUNT_SPLITTING_UASD);
    UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_UASD WHERE PREASP_DATA='UNIT_ACCESS_STAMP_DETAILS';
    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
    VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='UNIT_ACCESS_STAMP_DETAILS'), @COUNT_SPLITTING_UASD,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='UNIT_ACCESS_STAMP_DETAILS'),
    (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='UNIT'),DURATION,@REJECTION_COUNT,UNIT_USERSTAMP);
    SET FOREIGN_KEY_CHECKS=1;
END;


DROP PROCEDURE IF EXISTS SP_MIG_ALL_UNIT_INSERT;
CREATE PROCEDURE SP_MIG_ALL_UNIT_INSERT(IN UNIT_USERSTAMP VARCHAR(100))
BEGIN
CALL SP_TEMP_UNIT_SCDB_FORMAT();
CALL SP_UNIT_INSERT(UNIT_USERSTAMP);
CALL SP_UNIT_ACCESS_STAMP_DETAILS_TABLE();
CALL SP_UNIT_ACCESS_STAMP_DETAILS_INSERT(UNIT_USERSTAMP);
DROP TABLE IF EXISTS TEMP_UNIT_SCDB_FORMAT;
END;


CALL SP_MIG_ALL_UNIT_INSERT('rajalakshmi.r@ssomens.com');