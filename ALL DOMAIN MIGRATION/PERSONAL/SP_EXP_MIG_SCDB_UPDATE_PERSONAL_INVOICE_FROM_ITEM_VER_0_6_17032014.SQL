-- version:0.6 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.5--sdate:22/02/2014 --edate:22/02/2014 --issue:750 -desc:changes source timestamp and userstamp as uld_id done by:dhivya
--version:0.4--sdate:22/02/2014 --edate:22/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
--VER 0.3 STARTDATE:01/02/2014 ENDATE:03/02/2014 ISSUE NO:718 DESC:CHANGED SP BY USING CURSOR CONCEPT DONE BY:DHIVYA


DROP PROCEDURE IF EXISTS SP_MIG_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALCOMMENTS TEXT;
DECLARE ITEMLOCATION INTEGER;
DECLARE FROMLOCATION INTEGER;
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM TEXT;
DECLARE INVITEM TEXT;
DECLARE INVFROM TEXT;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_PERSONAL_INVOICE_ITEMS,PE_PERSONAL_INVOICE_FROM FROM PERSONAL_SCDB_FORMAT WHERE PE_TYPE_OF_EXPENSE='PERSONAL' AND PE_PERSONAL_COMMENTS IS NOT NULL AND (PE_PERSONAL_INVOICE_ITEMS IS NULL OR PE_PERSONAL_INVOICE_FROM IS NULL);
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM;
CREATE TABLE TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL ,PE_PERSONAL_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
OPEN FILTER_CURSOR;

read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALCOMMENTS,INVOICEITEM,INVOICEFROM;
IF DONE THEN
      LEAVE read_loop;
END IF;

SET ITEMLOCATION=(SELECT LOCATE('\n\n\n',PERSONALCOMMENTS));
SET FROMLOCATION=(SELECT LOCATE('\n\n',PERSONALCOMMENTS,ITEMLOCATION+3));

SET INVITEM=(SELECT SUBSTRING(PERSONALCOMMENTS,ITEMLOCATION+3,FROMLOCATION-(ITEMLOCATION+3)));
SET INVFROM=(SELECT SUBSTRING(PERSONALCOMMENTS,FROMLOCATION+2));

IF(ITEMLOCATION!=0) AND (FROMLOCATION!=0) THEN
		INSERT INTO TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVITEM,INVFROM);
		END IF;
END LOOP;
CLOSE FILTER_CURSOR;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2497)THEN
DELETE FROM TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2497;
END IF;
COMMIT;
END;


DROP PROCEDURE IF EXISTS SP_MIG_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALCOMMENTS TEXT;
DECLARE ITEMLOCATION INTEGER;
DECLARE FROMLOCATION INTEGER;
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM TEXT;
DECLARE INVITEM TEXT;
DECLARE INVFROM TEXT;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_PERSONAL_INVOICE_ITEMS,PE_PERSONAL_INVOICE_FROM FROM VW_MIG_TEMP_EXP_PERSONAL_REMAINING_COMMENTS;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM;
CREATE TABLE TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL ,PE_PERSONAL_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
OPEN FILTER_CURSOR;

read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALCOMMENTS,INVOICEITEM,INVOICEFROM;
IF DONE THEN
      LEAVE read_loop;
END IF;
SET ITEMLOCATION=(SELECT LOCATE('\n\n',PERSONALCOMMENTS));
SET FROMLOCATION=(SELECT LOCATE('\n\n',PERSONALCOMMENTS,ITEMLOCATION+1));
SET INVITEM=(SELECT SUBSTRING(PERSONALCOMMENTS,ITEMLOCATION+2,FROMLOCATION-(ITEMLOCATION+2)));
SET INVFROM=(SELECT SUBSTRING(PERSONALCOMMENTS,FROMLOCATION+2));
IF(ITEMLOCATION!=0) AND (FROMLOCATION!=0) THEN
		INSERT INTO TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVITEM,INVFROM);
END IF;
END LOOP;
CLOSE FILTER_CURSOR;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3639)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3639;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3635)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3635;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3584)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3584;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=1824)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=1824;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3706)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3706;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3753)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3753;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3706)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3706;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3739)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3739;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3753)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3753;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3786)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3786;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3789)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3789;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3790)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3790;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2565)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2565;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2795)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2795;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3145)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3145;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3497)THEN
DELETE FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3497;
END IF;

COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_MIG_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALCOMMENTS TEXT;
DECLARE ITEMLOCATION INTEGER;
DECLARE FROMLOCATION INTEGER;
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM TEXT;
DECLARE INVITEM TEXT;
DECLARE INVFROM TEXT;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_PERSONAL_INVOICE_ITEMS,PE_PERSONAL_INVOICE_FROM FROM VW_MIG_TEMP_EXP_PERSONAL_DOUBLE_SLASHN_REMAINING_COMMENTS;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM;
CREATE TABLE TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL ,PE_PERSONAL_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALCOMMENTS,INVOICEITEM,INVOICEFROM;
IF DONE THEN
      LEAVE read_loop;
END IF;
SET ITEMLOCATION=(SELECT LOCATE('\n',PERSONALCOMMENTS));
SET FROMLOCATION=(SELECT LOCATE('\n\n',PERSONALCOMMENTS,ITEMLOCATION+1));
SET INVITEM=(SELECT SUBSTRING(PERSONALCOMMENTS,ITEMLOCATION+1,FROMLOCATION-(ITEMLOCATION+1)));
SET INVFROM=(SELECT SUBSTRING(PERSONALCOMMENTS,FROMLOCATION+1));
IF(ITEMLOCATION!=0) AND (FROMLOCATION!=0) THEN
		INSERT INTO TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVITEM,INVFROM);
END IF;
END LOOP;
CLOSE FILTER_CURSOR;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=1641)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=1641;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=1824)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=1824;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2330)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2330;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2483)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2483;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2565)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2565;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2795)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=2795;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3145)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3145;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3497)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3497;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3584)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3584;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3635)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3635;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3639)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3639;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3706)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3706;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3739)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3739;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3753)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3753;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3786)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3786;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3789)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3789;
END IF;
IF EXISTS(SELECT PE_ID FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3790)THEN
DELETE FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM WHERE PE_ID=3790;
END IF;
COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_MIG_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALCOMMENTS TEXT;
DECLARE ITEMLOCATION INTEGER;
DECLARE BYLOCATION INTEGER;
DECLARE FROMLOCATION INTEGER;
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM TEXT;
DECLARE INVBY TEXT;
DECLARE INVFROM TEXT;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_PERSONAL_INVOICE_ITEMS,PE_PERSONAL_INVOICE_FROM FROM VW_MIG_TEMP_EXP_PERSONAL_SINGLE_SLASHN_REMAINING_COMMENTS;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM;
CREATE TABLE TEMP_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL ,PE_PERSONAL_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALCOMMENTS,INVOICEITEM,INVOICEFROM;
IF DONE THEN
      LEAVE read_loop;
END IF;
SET BYLOCATION=(SELECT LOCATE('By:',PERSONALCOMMENTS));
SET FROMLOCATION=(SELECT LOCATE('From:',PERSONALCOMMENTS));
SET ITEMLOCATION=(SELECT LOCATE('\n\n',PERSONALCOMMENTS));
SET INVBY=(SELECT SUBSTRING(PERSONALCOMMENTS,BYLOCATION));
SET INVFROM=(SELECT SUBSTRING(PERSONALCOMMENTS,FROMLOCATION));
IF (ITEMLOCATION!=0)AND(BYLOCATION!=0) OR (FROMLOCATION!=0) THEN
	IF (BYLOCATION!=0)THEN
		INSERT INTO TEMP_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVBY);
	END IF;
IF (FROMLOCATION!=0)THEN
		INSERT INTO TEMP_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVFROM);
	END IF;
END IF;	
END LOOP;
CLOSE FILTER_CURSOR;
COMMIT;
END;


DROP PROCEDURE IF EXISTS SP_MIG_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM_SPLIT_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALCOMMENTS TEXT;
DECLARE ITEMLOCATION INTEGER;
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM TEXT;
DECLARE INVITEM TEXT;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_PERSONAL_INVOICE_ITEMS,PE_PERSONAL_INVOICE_FROM FROM VW_MIG_TEMP_EXP_PERSONAL_SLASHN_REMAINING_COMMENTS;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM;
CREATE TABLE TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL ,PE_PERSONAL_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALCOMMENTS,INVOICEITEM,INVOICEFROM;
IF DONE THEN
      LEAVE read_loop;
END IF;
SET ITEMLOCATION=(SELECT LOCATE('\n\n',PERSONALCOMMENTS));
SET INVITEM=(SELECT SUBSTRING(PERSONALCOMMENTS,ITEMLOCATION+2));
IF (ITEMLOCATION!=0)THEN
		INSERT INTO TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVITEM,(SELECT PE_PERSONAL_INVOICE_FROM FROM PERSONAL_SCDB_FORMAT WHERE PE_ID=PEID));
	END IF;
	
	END LOOP;
CLOSE FILTER_CURSOR;
COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_MIG_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM_SPLIT_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALCOMMENTS TEXT;
DECLARE ITEMLOCATION INTEGER;
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM TEXT;
DECLARE INVITEM TEXT;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_PERSONAL_INVOICE_ITEMS,PE_PERSONAL_INVOICE_FROM FROM VW_MIG_TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM_COMMENTS;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM;
CREATE TABLE TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL ,PE_PERSONAL_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALCOMMENTS,INVOICEITEM,INVOICEFROM;
IF DONE THEN
      LEAVE read_loop;
END IF;
SET ITEMLOCATION=(SELECT LOCATE('\n',PERSONALCOMMENTS));
SET INVITEM=(SELECT SUBSTRING(PERSONALCOMMENTS,ITEMLOCATION+1));
IF (ITEMLOCATION!=0)THEN
		INSERT INTO TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM(PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,PERSONALCOMMENTS,INVITEM,(SELECT PE_PERSONAL_INVOICE_FROM FROM PERSONAL_SCDB_FORMAT WHERE PE_ID=PEID));
	END IF;
END LOOP;
CLOSE FILTER_CURSOR;
COMMIT;
END;


--SP FOR OVERALL INVOICE ITEM AND INVOICE FROM SPLITTING
DROP PROCEDURE IF EXISTS SP_PERSONAL_INVOICE_ITEM_FROM_SPLITTING;
CREATE PROCEDURE SP_PERSONAL_INVOICE_ITEM_FROM_SPLITTING()
BEGIN
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS EXPENSE_PERSONAL;
CREATE TABLE EXPENSE_PERSONAL(
EP_ID INTEGER NOT NULL AUTO_INCREMENT,
ECN_ID INTEGER NOT NULL,
EP_INVOICE_DATE DATE NOT NULL,
EP_AMOUNT DECIMAL(7,2)NOT NULL,
EP_INVOICE_ITEMS TEXT NOT NULL,
EP_INVOICE_FROM VARCHAR(200)NOT NULL,
EP_COMMENTS TEXT,
ULD_ID INTEGER(2) NOT NULL,
EP_TIMESTAMP TIMESTAMP NOT NULL,
PRIMARY KEY(EP_ID),
FOREIGN KEY(ECN_ID)REFERENCES EXPENSE_CONFIGURATION(ECN_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));
SET FOREIGN_KEY_CHECKS=1;

DROP TABLE IF EXISTS TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE;
CREATE TABLE TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(
ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
PE_ID INTEGER,
PE_COMMENTS TEXT,
PE_INVOICE_ITEMS TEXT,
PE_INVOICE_FROM TEXT);

--INSERT QUERY FOR PERSONAL EXPENSE
INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM;

INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM;

INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM;

INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM;

INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM;

INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_PERSONAL_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM;


CREATE OR REPLACE VIEW VW_PERSONAL_REMAINING_COMMENTS AS  SELECT t1.PE_ID
FROM PERSONAL_SCDB_FORMAT t1
LEFT JOIN TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE t2 ON t2.PE_ID = t1.PE_ID
WHERE t2.PE_ID IS NULL AND t1.PE_TYPE_OF_EXPENSE='PERSONAL';

INSERT INTO TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PSCDB.PE_ID,PSCDB.PE_PERSONAL_COMMENTS,PSCDB.PE_PERSONAL_INVOICE_ITEMS,PSCDB.PE_PERSONAL_INVOICE_FROM FROM
PERSONAL_SCDB_FORMAT PSCDB,VW_PERSONAL_REMAINING_COMMENTS T WHERE T.PE_ID=PSCDB.PE_ID AND PSCDB.PE_TYPE_OF_EXPENSE='PERSONAL';

UPDATE TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE SET PE_INVOICE_ITEMS='NO ITEM' WHERE PE_INVOICE_ITEMS IS NULL OR PE_INVOICE_ITEMS=' ';
UPDATE TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE SET PE_INVOICE_FROM='NO FROM' WHERE PE_INVOICE_FROM IS NULL OR PE_INVOICE_FROM=' ';

DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_TRIBLE_SLASHN_INVOICE_FROM_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_FROM_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_FROM_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_SLASHN_INVOICE_FROM_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_DOUBLE_SLASHN_INVOICE_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_PERSONAL_SINGLE_SLASHN_INVOICE_ITEM;
DROP VIEW IF EXISTS VW_PERSONAL_REMAINING_COMMENTS;
END;


--INSERT QUERY FOR PERSONAL
DROP PROCEDURE IF EXISTS SP_MIG_EXPENSE_PERSONAL_INSERT;
CREATE PROCEDURE SP_MIG_EXPENSE_PERSONAL_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PERSONALEXPENSE TEXT;
DECLARE INVOICEDATE DATE;
DECLARE PERSONALAMOUNT DECIMAL(7,2);
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM VARCHAR(200);
DECLARE COMMENTS TEXT;
DECLARE PERSONAL_USERSTAMP VARCHAR(50);
DECLARE PERSONAL_TIMESTAMP TIMESTAMP;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT TPSF.PE_ID,TPSF.PE_PERSONAL_EXPENSE,TPSF.PE_PERSONAL_INVOICE_DATE,TPSF.PE_PERSONAL_AMOUNT, TPSF.USERSTAMP,TPSF.TIMESTAMP
FROM TEMP_PERSONAL_SCDB_FORMAT TPSF WHERE TPSF.PE_TYPE_OF_EXPENSE='PERSONAL';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PERSONALEXPENSE,INVOICEDATE,PERSONALAMOUNT,PERSONAL_USERSTAMP,PERSONAL_TIMESTAMP;
IF DONE THEN
      LEAVE read_loop;
END IF;
INSERT INTO EXPENSE_PERSONAL(ECN_ID,EP_INVOICE_DATE,EP_AMOUNT,EP_INVOICE_ITEMS,EP_INVOICE_FROM,EP_COMMENTS,ULD_ID,EP_TIMESTAMP)
VALUES((SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=PERSONALEXPENSE AND CGN_ID=24),INVOICEDATE,PERSONALAMOUNT,
(SELECT DISTINCT PE_INVOICE_ITEMS FROM TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE WHERE PE_ID=PEID),(SELECT DISTINCT PE_INVOICE_FROM FROM TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE WHERE PE_ID=PEID),
(SELECT DISTINCT PE_COMMENTS FROM TEMP_PERSONAL_INVOICE_ITEM_FROM_SPLITTED_TABLE WHERE PE_ID=PEID),(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=PERSONAL_USERSTAMP),PERSONAL_TIMESTAMP);
END LOOP;
CLOSE FILTER_CURSOR;
COMMIT;
END;

