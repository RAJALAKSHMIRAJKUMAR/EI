-- version:0.7 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.6--sdate:22/02/2014 --edate:22/02/2014 --issue:750 -desc:changes source timestamp and userstamp as uld_id done by:dhivya
--version:0.5--sdate:22/02/2014 --edate:22/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
--version:0.4 --sdate:04/02/2014 --edate:04/02/2014 --desc:removed main table updation sp  --doneby:RL 
--version:0.3 --sdate:01/02/2014 --edate:01/02/2014 --desc:looping changed as cursor --doneby:RL --issue:718


DROP PROCEDURE IF EXISTS SP_EXP_MIG_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_EXP_MIG_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE PEID INTEGER;
	DECLARE CARCOMMENTS TEXT;
	DECLARE ITEMLOCATION INTEGER;
	DECLARE FROMLOCATION INTEGER;
	DECLARE INVOICEITEM TEXT;
	DECLARE INVOICEFROM TEXT;
	DECLARE INVITEM TEXT;
	DECLARE INVFROM TEXT;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT PE_ID,PE_CAR_EXP_COMMENTS,PE_CAR_EXP_INVOICE_ITEMS,PE_CAR_EXP_INVOICE_FROM FROM PERSONAL_SCDB_FORMAT WHERE PE_TYPE_OF_EXPENSE='CAR EXPENSE' AND PE_CAR_EXP_INVOICE_ITEMS IS NULL AND PE_CAR_EXP_INVOICE_FROM IS NULL;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DROP TABLE IF EXISTS TEMP_EXP_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM;
	CREATE TABLE TEMP_EXP_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL,PE_CAR_EXP_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
	OPEN FILTER_CURSOR;
		read_loop: LOOP
			FETCH FILTER_CURSOR INTO PEID,CARCOMMENTS,INVOICEITEM,INVOICEFROM;
			IF DONE THEN
				LEAVE read_loop;
			END IF;
			SET ITEMLOCATION=(SELECT LOCATE('\n\n',CARCOMMENTS));
			SET FROMLOCATION=(SELECT LOCATE('\n\n',CARCOMMENTS,ITEMLOCATION+1));
			SET INVITEM=(SELECT SUBSTRING(CARCOMMENTS,ITEMLOCATION+2,FROMLOCATION-(ITEMLOCATION+2)));
			SET INVFROM=(SELECT SUBSTRING(CARCOMMENTS,FROMLOCATION+2));
			IF (ITEMLOCATION!=0) AND (FROMLOCATION!=0)THEN
				INSERT INTO TEMP_EXP_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_CAR_EXP_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,CARCOMMENTS,INVITEM,INVFROM);
			END IF;
		END LOOP;
	CLOSE FILTER_CURSOR;
END;


DROP PROCEDURE IF EXISTS SP_MIG_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE PEID INTEGER;
	DECLARE CARCOMMENTS TEXT;
	DECLARE ITEMLOCATION INTEGER;
	DECLARE FROMLOCATION INTEGER;
	DECLARE INVOICEITEM TEXT;
	DECLARE INVOICEFROM TEXT;
	DECLARE INVITEM TEXT;
	DECLARE INVFROM TEXT;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT PE_ID,PE_CAR_EXP_COMMENTS,PE_CAR_EXP_INVOICE_ITEMS,PE_CAR_EXP_INVOICE_FROM FROM VW_MIG_TEMP_EXP_CAR_REMAINING_COMMENTS ;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DROP TABLE IF EXISTS TEMP_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM;
	CREATE TABLE TEMP_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL,PE_CAR_EXP_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
	OPEN FILTER_CURSOR;
		read_loop: LOOP
			FETCH FILTER_CURSOR INTO PEID,CARCOMMENTS,INVOICEITEM,INVOICEFROM;
			IF DONE THEN
				LEAVE read_loop;
			END IF;
			SET ITEMLOCATION=(SELECT LOCATE('\n',CARCOMMENTS));
			SET FROMLOCATION=(SELECT LOCATE('\n\n',CARCOMMENTS,ITEMLOCATION+1));
			SET INVITEM=(SELECT SUBSTRING(CARCOMMENTS,ITEMLOCATION+2,FROMLOCATION-(ITEMLOCATION+2)));
			SET INVFROM=(SELECT SUBSTRING(CARCOMMENTS,FROMLOCATION+2));
			IF (ITEMLOCATION!=0) AND (FROMLOCATION!=0)THEN
				INSERT INTO TEMP_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_CAR_EXP_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM)VALUES(PEID,CARCOMMENTS,INVITEM,INVFROM);
			END IF;
		END LOOP;
	CLOSE FILTER_CURSOR;
END;


DROP PROCEDURE IF EXISTS SP_MIG_EXP_CAR_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT;
CREATE PROCEDURE SP_MIG_EXP_CAR_SLASHN_INVOICE_FROM_ITEM_SPLIT_INSERT()
BEGIN
	DECLARE  DONE INT DEFAULT FALSE;
	DECLARE PEID INTEGER;
	DECLARE CARCOMMENTS TEXT;
	DECLARE ITEMLOCATION INTEGER;
	DECLARE FROMLOCATION INTEGER;
	DECLARE INVOICEITEM TEXT;
	DECLARE INVOICEFROM TEXT;
	DECLARE INVITEM TEXT;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT PE_ID,PE_CAR_EXP_COMMENTS,PE_CAR_EXP_INVOICE_ITEMS,PE_CAR_EXP_INVOICE_FROM FROM VW_MIG_TEMP_EXP_CAR_SLASHN_REMAINING_COMMENTS ;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DROP TABLE IF EXISTS TEMP_EXP_CAR_SLASHN_INVOICE_FROM_ITEM;
	CREATE TABLE TEMP_EXP_CAR_SLASHN_INVOICE_FROM_ITEM(ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,PE_ID INT NOT NULL,PE_CAR_EXP_COMMENTS TEXT,PE_INVOICE_ITEM TEXT,PE_INVOICE_FROM TEXT);
	OPEN FILTER_CURSOR;
		read_loop: LOOP
			FETCH FILTER_CURSOR INTO PEID,CARCOMMENTS,INVOICEITEM,INVOICEFROM;
			IF DONE THEN
				LEAVE read_loop;
			END IF;
			SET ITEMLOCATION=(SELECT LOCATE('\n\n',CARCOMMENTS));
			SET INVITEM=(SELECT SUBSTRING(CARCOMMENTS,ITEMLOCATION+2) );
			IF (ITEMLOCATION!=0) THEN
				INSERT INTO TEMP_EXP_CAR_SLASHN_INVOICE_FROM_ITEM(PE_ID,PE_CAR_EXP_COMMENTS,PE_INVOICE_ITEM)VALUES(PEID,CARCOMMENTS,INVITEM);
			END IF;
		END LOOP;
	CLOSE FILTER_CURSOR;
END;




DROP PROCEDURE IF EXISTS SP_CAR_INVOICE_ITEM_FROM_SPLITTING;
CREATE PROCEDURE SP_CAR_INVOICE_ITEM_FROM_SPLITTING()
BEGIN

--CREATE QUERY FOR EXPENSE_CAR
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS EXPENSE_CAR;
CREATE TABLE EXPENSE_CAR(
EC_ID INTEGER NOT NULL AUTO_INCREMENT,
ECN_ID INTEGER NOT NULL,
EC_INVOICE_DATE DATE NOT NULL,
EC_AMOUNT DECIMAL(7,2) NOT NULL,
EC_INVOICE_ITEMS TEXT NOT NULL,
EC_INVOICE_FROM VARCHAR(200) NOT NULL,
EC_COMMENTS TEXT,
ULD_ID INTEGER(2) NOT NULL,
EC_TIMESTAMP TIMESTAMP NOT NULL,
PRIMARY KEY(EC_ID),
FOREIGN KEY(ECN_ID)REFERENCES EXPENSE_CONFIGURATION(ECN_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));
SET FOREIGN_KEY_CHECKS=1;

DROP TABLE IF EXISTS TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE;
CREATE TABLE TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE(
ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
PE_ID INTEGER,
PE_COMMENTS TEXT,
PE_INVOICE_ITEMS TEXT,
PE_INVOICE_FROM TEXT);

--INSERT QUERY FOR CAR EXPENSE

INSERT INTO TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_CAR_EXP_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM;

INSERT INTO TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_CAR_EXP_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM;

INSERT INTO TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PE_ID,PE_CAR_EXP_COMMENTS,PE_INVOICE_ITEM,PE_INVOICE_FROM FROM TEMP_EXP_CAR_SLASHN_INVOICE_FROM_ITEM;


CREATE OR REPLACE VIEW VW_CAR_REMAINING_COMMENTS AS  SELECT t1.PE_ID
FROM PERSONAL_SCDB_FORMAT t1
LEFT JOIN TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE t2 ON t2.PE_ID = t1.PE_ID
WHERE t2.PE_ID IS NULL AND PE_TYPE_OF_EXPENSE='CAR EXPENSE';


INSERT INTO TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE(PE_ID,PE_COMMENTS,PE_INVOICE_ITEMS,PE_INVOICE_FROM)
SELECT PSCDB.PE_ID,PSCDB.PE_CAR_EXP_COMMENTS,PSCDB.PE_CAR_EXP_INVOICE_ITEMS,PSCDB.PE_CAR_EXP_INVOICE_FROM FROM
PERSONAL_SCDB_FORMAT PSCDB,VW_CAR_REMAINING_COMMENTS T WHERE T.PE_ID=PSCDB.PE_ID AND PSCDB.PE_TYPE_OF_EXPENSE='CAR EXPENSE';

UPDATE TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE SET PE_INVOICE_ITEMS='NO ITEM' WHERE PE_INVOICE_ITEMS IS NULL OR PE_INVOICE_ITEMS=' ';
UPDATE TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE SET PE_INVOICE_FROM='NO FROM' WHERE PE_INVOICE_FROM IS NULL OR PE_INVOICE_FROM=' ';

DROP TABLE IF EXISTS TEMP_EXP_CAR_DOUBLE_SLASHN_INVOICE_FROM_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_CAR_SINGLE_SLASHN_INVOICE_FROM_ITEM;
DROP TABLE IF EXISTS TEMP_EXP_CAR_SLASHN_INVOICE_FROM_ITEM;
DROP VIEW IF EXISTS VW_CAR_REMAINING_COMMENTS;
END;

--QUERY FOR INSERT VALUES EXPENSE_CAR TABLE   
DROP PROCEDURE IF EXISTS SP_EXPENSE_CAR_INSERT;
CREATE PROCEDURE SP_EXPENSE_CAR_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE CAREXPENSE TEXT;
DECLARE INVOICEDATE DATE;
DECLARE CARAMOUNT DECIMAL(7,2);
DECLARE INVOICEITEM TEXT;
DECLARE INVOICEFROM VARCHAR(200);
DECLARE COMMENTS TEXT;
DECLARE CAR_USERSTAMP VARCHAR(50);
DECLARE CAR_TIMESTAMP TIMESTAMP;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT TPSF.PE_ID,TPSF.PE_CAR_EXP_TYPE,TPSF.PE_CAR_EXP_INVOICE_DATE,TPSF.PE_CAR_EXP_AMOUNT, TPSF.USERSTAMP,TPSF.TIMESTAMP
FROM TEMP_PERSONAL_SCDB_FORMAT TPSF WHERE TPSF.PE_TYPE_OF_EXPENSE='CAR EXPENSE';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,CAREXPENSE,INVOICEDATE,CARAMOUNT,CAR_USERSTAMP,CAR_TIMESTAMP;
IF DONE THEN
LEAVE read_loop;
END IF;
INSERT INTO EXPENSE_CAR(ECN_ID,EC_INVOICE_DATE,EC_AMOUNT,EC_INVOICE_ITEMS,EC_INVOICE_FROM,EC_COMMENTS,ULD_ID,EC_TIMESTAMP)
VALUES((SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=CAREXPENSE AND CGN_ID=21),INVOICEDATE,CARAMOUNT,
(SELECT DISTINCT PE_INVOICE_ITEMS FROM TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE WHERE PE_ID=PEID),(SELECT DISTINCT PE_INVOICE_FROM FROM TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE WHERE PE_ID=PEID),
(SELECT DISTINCT PE_COMMENTS FROM TEMP_CAR_INVOICE_ITEM_FROM_SPLITTED_TABLE WHERE PE_ID=PEID),(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=CAR_USERSTAMP),CAR_TIMESTAMP);
END LOOP;
CLOSE FILTER_CURSOR;
END;

--CREATE QUERY FOR EXPENSE CARLOAN
DROP PROCEDURE IF EXISTS SP_EXPENSE_CARLOAN_TABLE;
CREATE PROCEDURE SP_EXPENSE_CARLOAN_TABLE()
BEGIN
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS EXPENSE_CAR_LOAN;
CREATE TABLE EXPENSE_CAR_LOAN(
ECL_ID INTEGER NOT NULL AUTO_INCREMENT,
ECL_PAID_DATE DATE NOT NULL,
ECL_FROM_PERIOD DATE NOT NULL,
ECL_TO_PERIOD DATE NOT NULL,
ECL_AMOUNT DECIMAL(7,2)NOT NULL,
ECL_COMMENTS TEXT,
ULD_ID INTEGER(2)NOT NULL,
ECL_TIMESTAMP TIMESTAMP NOT NULL,
PRIMARY KEY(ECL_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));
SET FOREIGN_KEY_CHECKS=1;
END;

--QUERY FOR INSERT VALUES EXPENSE_CAR_LOAN TABLE   
DROP PROCEDURE IF EXISTS SP_EXPENSE_CARLOAN_INSERT;
CREATE PROCEDURE SP_EXPENSE_CARLOAN_INSERT()
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE PEID INTEGER;
DECLARE PAIDDATE DATE;
DECLARE FROMPERIOD DATE;
DECLARE TOPERIOD DATE;
DECLARE CARLOANAMOUNT DECIMAL(7,2);
DECLARE COMMENTS TEXT;
DECLARE CARLOAN_USERSTAMP VARCHAR(50);
DECLARE CARLOAN_TIMESTAMP TIMESTAMP;
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT TPSF.PE_ID,TPSF.PE_CARLOAN_PAID_DATE,TPSF.PE_CARLOAN_FROM_PERIOD,TPSF.PE_CARLOAN_TO_PERIOD, 
TPSF.PE_CARLOAN_AMOUNT,TPSF.PE_CARLOAN_COMMENTS,TPSF.USERSTAMP,TPSF.TIMESTAMP FROM TEMP_PERSONAL_SCDB_FORMAT TPSF WHERE 
TPSF.PE_TYPE_OF_EXPENSE='CAR LOAN';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO PEID,PAIDDATE,FROMPERIOD,TOPERIOD,CARLOANAMOUNT,COMMENTS,CARLOAN_USERSTAMP,CARLOAN_TIMESTAMP;
IF DONE THEN
LEAVE read_loop;
END IF;
INSERT INTO EXPENSE_CAR_LOAN (ECL_PAID_DATE,ECL_FROM_PERIOD,ECL_TO_PERIOD,ECL_AMOUNT,ECL_COMMENTS,ULD_ID,ECL_TIMESTAMP)
VALUES(PAIDDATE,FROMPERIOD,TOPERIOD,CARLOANAMOUNT,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=CARLOAN_USERSTAMP),CARLOAN_TIMESTAMP);
END LOOP;
CLOSE FILTER_CURSOR;
END;

