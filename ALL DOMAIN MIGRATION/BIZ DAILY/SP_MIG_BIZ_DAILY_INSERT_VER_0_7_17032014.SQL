-- version:0.7 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.6 --sdate:04/03/2014 --edate:04/03/2014 --Desc:ISSUE CORRECTED INUNIT EXPENSE- DONE BY SAFI
--version:0.5 --sdate:28/02/2014 --edate:28/02/2014 --issue:750 --desc:changed userstamp as ULD_ID and timestamp get from scdb done by:RL
--version:0.4--sdate:21/02/2014 --edate:22/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
--version:0.3 --sdate:18/02/2014 --edate:18/02/2014 --issue:276 --commentno:26 --desc:ADD USERSTAMP N TIMESTAMP IN EXPENSE_HOUSEKEEPING_UNIT --doneby:RL
--version:0.2 --sdate:21/01/2014 --edate:21/01/2014 --issue:594 --commentno:50 & 54 --doneby:RL

--ALL BIZ DAILY DOMAIN SPLITED TABLE INSERT QUEREIS
DROP PROCEDURE IF EXISTS SP_BIZ_DAILY_INSERT;
CREATE PROCEDURE SP_BIZ_DAILY_INSERT(IN BIZ_DAILY_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
--QUERY FOR CREATE EXPENSE_STARHUB
	SET START_TIME=(SELECT CURTIME());
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_STARHUB;
	CREATE TABLE EXPENSE_STARHUB(
	ESH_ID INTEGER NOT NULL	AUTO_INCREMENT,
	EDSH_ID	INTEGER NOT NULL,
	ESH_INVOICE_DATE DATE NOT NULL,	
	ESH_FROM_PERIOD	DATE NOT NULL,	
	ESH_TO_PERIOD DATE NOT NULL,
	ESH_AMOUNT DECIMAL(7,2) NOT NULL,	
	ESH_COMMENTS TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	ESH_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ESH_ID),
	FOREIGN KEY(EDSH_ID) REFERENCES EXPENSE_DETAIL_STAR_HUB (EDSH_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
--INSERT QUERY FOREXPENSE_STARHUB TABLE
	INSERT INTO EXPENSE_STARHUB(EDSH_ID, ESH_INVOICE_DATE, ESH_FROM_PERIOD, ESH_TO_PERIOD, ESH_AMOUNT, ESH_COMMENTS, ULD_ID,ESH_TIMESTAMP) 
	SELECT EDSH.EDSH_ID, BSF.EXP_SHB_INVOICE_DATE, BSF.EXP_SHB_FROM_PERIOD, BSF.EXP_SHB_TO_PERIOD, BSF.EXP_SHB_AMOUNT, 
	BSF.EXP_SHB_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP FROM EXPENSE_DETAIL_STARHUB EDSH INNER JOIN BIZ_DAILY_SCDB_FORMAT BSF 
	JOIN UNIT U, USER_LOGIN_DETAILS ULD WHERE U.UNIT_ID=EDSH.UNIT_ID and BSF.EXP_UNIT_NO=U.UNIT_NO AND BSF.EXP_TYPE_OF_EXPENSE='STAR HUB'
	AND ULD.ULD_LOGINID=BSF.USERSTAMP;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_ES=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='STAR HUB') ;
	SET @COUNT_SPLITTED_ES=(SELECT COUNT(*) FROM EXPENSE_STARHUB);
	SET @REJECTION_COUNT=(@COUNT_SCDB_ES-@COUNT_SPLITTED_ES);
--QUERY FOR UPDATE	PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_ES WHERE PREASP_DATA='EXPENSE_STARHUB';
--QUERY FOR INSERT 	POST_AUDIT_HISTORY TABLE		
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_STARHUB'),@COUNT_SPLITTED_ES,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_STARHUB'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);

--QUERY FOR CREATE 	EXPENSE_DIGITAL_VOICE TABLE		
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_DIGITAL_VOICE;
	CREATE TABLE EXPENSE_DIGITAL_VOICE(
	EDV_ID INTEGER NOT NULL	AUTO_INCREMENT,
	EDDV_ID	INTEGER NOT NULL,
	EDV_INVOICE_DATE DATE NOT NULL,	
	EDV_FROM_PERIOD DATE NOT NULL,	
	EDV_TO_PERIOD DATE NOT NULL,
	EDV_AMOUNT DECIMAL(7,2) NOT NULL,	
	EDV_COMMENTS TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	EDV_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EDV_ID),
	FOREIGN KEY(EDDV_ID) REFERENCES EXPENSE_DETAIL_DIGITAL_VOICE (EDDV_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));		
--INSERT QUERY FOR EXPENSE_DIGITAL_VOICE TABLE
	INSERT INTO EXPENSE_DIGITAL_VOICE(EDDV_ID, EDV_INVOICE_DATE, EDV_FROM_PERIOD, EDV_TO_PERIOD, EDV_AMOUNT, EDV_COMMENTS,ULD_ID,EDV_TIMESTAMP) 
	SELECT EDDV.EDDV_ID, BSF.EXP_DIGITAL_INVOICE_DATE, BSF.EXP_DIGITAL_FROM_PERIOD, BSF.EXP_DIGITAL_TO_PERIOD, 
	BSF.EXP_DIGITAL_AMOUNT, BSF.EXP_DIGITAL_COMMENTS,ULD.ULD_ID, BSF.TIMESTAMP FROM EXPENSE_DETAIL_DIGITAL_VOICE EDDV INNER JOIN BIZ_DAILY_SCDB_FORMAT BSF 
	JOIN UNIT U,USER_LOGIN_DETAILS ULD WHERE U.UNIT_ID=EDDV.UNIT_ID AND BSF.EXP_UNIT_NO=U.UNIT_NO AND BSF.EXP_TYPE_OF_EXPENSE='DIGITAL VOICE'
	AND ULD.ULD_LOGINID=BSF.USERSTAMP;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EDV=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='DIGITAL VOICE') ;
	SET @COUNT_SPLITTED_EDV=(SELECT COUNT(*) FROM EXPENSE_DIGITAL_VOICE);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EDV-@COUNT_SPLITTED_EDV);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EDV WHERE PREASP_DATA='EXPENSE_DIGITAL_VOICE';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE			
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DIGITAL_VOICE'),@COUNT_SPLITTED_EDV,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DIGITAL_VOICE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);

--CREATE QUERY FOR EXPENSE_FACILITY_USE TABLE			
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_FACILITY_USE;
	CREATE TABLE EXPENSE_FACILITY_USE(
	EFU_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	EFU_INVOICE_DATE DATE NOT NULL,	
	EFU_DEPOSIT	DECIMAL(7,2) NULL,	
	EFU_AMOUNT	DECIMAL(7,2) NULL,	
	EFU_COMMENTS TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	EFU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EFU_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));		
--INSERT QUERY FOR EXPENSE_FACILITY_USE TABLE
	INSERT INTO EXPENSE_FACILITY_USE(UNIT_ID, EFU_INVOICE_DATE, EFU_DEPOSIT, EFU_AMOUNT, EFU_COMMENTS, ULD_ID,EFU_TIMESTAMP) 
	SELECT U.UNIT_ID, BSF.EXP_FACILITY_INVOICE_DATE, BSF.EXP_FACILITY_DEPOSIT, BSF.EXP_FACILITY_AMOUNT, BSF.EXP_FACILITY_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP 
	FROM UNIT U INNER JOIN BIZ_DAILY_SCDB_FORMAT BSF,USER_LOGIN_DETAILS ULD WHERE BSF.EXP_TYPE_OF_EXPENSE='FACILITY USE' AND U.UNIT_NO=BSF.EXP_UNIT_NO
	AND ULD.ULD_LOGINID=BSF.USERSTAMP;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EFU=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='FACILITY USE') ;
	SET @COUNT_SPLITTED_EFU=(SELECT COUNT(*) FROM EXPENSE_FACILITY_USE);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EFU-@COUNT_SPLITTED_EFU);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EFU WHERE PREASP_DATA='EXPENSE_FACILITY_USE';
--INSERT  QUERY FOR POST_AUDIT_HISTORY TABLE			
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_FACILITY_USE'),@COUNT_SPLITTED_EFU,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_FACILITY_USE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);

--CREATE  QUERY FOR EXPENSE_CARPARK TABLE	
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_CARPARK;
	CREATE TABLE EXPENSE_CARPARK(
	ECP_PARK_ID	INT NOT NULL AUTO_INCREMENT,
	EDCP_ID	INTEGER NOT NULL,
	ECP_INVOICE_DATE DATE NOT NULL,	
	ECP_FROM_PERIOD DATE NOT NULL,	
	ECP_TO_PERIOD DATE NOT NULL,	
	ECP_AMOUNT DECIMAL(7,2) NOT NULL,	
	ECP_COMMENTS TEXT,			
	ULD_ID INTEGER(2) NOT NULL,	
	ECP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ECP_PARK_ID),
	FOREIGN KEY(EDCP_ID) REFERENCES EXPENSE_DETAIL_CAR_PARK (EDCP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));	
--INSERT QUERY FOR EXPENSE_CARPARK TABLE
	INSERT INTO EXPENSE_CARPARK(EDCP_ID, ECP_INVOICE_DATE, ECP_FROM_PERIOD, ECP_TO_PERIOD, ECP_AMOUNT, ECP_COMMENTS, ULD_ID,ECP_TIMESTAMP) 
	SELECT EDCP.EDCP_ID, BSF.EXP_CAR_INVOICE_DATE, BSF.EXP_CAR_START_PERIOD, BSF.EXP_CAR_END_PERIOD, BSF.EXP_CAR_AMOUNT, BSF.EXP_CAR_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP FROM 
	EXPENSE_DETAIL_CARPARK EDCP INNER JOIN BIZ_DAILY_SCDB_FORMAT BSF JOIN UNIT U,USER_LOGIN_DETAILS ULD WHERE U.UNIT_ID=EDCP.UNIT_ID AND BSF.EXP_UNIT_NO=U.UNIT_NO AND 
	BSF.EXP_TYPE_OF_EXPENSE='CAR PARK' AND EDCP.EDCP_CAR_NO=BSF.EXP_CAR_NO AND ULD.ULD_LOGINID=BSF.USERSTAMP;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_ECP=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='CAR PARK') ;
	SET @COUNT_SPLITTED_ECP=(SELECT COUNT(*) FROM EXPENSE_CARPARK);
	SET @REJECTION_COUNT=(@COUNT_SCDB_ECP-@COUNT_SPLITTED_ECP);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_ECP WHERE PREASP_DATA='EXPENSE_CARPARK';
--INSERT  QUERY FOR POST_AUDIT_HISTORY TABLE		
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_CARPARK'),@COUNT_SPLITTED_ECP,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_CARPARK'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);

--INSERT  QUERY FOR EXPENSE_MOVING_IN_AND_OUT TABLE	
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_MOVING_IN_AND_OUT;
	CREATE TABLE EXPENSE_MOVING_IN_AND_OUT(
	EMIO_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	EMIO_INVOICE_DATE DATE NOT NULL,	
	EMIO_AMOUNT	DECIMAL(7,2) NOT NULL,	
	EMIO_COMMENTS TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,
	EMIO_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EMIO_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));	
--INSERT QUERY FOR EXPENSE_MOVING_IN_AND_OUT TABLE
	INSERT INTO EXPENSE_MOVING_IN_AND_OUT(UNIT_ID, EMIO_INVOICE_DATE, EMIO_AMOUNT, EMIO_COMMENTS, ULD_ID,EMIO_TIMESTAMP) 
	SELECT U.UNIT_ID, BSF.EXP_MOVI_IN_OUT_INVOICE_DATE, BSF.EXP_MOVI_IN_OUT_AMOUNT, BSF.EXP_MOVI_IN_OUT_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP FROM UNIT U 
	INNER JOIN BIZ_DAILY_SCDB_FORMAT BSF,USER_LOGIN_DETAILS ULD WHERE BSF.EXP_TYPE_OF_EXPENSE='MOVING IN OUT' AND U.UNIT_NO=BSF.EXP_UNIT_NO
	AND ULD.ULD_LOGINID=BSF.USERSTAMP;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EMIO=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='MOVING IN OUT') ;
	SET @COUNT_SPLITTED_EMIO=(SELECT COUNT(*) FROM EXPENSE_MOVING_IN_AND_OUT);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EMIO-@COUNT_SPLITTED_EMIO);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EMIO WHERE PREASP_DATA='EXPENSE_MOVING_IN_AND_OUT';
--INSERT  QUERY FOR POST_AUDIT_HISTORY TABLE		
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_MOVING_IN_AND_OUT'),@COUNT_SPLITTED_EMIO,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_MOVING_IN_AND_OUT'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	
--CREATE QUERY FOR EXPENSE_PURCHASE_NEW_CARD TABLE	
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_PURCHASE_NEW_CARD;
	CREATE TABLE EXPENSE_PURCHASE_NEW_CARD(
	EPNC_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	EPNC_NUMBER	INTEGER(7) UNIQUE NOT NULL,	
	EPNC_INVOICE_DATE DATE NOT NULL,	
	EPNC_AMOUNT	DECIMAL(7,2) NOT NULL,	
	EPNC_COMMENTS TEXT NULL	,
	ULD_ID INTEGER(2) NOT NULL,	
	EPNC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EPNC_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));	
--INSERT QUERY FOR EXPENSE_PURCHASE_NEW_CARD TABLE
	INSERT INTO EXPENSE_PURCHASE_NEW_CARD(UNIT_ID, EPNC_NUMBER, EPNC_INVOICE_DATE, EPNC_AMOUNT, EPNC_COMMENTS, ULD_ID,EPNC_TIMESTAMP) 
	SELECT U.UNIT_ID, BSF.EXP_CARD_NUMBER, BSF.EXP_CARD_PURCHASE_DATE, BSF.EXP_CARD_AMOUNT, BSF.EXP_CARD_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP FROM UNIT U INNER JOIN 
	BIZ_DAILY_SCDB_FORMAT BSF,USER_LOGIN_DETAILS ULD WHERE BSF.EXP_TYPE_OF_EXPENSE='PURCHASE NEW ACCESS CARD' AND U.UNIT_NO=BSF.EXP_UNIT_NO
	AND ULD.ULD_LOGINID=BSF.USERSTAMP;	
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EPNC=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='PURCHASE NEW ACCESS CARD') ;
	SET @COUNT_SPLITTED_EPNC=(SELECT COUNT(*) FROM EXPENSE_PURCHASE_NEW_CARD);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EPNC-@COUNT_SPLITTED_EPNC);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE	
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EPNC WHERE PREASP_DATA='EXPENSE_PURCHASE_NEW_CARD';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE			
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_PURCHASE_NEW_CARD'),@COUNT_SPLITTED_EPNC,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_PURCHASE_NEW_CARD'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	
--CREATE QUERY FOR EXPENSE_PETTY_CASH TABLE	
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_PETTY_CASH;
	CREATE TABLE EXPENSE_PETTY_CASH(
	EPC_ID INTEGER NOT NULL	AUTO_INCREMENT,
	EPC_DATE DATE NOT NULL,	
	EPC_CASH_IN	DECIMAL(7,2) NULL,	
	EPC_CASH_OUT DECIMAL(7,2) NULL,	
	EPC_BALANCE	DECIMAL(7,2) NOT NULL,	
	EPC_INVOICE_ITEMS TEXT NOT NULL,	
	EPC_COMMENTS TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	EPC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EPC_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));	
--INSERT QUERY FOR EXPENSE_PETTY_CASH TABLE
	INSERT INTO EXPENSE_PETTY_CASH(EPC_DATE, EPC_CASH_IN, EPC_CASH_OUT, EPC_BALANCE, EPC_INVOICE_ITEMS, EPC_COMMENTS, ULD_ID,EPC_TIMESTAMP) 
	SELECT BSF.EXP_PETTY_DATE, BSF.EXP_PETTY_CASH_IN, BSF.EXP_PETTY_CASH_OUT, BSF.EXP_PETTY_CURRENT_BAL, BSF.EXP_PETTY_INVOICE_ITEMS, BSF.EXP_PETTY_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP FROM BIZ_DAILY_SCDB_FORMAT BSF,
	USER_LOGIN_DETAILS ULD WHERE BSF.EXP_TYPE_OF_EXPENSE='PETTY CASH' AND ULD.ULD_LOGINID=BSF.USERSTAMP; 
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EPC=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='PETTY CASH') ;
	SET @COUNT_SPLITTED_EPC=(SELECT COUNT(*) FROM EXPENSE_PETTY_CASH);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EPC-@COUNT_SPLITTED_EPC);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EPC WHERE PREASP_DATA='EXPENSE_PETTY_CASH';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_PETTY_CASH'),@COUNT_SPLITTED_EPC,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_PETTY_CASH'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	
--CRAETE QUERY FOR EXPENSE_HOUSEKEEPING TABLE
	SET START_TIME=(SELECT CURTIME());
	DROP TABLE IF EXISTS EXPENSE_HOUSEKEEPING;
	CREATE TABLE EXPENSE_HOUSEKEEPING(
	EHK_ID INTEGER NOT NULL	AUTO_INCREMENT,
	EMP_ID INTEGER NOT NULL,
	EHK_WORK_DATE DATE NOT NULL,
	EHK_DURATION DECIMAL(4,2) NOT NULL,	
	EHK_DESCRIPTION TEXT NOT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	EHK_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EHK_ID),
	FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE_DETAILS (EMP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
--INSERT QUERY FOR EXPENSE_HOUSEKEEPING TABLE
	INSERT INTO EXPENSE_HOUSEKEEPING(EMP_ID, EHK_WORK_DATE, EHK_DURATION, EHK_DESCRIPTION, ULD_ID,EHK_TIMESTAMP) 
	SELECT ED.EMP_ID, BSF.EXP_HK_WORK_DATE, BSF.EXP_HK_DURATION, BSF.EXP_HK_DESCRIPTION, ULD.ULD_ID,BSF.TIMESTAMP FROM EMPLOYEE_DETAILS ED INNER JOIN BIZ_DAILY_SCDB_FORMAT BSF ,
	USER_LOGIN_DETAILS ULD WHERE BSF.EXP_TYPE_OF_EXPENSE='HOUSE KEEPING' AND BSF.EXP_HK_CLEANER_NAME=ED.EMP_FIRST_NAME AND
	ULD.ULD_LOGINID=BSF.USERSTAMP;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EHK=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='HOUSE KEEPING') ;
	SET @COUNT_SPLITTED_EHK=(SELECT COUNT(*) FROM EXPENSE_HOUSEKEEPING);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EHK-@COUNT_SPLITTED_EHK);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EHK WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING';
--INSERT  QUERY FOR POST_AUDIT_HISTORY TABLE			
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_HOUSEKEEPING'),@COUNT_SPLITTED_EHK,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	SET FOREIGN_KEY_CHECKS=1;
END;

--CREATE  QUERY FOR EXPENSE_HOUSEKEEPING_PAYMENT TABLE			
DROP PROCEDURE IF EXISTS SP_EXPENSE_HOUSEKEEPING_PAYMENT_TABLE;
CREATE PROCEDURE SP_EXPENSE_HOUSEKEEPING_PAYMENT_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_HOUSEKEEPING_PAYMENT;
	CREATE TABLE EXPENSE_HOUSEKEEPING_PAYMENT(
	EHKP_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NULL,	
	EHKU_ID	INTEGER NULL,	
	EHKP_FOR_PERIOD	DATE NOT NULL,	
	EHKP_PAID_DATE DATE NOT NULL,	
	EHKP_AMOUNT	DECIMAL(7,2) NOT NULL,	
	EHKP_COMMENTS TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EHKP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EHKP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
--CREATE  QUERY FOR EXPENSE_HOUSEKEEPING_UNIT TABLE
	DROP TABLE IF EXISTS EXPENSE_HOUSEKEEPING_UNIT;
	CREATE TABLE EXPENSE_HOUSEKEEPING_UNIT(
	EHKU_ID	INTEGER NOT NULL AUTO_INCREMENT,
	EHKU_UNIT_NO SMALLINT(4) UNSIGNED ZEROFILL UNIQUE NOT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EHKU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EHKU_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;
--INSERT QUERY FOR EXPENSE_HOUSEKEEPING_PAYMENT AND EXPENSE_HOUSEKEEPING_UNIT TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_HOUSEKEEPING_PAYMENT_INSERT;
CREATE PROCEDURE SP_EXPENSE_HOUSEKEEPING_PAYMENT_INSERT(IN BIZ_DAILY_USERSTAMP VARCHAR(100))
BEGIN
--VARIABLE DECLARATION
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE FORPERIOD DATE;
	DECLARE PAIDDATE DATE;
	DECLARE AMOUNT DECIMAL(7,2);
	DECLARE COMMENTS TEXT;
	DECLARE USERSTAMP VARCHAR(50);
	DECLARE HPTIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT BSF.EXP_HKP_UNIT_NO, BSF.EXP_HKP_FOR_PERIOD, BSF.EXP_HKP_PAID_DATE, BSF.EXP_HKP_AMOUNT, BSF.EXP_HKP_COMMENTS, 
	BSF.USERSTAMP,BSF.TIMESTAMP FROM BIZ_DAILY_SCDB_FORMAT BSF WHERE BSF.EXP_TYPE_OF_EXPENSE='HOUSE KEEPING PAYMENT';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_EXPENSE_HOUSEKEEPING_PAYMENT_TABLE();
		OPEN FILTER_CURSOR;
			read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,FORPERIOD,PAIDDATE,AMOUNT,COMMENTS,USERSTAMP,HPTIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		IF NOT EXISTS(SELECT UNIT_NO FROM UNIT WHERE UNIT_NO=UNITNO)THEN
			IF NOT EXISTS(SELECT EHKU_UNIT_NO FROM EXPENSE_HOUSEKEEPING_UNIT WHERE EHKU_UNIT_NO=UNITNO)THEN
				INSERT INTO EXPENSE_HOUSEKEEPING_UNIT(EHKU_UNIT_NO,ULD_ID,EHKU_TIMESTAMP)VALUES(UNITNO,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP),HPTIMESTAMP);
			END IF;
		INSERT INTO EXPENSE_HOUSEKEEPING_PAYMENT(EHKU_ID,EHKP_FOR_PERIOD,EHKP_PAID_DATE,EHKP_AMOUNT,EHKP_COMMENTS,ULD_ID,EHKP_TIMESTAMP)VALUES
		((SELECT EHKU_ID FROM EXPENSE_HOUSEKEEPING_UNIT WHERE EHKU_UNIT_NO=UNITNO),FORPERIOD,PAIDDATE,AMOUNT,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP),HPTIMESTAMP);
		ELSE
		INSERT INTO EXPENSE_HOUSEKEEPING_PAYMENT(EHKU_ID,EHKP_FOR_PERIOD,EHKP_PAID_DATE,EHKP_AMOUNT,EHKP_COMMENTS,ULD_ID,EHKP_TIMESTAMP)VALUES
		((SELECT EHKU_ID FROM EXPENSE_HOUSEKEEPING_UNIT WHERE EHKU_UNIT_NO=UNITNO),FORPERIOD,PAIDDATE,AMOUNT,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP),HPTIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EHP=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='HOUSE KEEPING PAYMENT') ;
		SET @COUNT_SPLITTED_EHP=(SELECT COUNT(*) FROM EXPENSE_HOUSEKEEPING_PAYMENT);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EHP-@COUNT_SPLITTED_EHP);
--UPDATE  QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE	
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EHP WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING_PAYMENT';
--INSERT  QUERY FOR POST_AUDIT_HISTORY TABLE			
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_HOUSEKEEPING_PAYMENT'),@COUNT_SPLITTED_EHP,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING_PAYMENT'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
		SET @COUNT_SCDB_EHKU=(SELECT COUNT(DISTINCT( t1.EXP_HKP_UNIT_NO))FROM BIZ_DAILY_SCDB_FORMAT t1 LEFT JOIN UNIT t2 ON t2.UNIT_NO = t1.EXP_HKP_UNIT_NO WHERE t2.UNIT_NO IS NULL AND t1.EXP_TYPE_OF_EXPENSE='HOUSE KEEPING PAYMENT');
		SET @COUNT_SPLITTED_EHKU=(SELECT COUNT(*) FROM EXPENSE_HOUSEKEEPING_UNIT);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EHKU-@COUNT_SPLITTED_EHKU);
--UPDATE  QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE		
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EHKU WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING_UNIT';
--INSERT  QUERY FOR POST_AUDIT_HISTORY TABLE			
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_HOUSEKEEPING_UNIT'),@COUNT_SPLITTED_EHKU,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING_UNIT'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	COMMIT;
END;	

--CREATE  QUERY FOR EXPENSE_ELECTRICITY TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_ELECTRICITY_TABLE;
CREATE PROCEDURE SP_EXPENSE_ELECTRICITY_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_ELECTRICITY;
	CREATE TABLE EXPENSE_ELECTRICITY(
	EE_ID INTEGER NOT NULL	AUTO_INCREMENT,
	EDE_ID INTEGER NOT NULL,
	EE_INVOICE_DATE DATE NOT NULL,	
	EE_FROM_PERIOD DATE NOT NULL,	
	EE_TO_PERIOD DATE NOT NULL,	
	ECN_ID INTEGER NOT NULL,
	EE_AMOUNT DECIMAL(7,2) NOT NULL	,
	EE_COMMENTS	TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EE_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EE_ID),
	FOREIGN KEY(EDE_ID) REFERENCES EXPENSE_DETAIL_ELECTRICITY (EDE_ID),
	FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--INSERT QUERY FOR EXPENSE_ELECTRICITY TABLE 
DROP PROCEDURE IF EXISTS SP_EXPENSE_ELECTRICITY_INSERT;
CREATE PROCEDURE SP_EXPENSE_ELECTRICITY_INSERT(IN BIZ_DAILY_USERSTAMP VARCHAR(100))
BEGIN
--VARIABLE DECLARATION
	DECLARE UNITNO INTEGER;
	DECLARE INVOICETO TEXT;
	DECLARE INVOICEDATE DATE;
	DECLARE FROMPERIOD DATE;
	DECLARE TOPERIOD DATE;
	DECLARE DEPOSIT DECIMAL(7,2);
	DECLARE ELC_AMOUNT DECIMAL(7,2);
	DECLARE DEPOSIT_REFUND DECIMAL(7,2);
	DECLARE COMMENTS TEXT;
	DECLARE ELECTRICITY_USERSTAMP VARCHAR(50);
	DECLARE ELECTRICITY_TIMESTAMP TIMESTAMP;
	DECLARE ECN_ID_DEPOSIT INTEGER;
	DECLARE ECN_ID_AMOUNT INTEGER;
	DECLARE ECN_ID_REFUND INTEGER;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT BSF.EXP_UNIT_NO,BSF.EXP_ELC_INVOICE_TO,BSF.EXP_ELC_INVOICE_DATE, BSF.EXP_ELC_FROM_PERIOD, BSF.EXP_ELC_TO_PERIOD,BSF.EXP_ELC_DEPOSIT,BSF.EXP_ELC_AMOUNT,BSF.EXP_ELC_DEPOSIT_REFUND,BSF.EXP_ELC_COMMENTS,BSF.USERSTAMP,BSF.TIMESTAMP FROM BIZ_DAILY_SCDB_FORMAT BSF WHERE BSF.EXP_TYPE_OF_EXPENSE='ELECTRICITY' ;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_EXPENSE_ELECTRICITY_TABLE();
		OPEN FILTER_CURSOR;
		SET ECN_ID_DEPOSIT=(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA='DEPOSIT' AND CGN_ID=41);
		SET ECN_ID_AMOUNT=(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA='INVOICE AMOUNT' AND CGN_ID=41);
		SET ECN_ID_REFUND=(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA='DEPOSIT REFUND' AND CGN_ID=41);
		read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,INVOICETO,INVOICEDATE,FROMPERIOD,TOPERIOD,DEPOSIT,ELC_AMOUNT,DEPOSIT_REFUND,COMMENTS,ELECTRICITY_USERSTAMP,ELECTRICITY_TIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		IF DEPOSIT IS NOT NULL THEN
			INSERT INTO EXPENSE_ELECTRICITY(EDE_ID, EE_INVOICE_DATE, EE_FROM_PERIOD, EE_TO_PERIOD, ECN_ID, EE_AMOUNT, EE_COMMENTS, ULD_ID , EE_TIMESTAMP) 
			VALUES((SELECT MAX(EDE_ID) FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO) AND ECN_ID=(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27)),
			INVOICEDATE,FROMPERIOD,TOPERIOD,ECN_ID_DEPOSIT,DEPOSIT,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=ELECTRICITY_USERSTAMP),ELECTRICITY_TIMESTAMP);
		END IF;
		IF ELC_AMOUNT IS NOT NULL THEN
			INSERT INTO EXPENSE_ELECTRICITY(EDE_ID, EE_INVOICE_DATE, EE_FROM_PERIOD, EE_TO_PERIOD, ECN_ID, EE_AMOUNT, EE_COMMENTS, ULD_ID , EE_TIMESTAMP) 
			VALUES((SELECT MAX(EDE_ID) FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO) AND ECN_ID=(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27)),
			INVOICEDATE,FROMPERIOD,TOPERIOD,ECN_ID_AMOUNT,ELC_AMOUNT,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=ELECTRICITY_USERSTAMP),ELECTRICITY_TIMESTAMP);
		END IF;
		IF DEPOSIT_REFUND IS NOT NULL THEN
			INSERT INTO EXPENSE_ELECTRICITY(EDE_ID, EE_INVOICE_DATE, EE_FROM_PERIOD, EE_TO_PERIOD, ECN_ID, EE_AMOUNT, EE_COMMENTS, ULD_ID , EE_TIMESTAMP) 
			VALUES((SELECT MAX(EDE_ID) FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO) AND ECN_ID=(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27)),
			INVOICEDATE,FROMPERIOD,TOPERIOD,ECN_ID_REFUND,DEPOSIT_REFUND,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=ELECTRICITY_USERSTAMP),ELECTRICITY_TIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EE=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='ELECTRICITY') ;
		SET @COUNT_SPLITTED_EE=(SELECT COUNT(*) FROM EXPENSE_ELECTRICITY);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EE-@COUNT_SPLITTED_EE);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE 
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EE WHERE PREASP_DATA='EXPENSE_ELECTRICITY';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE 
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_ELECTRICITY'),@COUNT_SPLITTED_EE,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_ELECTRICITY'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	COMMIT;
END;


--SP FOR CREATE TEMP_BIZ_DAILY_SCDB_FORMAT
DROP PROCEDURE IF EXISTS SP_TEMP_BIZ_DAILY_SCDB_FORMAT_INSERT;
CREATE PROCEDURE SP_TEMP_BIZ_DAILY_SCDB_FORMAT_INSERT()
BEGIN
DROP TABLE IF EXISTS TEMP_BIZ_DAILY_SCDB_FORMAT;
CREATE TABLE TEMP_BIZ_DAILY_SCDB_FORMAT LIKE BIZ_DAILY_SCDB_FORMAT;
--INSERT QUERY FOR TEMP_BIZ_DAILY_SCDB_FORMAT TABLE
	INSERT INTO TEMP_BIZ_DAILY_SCDB_FORMAT SELECT * FROM BIZ_DAILY_SCDB_FORMAT;
--UPDATE QUERY FOR TEMP_BIZ_DAILY_SCDB_FORMAT TABLE
	UPDATE TEMP_BIZ_DAILY_SCDB_FORMAT SET EXP_AIRCON_SERVICED_BY='LORAC AIRCON AND ENGINEERING PTE LTD' WHERE  EXP_AIRCON_SERVICED_BY='LORAC AIRCON';
	UPDATE TEMP_BIZ_DAILY_SCDB_FORMAT SET EXP_AIRCON_SERVICED_BY='BCS Aircon Engineering Pte Ltd' WHERE  EXP_AIRCON_SERVICED_BY='BCS AIRCON ENGINEERING';
END;

--CREATE QUERY FOR EXPENSE_UNIT TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_UNIT_TABLE;
CREATE PROCEDURE SP_EXPENSE_UNIT_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_UNIT;
	CREATE TABLE EXPENSE_UNIT(
	EU_ID INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	ECN_ID INTEGER NOT NULL,
	CUSTOMER_ID	INTEGER NULL,
	EU_INVOICE_DATE	DATE NOT NULL,	
	EU_AMOUNT	DECIMAL(7,2) NOT NULL,	
	EU_INVOICE_ITEMS TEXT NOT NULL,	
	EU_INVOICE_FROM	VARCHAR(200) NOT NULL,	
	EU_COMMENTS	TEXT NULL,	
	ULD_ID INTEGER(2) NOT NULL,	
	EU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EU_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--INSERT QUERY FOR EXPENSE_UNIT TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_UNIT_INSERT;
CREATE PROCEDURE SP_EXPENSE_UNIT_INSERT(IN BIZ_DAILY_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE  DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE ECNDATA TEXT;
	DECLARE FIRSTNAME TEXT;
	DECLARE LASTNAME TEXT;
	DECLARE INVOICEDATE DATE;
	DECLARE UNITAMOUNT DECIMAL(7,2);
	DECLARE INVOICEITEMS TEXT;
	DECLARE INVOICEFROM VARCHAR(200);
	DECLARE COMMENTS TEXT;
	DECLARE EXPENSE_USERSTAMP VARCHAR(50);
	DECLARE UNITTIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXP_UNIT_NO,EXP_UNIT_GCC,EXP_UNIT_FIRST_NAME,EXP_UNIT_LAST_NAME,EXP_UNIT_INVOICE_DATE, EXP_UNIT_AMOUNT, EXP_UNIT_INVOICE_ITEMS, EXP_UNIT_INVOICE_FROM, EXP_UNIT_COMMENTS, USERSTAMP,TIMESTAMP
	FROM TEMP_BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='UNIT EXPENSE';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
	ROLLBACK;
	END;
	START TRANSACTION;
	OPEN FILTER_CURSOR;
		SET START_TIME=(SELECT CURTIME());
		CALL SP_EXPENSE_UNIT_TABLE();
		read_loop: LOOP
			FETCH FILTER_CURSOR INTO UNITNO,ECNDATA,FIRSTNAME,LASTNAME,INVOICEDATE,UNITAMOUNT,INVOICEITEMS,INVOICEFROM,COMMENTS,EXPENSE_USERSTAMP,UNITTIMESTAMP;
			IF DONE THEN
				LEAVE read_loop;
			END IF;
			IF LASTNAME IS NULL OR  LASTNAME=' ' THEN
				SET LASTNAME=FIRSTNAME;
			END IF;
			IF INVOICEITEMS IS NULL OR INVOICEITEMS=' ' THEN
				SET INVOICEITEMS='NO ITEM';
			END IF;
			IF EXPENSE_USERSTAMP IS NULL OR EXPENSE_USERSTAMP=' ' THEN
				SET EXPENSE_USERSTAMP='expatsintegrated@gmail.com';
			END IF;
			IF INVOICEFROM IS NULL OR INVOICEFROM=' ' THEN
				SET INVOICEFROM='NO FROM';
			END IF;
			IF FIRSTNAME IS NOT NULL AND LASTNAME IS NOT NULL THEN
				INSERT INTO EXPENSE_UNIT(UNIT_ID, ECN_ID, CUSTOMER_ID, EU_INVOICE_DATE, EU_AMOUNT, EU_INVOICE_ITEMS, EU_INVOICE_FROM, EU_COMMENTS, ULD_ID,EU_TIMESTAMP)VALUES
				((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=ECNDATA AND CGN_ID=20),(SELECT DISTINCT CC_CUST_ID FROM TEMP_CUSTOMER_SCDB_FORMAT WHERE CC_FIRST_NAME=FIRSTNAME AND CC_LAST_NAME=LASTNAME AND CC_UNIT_NO=UNITNO),
				INVOICEDATE,UNITAMOUNT,INVOICEITEMS,INVOICEFROM,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=EXPENSE_USERSTAMP),UNITTIMESTAMP);
			ELSE
				INSERT INTO EXPENSE_UNIT(UNIT_ID, ECN_ID, EU_INVOICE_DATE, EU_AMOUNT, EU_INVOICE_ITEMS, EU_INVOICE_FROM, EU_COMMENTS, ULD_ID,EU_TIMESTAMP)VALUES
				((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=ECNDATA AND CGN_ID=20),
				INVOICEDATE,UNITAMOUNT,INVOICEITEMS,INVOICEFROM,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=EXPENSE_USERSTAMP),UNITTIMESTAMP);
			END IF;
		END LOOP;
	CLOSE FILTER_CURSOR;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EU=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='UNIT EXPENSE') ;
	SET @COUNT_SPLITTED_EU=(SELECT COUNT(*) FROM EXPENSE_UNIT);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EU-@COUNT_SPLITTED_EU);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EU WHERE PREASP_DATA='EXPENSE_UNIT';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE		
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_UNIT'),@COUNT_SPLITTED_EU,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_UNIT'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
	COMMIT;
END;

--CREATE QUERY FOR EXPENSE_AIRCON_SERVICE TABLE	
DROP PROCEDURE IF EXISTS SP_AIRCON_SERVICE_TABLE;
CREATE PROCEDURE SP_AIRCON_SERVICE_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_AIRCON_SERVICE;
	CREATE TABLE EXPENSE_AIRCON_SERVICE(
	EAS_ID	INTEGER NOT NULL AUTO_INCREMENT,
	EDAS_ID	INTEGER NOT NULL,
	EAS_DATE DATE NOT NULL,	
	EAS_COMMENTS TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EAS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EAS_ID),
	FOREIGN KEY(EDAS_ID) REFERENCES EXPENSE_DETAIL_AIRCON_SERVICE (EDAS_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--INSERT QUERY FOR EXPENSE_AIRCON_SERVICE
DROP PROCEDURE IF EXISTS SP_EXPENSE_AIRCON_SERVICE;
CREATE PROCEDURE SP_EXPENSE_AIRCON_SERVICE(IN BIZ_DAILY_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE UNITNO INTEGER;
	DECLARE AIRCONSERVICEBY CHAR(50);
	DECLARE SERVICEDATE DATE;
	DECLARE COMMENTS TEXT;
	DECLARE UNIT_USERSTAMP VARCHAR(50);
	DECLARE AIRCONTIMESTAMP TIMESTAMP;
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXP_UNIT_NO,EXP_AIRCON_SERVICED_BY, EXP_AIRCON_SERVICED_DATE, EXP_AIRCON_COMMENTS, USERSTAMP,TIMESTAMP 
	FROM TEMP_BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='AIRCON SERVICES';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_TEMP_BIZ_DAILY_SCDB_FORMAT_INSERT();
	CALL SP_AIRCON_SERVICE_TABLE();
	OPEN FILTER_CURSOR;
		read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,AIRCONSERVICEBY,SERVICEDATE,COMMENTS,UNIT_USERSTAMP,AIRCONTIMESTAMP;
	IF DONE THEN
		LEAVE read_loop;
	END IF;
	INSERT INTO EXPENSE_AIRCON_SERVICE(EDAS_ID, EAS_DATE, EAS_COMMENTS, ULD_ID,EAS_TIMESTAMP)VALUES
	((SELECT MAX(EDAS_ID) FROM EXPENSE_DETAIL_AIRCON_SERVICE WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO) AND EASB_ID=(SELECT EASB_ID FROM EXPENSE_AIRCON_SERVICE_BY WHERE EASB_DATA=AIRCONSERVICEBY)),
	SERVICEDATE,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=UNIT_USERSTAMP),AIRCONTIMESTAMP);
	END LOOP;
	CLOSE FILTER_CURSOR;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EAS=(SELECT COUNT(*) FROM BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE='AIRCON SERVICES') ;
	SET @COUNT_SPLITTED_EAS=(SELECT COUNT(*) FROM EXPENSE_AIRCON_SERVICE);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EAS-@COUNT_SPLITTED_EAS);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EAS WHERE PREASP_DATA='EXPENSE_AIRCON_SERVICE';
--INSERT QUERY FOR POST_AUDIT_HISTORY		
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_AIRCON_SERVICE'),@COUNT_SPLITTED_EAS,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_AIRCON_SERVICE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY'),DURATION,@REJECTION_COUNT,BIZ_DAILY_USERSTAMP);
END;

DROP PROCEDURE IF EXISTS SP_MIG_BIZ_DAILY_INSERT;
CREATE PROCEDURE SP_MIG_BIZ_DAILY_INSERT(IN USERSTAMP VARCHAR(50))
BEGIN
	CALL SP_BIZ_DAILY_INSERT(USERSTAMP);
	CALL SP_EXPENSE_HOUSEKEEPING_PAYMENT_INSERT(USERSTAMP);
	CALL SP_EXPENSE_ELECTRICITY_INSERT(USERSTAMP);
	CALL SP_TEMP_BIZ_DAILY_SCDB_FORMAT_INSERT();
	CALL SP_EXPENSE_UNIT_INSERT(USERSTAMP);
	CALL SP_EXPENSE_AIRCON_SERVICE(USERSTAMP);
	DROP TABLE IF EXISTS TEMP_BIZ_DAILY_SCDB_FORMAT;
END;

CALL SP_MIG_BIZ_DAILY_INSERT('dhivya@ssomens.com');

