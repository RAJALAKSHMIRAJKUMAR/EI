-- version:0.3 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
-- version:0.2 -- sdate:04/03/2014 -- edate:04/03/2014 -- issue:522-CHANGING header datatype as int(2) -- doneby:SAFI
-- version:0.1 -- sdate:25/02/2014 -- edate:25/02/2014 -- issue:750 -- doneby:RL
-- SP FOR UPDATE VALUES IN CONFIG_SCDB_FORMAT TABLE
DROP PROCEDURE IF EXISTS UPDATE_TEMP_CONFIG_SCDB_FORMAT;
CREATE PROCEDURE UPDATE_TEMP_CONFIG_SCDB_FORMAT()
BEGIN
	DROP TABLE IF EXISTS TEMP_CONFIG_SCDB_FORMAT;
	CREATE TABLE TEMP_CONFIG_SCDB_FORMAT LIKE CONFIG_SCDB_FORMAT;
	INSERT INTO TEMP_CONFIG_SCDB_FORMAT SELECT * FROM CONFIG_SCDB_FORMAT;
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'ACCESSRIGHTS ROLES' WHERE CF_TYPE = 'ACCESSRIGHTS_ROLES';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CALENDER NAME' WHERE CF_TYPE = 'CAL_NAME';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC ADDRESS OS' WHERE CF_TYPE = 'CC_ADDR_OS';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC ADDRESS T1' WHERE CF_TYPE = 'CC_ADDR_T1';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC ADDRESS T2' WHERE CF_TYPE = 'CC_ADDR_T2';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC AIRCON FIXED' WHERE CF_TYPE = 'CC_AIR_FIXED';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC AIRCON QUARTERLY' WHERE CF_TYPE = 'CC_AIR_QUARTERLY';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC CONTRACT TEMPLATE ID' WHERE CF_TYPE = 'CC_CONTR_TEMPL_ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC INVOICE TEMPLATE ID' WHERE CF_TYPE = 'CC_INV_TEMPL_ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'NATIONALITY' WHERE CF_TYPE = 'CC_NATIONALITY';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC NOTICE PERIOD TEXT' WHERE CF_TYPE = 'CC_NOTICEPERIOD_TEXT';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC OPTION' WHERE CF_TYPE = 'CC_OPTION';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC PROCESSING FEE' WHERE CF_TYPE = 'CC_PR_FEE';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC RENT PRORATED' WHERE CF_TYPE = 'CC_PRO_RENT';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC PRORATE LINE NO' WHERE CF_TYPE = 'CC_PRORATE_LINE_NO';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CUSTOMER PRORATED STATEMENT' WHERE CF_TYPE = 'CC_PRORATED_LBL';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'DEPOSIT CALCULATION SS ID' WHERE CF_TYPE = 'DEPOSIT_CALC_SS_ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'OCBC CSV FOLDER ID' WHERE CF_TYPE = 'OCBC_CSV_FOLDER_ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'PAYMENT' WHERE CF_TYPE = 'RENTAL';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'TRIGGER NAME' WHERE CF_TYPE = 'TRIGGER_NAME';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_TYPE = 'CC PROCESSING FEE' WHERE CF_TYPE = 'CC_PR_FEE';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '0Bz8XDWwyuSghazY2NU5KNGdkTkU&&X,0Bz8XDWwyuSghZzZITW9pZkVpN00&&X,0Bz8XDWwyuSghOHg1X3pBdXJwUGM&&X' WHERE CF_TYPE = 'USER';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '0Bz8XDWwyuSghazY2NU5KNGdkTkU&&X,0Bz8XDWwyuSghZzZITW9pZkVpN00&&X,0Bz8XDWwyuSghOHg1X3pBdXJwUGM&&X,0Bz8XDWwyuSgha0NVWTU5dExMMVk,0Bz8XDWwyuSghMFVra2pTekNlV1E' WHERE CF_TYPE = 'ADMIN';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '0Bz8XDWwyuSghazY2NU5KNGdkTkU&&X,0Bz8XDWwyuSghZzZITW9pZkVpN00&&X,0Bz8XDWwyuSghOHg1X3pBdXJwUGM&&X,0Bz8XDWwyuSgha0NVWTU5dExMMVk,0Bz8XDWwyuSghMFVra2pTekNlV1E,0Bz8XDWwyuSghdmVudnVlWWFiSkU' WHERE CF_TYPE = 'SUPER ADMIN';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'BAHAMAS, THE' WHERE CF_DATA = 'BAHAMAS';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'CSV UPDATION' WHERE CF_DATA = 'OCBC CSV RECORDS';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '0Aj8XDWwyuSghdHI0U0ZjeVJxS1BhejM3c01HTHFSLUE' WHERE CF_TYPE = 'DEPOSIT CALCULATION SS ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'HOUSEKEEPING' WHERE CF_DATA = 'HOUSE KEEPING';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'HOUSEKEEPING PAYMENT' WHERE CF_DATA = 'HOUSE KEEPING PAYMENT';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'STARHUB' WHERE CF_DATA = 'STAR HUB';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'CARPARK' WHERE CF_DATA = 'CAR PARK';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '0B0KangOyYg_pME44T0p3OTgwRW8' WHERE CF_TYPE = 'OCBC CSV FOLDER ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'PAYMENT' WHERE CF_DATA = 'RENTAL AMOUNT';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'EI_SQL' WHERE CF_DATA = 'EI';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'THE SAIL@MARINA BAY, MARINA BAY TOWER 2,MARINA BOULEVARD,SINGAPORE -018987' WHERE CF_TYPE = 'CC ADDRESS T1';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = 'THE SAIL@MARINA BAY, CENTRAL PARK TOWER 6,MARINA BOULEVARD,SINGAPORE -018985' WHERE CF_TYPE = 'CC ADDRESS T2';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '1OScbLPz0naY82-jG4bvVkRuQdIL8InLKAH9Tte6TPmM' WHERE CF_TYPE = 'CC CONTRACT TEMPLATE ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '1VOtIFrvgdqATsOszmk1CcqWMEvSgHIuchfmoe7A2qUM' WHERE CF_TYPE = 'CC INVOICE TEMPLATE ID';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '19' WHERE CF_TYPE = 'CC PRORATE LINE NO';
	UPDATE TEMP_CONFIG_SCDB_FORMAT SET CF_DATA = '2012-08-09' WHERE CF_TYPE = 'INVOICE DATE';
END;

-- SP FOR SAVE VALUES IN ALL INITIALIZING INSERT QUERIES
DROP PROCEDURE IF EXISTS SP_ALL_INITIALIZING_INSERT;
CREATE PROCEDURE SP_ALL_INITIALIZING_INSERT(IN USER_STAMP VARCHAR(50))
BEGIN
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	SET FOREIGN_KEY_CHECKS=0;
-- 1.QUERY FOR CREATE POST_AUDIT_PROFILE
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS POST_AUDIT_PROFILE;
	CREATE TABLE POST_AUDIT_PROFILE(
	POSTAP_ID INTEGER NOT NULL AUTO_INCREMENT,
	POSTAP_DATA	VARCHAR(50) NOT NULL,
	PRIMARY KEY(POSTAP_ID));
-- QUERY FOR INSERT VALUES IN POST_AUDIT_PROFILE TABLE
	INSERT INTO POST_AUDIT_PROFILE(POSTAP_DATA) (SELECT POSTAP_DATA FROM CONFIG_SQL_FORMAT WHERE POSTAP_DATA IS NOT NULL);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR POST_AUDIT_PROFILE DETAILS
	SET @COUNT_POST_AUDIT_PROFILE_SQL_FORMAT = (SELECT COUNT(POSTAP_DATA) FROM CONFIG_SQL_FORMAT WHERE POSTAP_DATA IS NOT NULL);
	SET @COUNT_SPLITING_POST_AUDIT_PROFILE = (SELECT COUNT(*) FROM POST_AUDIT_PROFILE);
	SET @REJECTION_COUNT=(@COUNT_POST_AUDIT_PROFILE_SQL_FORMAT-@COUNT_SPLITING_POST_AUDIT_PROFILE);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_POST_AUDIT_PROFILE_SQL_FORMAT WHERE PREASP_DATA='POST_AUDIT_PROFILE';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='POST_AUDIT_PROFILE'),@COUNT_SPLITING_POST_AUDIT_PROFILE,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='POST_AUDIT_PROFILE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,USER_STAMP);
	
-- 2.QUERY FOR CREATE CONFIGURATION_PROFILE
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS CONFIGURATION_PROFILE;
	CREATE TABLE CONFIGURATION_PROFILE(		
	CNP_ID INTEGER NOT NULL	AUTO_INCREMENT,
	CNP_DATA VARCHAR(25) UNIQUE	NOT NULL,
	PRIMARY KEY(CNP_ID));	
-- QUERY FOR INSERT VALUES IN CONFIGURATION_PROFILE TABLE
	INSERT INTO CONFIGURATION_PROFILE(CNP_DATA) SELECT CNP_DATA FROM CONFIG_SQL_FORMAT WHERE CNP_DATA IS NOT NULL;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR CONFIGURATION_PROFILE DETAILS
	SET @COUNT_CONFIG_SQL_FORMAT = (SELECT COUNT(CNP_DATA) FROM CONFIG_SQL_FORMAT WHERE CNP_DATA IS NOT NULL);
	SET @COUNT_SPLITING_CONFIGURATION_PROFILE = (SELECT COUNT(*) FROM CONFIGURATION_PROFILE);
	SET @REJECTION_COUNT=(@COUNT_CONFIG_SQL_FORMAT-@COUNT_SPLITING_CONFIGURATION_PROFILE);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_CONFIG_SQL_FORMAT WHERE PREASP_DATA='CONFIGURATION_PROFILE';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CONFIGURATION_PROFILE'),@COUNT_SPLITING_CONFIGURATION_PROFILE,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CONFIGURATION_PROFILE'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,USER_STAMP);

-- 3.QUERY FOR CREATE CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS CONFIGURATION;
	CREATE TABLE CONFIGURATION(
	CGN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	CGN_TYPE VARCHAR(50) UNIQUE	NOT NULL,
	CGN_NON_IP_FLAG	CHAR(2) NULL,
	PRIMARY KEY(CGN_ID),
	FOREIGN KEY(CNP_ID) REFERENCES CONFIGURATION_PROFILE(CNP_ID));
-- QUERY FOR INSERT VALUES IN CONFIGURATION TABLE
	INSERT INTO CONFIGURATION(CGN_TYPE,CNP_ID,CGN_NON_IP_FLAG) (SELECT DISTINCT(CSQL.CGN_DATA),CNP_ID,CGN_NON_IP_FLAG FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.CGN_DATA = TCSCDB.CF_TYPE WHERE CSQL.CGN_DATA IS NOT NULL);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR CONFIGURATION DETAILS
	SET @COUNT_CONFIGURTION_SQL_FORMAT = (SELECT COUNT(DISTINCT(CSQL.CGN_DATA)) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.CGN_DATA = TCSCDB.CF_TYPE WHERE CSQL.CGN_DATA IS NOT NULL);
	SET @COUNT_SPLITING_CONFIGURATION = (SELECT COUNT(*) FROM CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_CONFIGURTION_SQL_FORMAT-@COUNT_SPLITING_CONFIGURATION);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_CONFIGURTION_SQL_FORMAT WHERE PREASP_DATA='CONFIGURATION';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='CONFIGURATION'),@COUNT_SPLITING_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,USER_STAMP);
	
-- 4.QUERY FOR CREATE TEMP_USER_RIGHTS_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS TEMP_USER_RIGHTS_CONFIGURATION;
	CREATE TABLE TEMP_USER_RIGHTS_CONFIGURATION(
	TURC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TURC_DATA TEXT NOT NULL,
	TURC_INITIALIZE_FLAG CHAR(1) NULL,
	TURC_USERSTAMP VARCHAR(50) NULL,
	TURC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TURC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
-- QUERY FOR INSERT VALUES IN TEMP_USER_RIGHTS_CONFIGURATION TABLE	
	INSERT INTO TEMP_USER_RIGHTS_CONFIGURATION(CGN_ID,TURC_DATA,TURC_INITIALIZE_FLAG,TURC_USERSTAMP,TURC_TIMESTAMP)
	(SELECT CGN_ID,CSQL.DATA,INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID IN (43,44,45,46,66,67,68) AND CSQL.DATA IS NOT NULL);
-- QUERY FOR UPDATE VALUES IN TEMP_USER_RIGHTS_CONFIGURATION TABLE
	UPDATE TEMP_USER_RIGHTS_CONFIGURATION SET TURC_USERSTAMP = 'expatsintegrated@gmail.com' WHERE TURC_USERSTAMP IS NULL;
-- QUERY FOR CREATE  USER_RIGHTS_CONFIGURATION TABLE
	DROP TABLE IF EXISTS USER_RIGHTS_CONFIGURATION;
	CREATE TABLE USER_RIGHTS_CONFIGURATION(
	URC_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	URC_DATA TEXT NOT NULL,
	URC_INITIALIZE_FLAG	CHAR(1) NULL,
	URC_USERSTAMP VARCHAR(50) NOT NULL,
	URC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(URC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));
-- QUERY FOR INSERT VALUES IN USER_RIGHTS_CONFIGURATION TABLE
	INSERT INTO USER_RIGHTS_CONFIGURATION(CGN_ID,URC_DATA,URC_INITIALIZE_FLAG,URC_USERSTAMP,URC_TIMESTAMP) (SELECT CGN_ID,TURC_DATA,TURC_INITIALIZE_FLAG,TURC_USERSTAMP,TURC_TIMESTAMP FROM TEMP_USER_RIGHTS_CONFIGURATION);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR USER_RIGHTS_CONFIGURATION DETAILS
	SET @COUNT_USER_RIGHTS_CONFIGURATION_SQL_FORMAT = (SELECT COUNT(CSQL.DATA) FROM CONFIG_SQL_FORMAT CSQL  LEFT JOIN TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID IN (43,44,45,46,66,67,68) AND CSQL.DATA IS NOT NULL);
	SET @COUNT_SPLITING_USER_RIGHTS_CONFIGURATION = (SELECT COUNT(*) FROM USER_RIGHTS_CONFIGURATION);
	SET @REJECTION_COUNT=(@COUNT_USER_RIGHTS_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_USER_RIGHTS_CONFIGURATION);
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_USER_RIGHTS_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='USER_RIGHTS_CONFIGURATION';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='USER_RIGHTS_CONFIGURATION'),@COUNT_SPLITING_USER_RIGHTS_CONFIGURATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='USER_RIGHTS_CONFIGURATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION'),DURATION,@REJECTION_COUNT,USER_STAMP);
	DROP TABLE IF EXISTS TEMP_USER_RIGHTS_CONFIGURATION;
	
-- 5.QUERY FOR CREATE ROLE_CREATION
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS ROLE_CREATION;			
	CREATE TABLE ROLE_CREATION(
	RC_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
	URC_ID INTEGER(2) NOT NULL,
	RC_NAME	VARCHAR(15)	UNIQUE NOT NULL,
	RC_USERSTAMP VARCHAR(50) NOT NULL,
	RC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(RC_ID),
	FOREIGN KEY(URC_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID));
--   CREATE TEMP TABLE FOR ROLE CREATION
	DROP TABLE IF EXISTS TEMP_ROLE_CREATION;
	CREATE TABLE TEMP_ROLE_CREATION(
	ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	ROLES VARCHAR(255) NULL,
	RACESS VARCHAR(255) NULL,
	RUSERSTAMP VARCHAR(255) NULL,
	RTIMESTAMP TIMESTAMP NULL);
	INSERT INTO TEMP_ROLE_CREATION(ROLES,RACESS,RUSERSTAMP,RTIMESTAMP)
	SELECT DISTINCT ROLES,RACESS,USERSTAMP,TIMESTAMP FROM USER_RIGHTS_SCDB_FORMAT WHERE ROLES IS NOT NULL GROUP BY ROLES;	SET @MIN_RID=(SELECT MIN(ID) FROM TEMP_ROLE_CREATION);
	SET @MAX_RID=(SELECT MAX(ID) FROM TEMP_ROLE_CREATION);
--   INSERT INTO ROLE_CREATION
	WHILE (@MIN_RID<=@MAX_RID) DO
		INSERT INTO ROLE_CREATION(URC_ID,RC_NAME,RC_USERSTAMP,RC_TIMESTAMP)VALUES
		((SELECT URC_ID FROM USER_RIGHTS_CONFIGURATION WHERE URC_DATA=(SELECT RACESS FROM TEMP_ROLE_CREATION WHERE ID=@MIN_RID)),
		(SELECT ROLES FROM TEMP_ROLE_CREATION WHERE ID=@MIN_RID),
		(SELECT RUSERSTAMP FROM TEMP_ROLE_CREATION WHERE ID=@MIN_RID),
		(SELECT RTIMESTAMP FROM TEMP_ROLE_CREATION WHERE ID=@MIN_RID) );
		SET @MIN_RID=@MIN_RID+1;
	END WHILE;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR ROLE_CREATION DETAILS
	SET @COUNT_ROLE_CREATION_SCDB_FORMAT = (SELECT COUNT(distinct(roles)) FROM USER_RIGHTS_SCDB_FORMAT WHERE roles IS NOT NULL);
	SET @COUNT_SPLITING_ROLE_CREATION = (SELECT COUNT(*) FROM ROLE_CREATION);
	SET @REJECTION_COUNT=(@COUNT_ROLE_CREATION_SCDB_FORMAT-@COUNT_SPLITING_ROLE_CREATION);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_ROLE_CREATION_SCDB_FORMAT WHERE PREASP_DATA='ROLE_CREATION';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ROLE_CREATION'),@COUNT_SPLITING_ROLE_CREATION,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ROLE_CREATION'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USER_STAMP);

-- 6.  QUERY FOR CREATE USER_LOGIN_DETAILS	
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS USER_LOGIN_DETAILS;
	CREATE TABLE USER_LOGIN_DETAILS(
	ULD_ID INTEGER(2) NOT NULL AUTO_INCREMENT,		
	ULD_LOGINID	VARCHAR(40)	UNIQUE NOT NULL,
	ULD_USERSTAMP VARCHAR(50) NOT NULL,
	ULD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ULD_ID));
--  INSERT QUERY FOR USER_LOGIN_DETAILS TABLE
	INSERT INTO USER_LOGIN_DETAILS(ULD_LOGINID,ULD_USERSTAMP,ULD_TIMESTAMP)(SELECT DISTINCT(UNAME),USERSTAMP,TIMESTAMP FROM USER_RIGHTS_SCDB_FORMAT WHERE UNAME IS NOT NULL);
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR USER_LOGIN_DETAILS DETAILS
	SET @COUNT_USER_LOGIN_DETAILS_SCDB_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SCDB_FORMAT WHERE UNAME IS NOT NULL);
	SET @COUNT_SPLITING_USER_LOGIN_DETAILS = (SELECT COUNT(*) FROM USER_LOGIN_DETAILS);
	SET @REJECTION_COUNT=(@COUNT_USER_LOGIN_DETAILS_SCDB_FORMAT-@COUNT_SPLITING_USER_LOGIN_DETAILS);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_USER_LOGIN_DETAILS_SCDB_FORMAT WHERE PREASP_DATA='USER_LOGIN_DETAILS';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='USER_LOGIN_DETAILS'),@COUNT_SPLITING_USER_LOGIN_DETAILS,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='USER_LOGIN_DETAILS'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USER_STAMP);

-- 7. USER_ACCESS		
	SET START_TIME = (SELECT CURTIME());
	DROP TABLE IF EXISTS USER_ACCESS;					
	CREATE TABLE USER_ACCESS(
	UA_ID INTEGER NOT NULL AUTO_INCREMENT,
	RC_ID INTEGER(2) NOT NULL,
	ULD_ID INTEGER(2) NOT NULL, 
	UA_REC_VER INTEGER NOT NULL,	
	UA_JOIN_DATE DATE NOT NULL,	
	UA_JOIN	CHAR(1) NULL,	
	UA_END_DATE	DATE NULL,	
	UA_TERMINATE CHAR(1) NULL,	
	UA_REASON TEXT NULL,	
	UA_USERSTAMP VARCHAR(50) NOT NULL,	
	UA_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(UA_ID),
	FOREIGN KEY(RC_ID) REFERENCES ROLE_CREATION (RC_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
--   CREATE TEMP TABLE FOR USER ACCESS
	DROP TABLE IF EXISTS TEMP_USER_ACCESS_DETAILS;
	CREATE TABLE TEMP_USER_ACCESS_DETAILS(
	ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
	UNAME VARCHAR(250),
	URECVER VARCHAR(255) NULL,
	UJOIN VARCHAR(255) NULL,
	UTERMINATE VARCHAR(255) NULL,
	UJDATE DATE NULL,
	UEDATE DATE NULL,
	UREASON VARCHAR(255) NULL,
	USERSTAMP VARCHAR(255) NULL,
	URROLES VARCHAR(255) DEFAULT NULL,
	UTIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);
	INSERT INTO TEMP_USER_ACCESS_DETAILS(UNAME,URECVER,UJOIN,UTERMINATE,UJDATE,UEDATE,UREASON,USERSTAMP,URROLES,UTIMESTAMP)
	SELECT UNAME,URECVER,UJOIN,UTERMINATE,UJDATE,UEDATE,UREASON,USERSTAMP,URROLES,TIMESTAMP FROM USER_RIGHTS_SCDB_FORMAT WHERE UNAME IS NOT NULL;
	SET @MIN_ID=(SELECT MIN(ID) FROM TEMP_USER_ACCESS_DETAILS);
	SET @MAX_ID=(SELECT MAX(ID) FROM TEMP_USER_ACCESS_DETAILS);
--  INSERT VALUES INTO USER ACCESS
	WHILE (@MIN_ID<=@MAX_ID) DO
		INSERT INTO USER_ACCESS(RC_ID,ULD_ID,UA_REC_VER,UA_JOIN_DATE,UA_JOIN,UA_END_DATE,UA_TERMINATE,UA_REASON,UA_USERSTAMP,UA_TIMESTAMP)VALUES
		((SELECT RC_ID FROM ROLE_CREATION WHERE RC_NAME=(SELECT URROLES FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID)),
		(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=(SELECT UNAME FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID)),
		(SELECT URECVER FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT UJDATE FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT UJOIN FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT UEDATE FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT UTERMINATE FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT UREASON FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT USERSTAMP FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID),
		(SELECT UTIMESTAMP FROM TEMP_USER_ACCESS_DETAILS WHERE ID=@MIN_ID));
		SET @MIN_ID=@MIN_ID+1;
	END WHILE;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR USER_ACCESS 
	SET @COUNT_USER_ACCESS_SCDB_FORMAT = (SELECT COUNT(*) FROM USER_RIGHTS_SCDB_FORMAT WHERE UNAME IS NOT NULL);
	SET @COUNT_SPLITING_USER_ACCESS = (SELECT COUNT(*) FROM USER_ACCESS);
	SET @REJECTION_COUNT=(@COUNT_USER_ACCESS_SCDB_FORMAT-@COUNT_SPLITING_USER_ACCESS);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_USER_ACCESS_SCDB_FORMAT WHERE PREASP_DATA='USER_ACCESS';
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='USER_ACCESS'),@COUNT_SPLITING_USER_ACCESS,
	(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='USER_ACCESS'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='USER RIGHTS'),DURATION,@REJECTION_COUNT,USER_STAMP);
	DROP TABLE IF EXISTS TEMP_ROLE_CREATION;
	DROP TABLE IF EXISTS TEMP_USER_ACCESS_DETAILS;
	SET FOREIGN_KEY_CHECKS =1;
END;	
	
CALL UPDATE_TEMP_CONFIG_SCDB_FORMAT();
CALL SP_ALL_INITIALIZING_INSERT('rajalakshmi.r@ssomens.com');