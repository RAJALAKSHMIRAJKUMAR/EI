 --version:0.4 --sdate:25/02/2014 --edate:26/02/2014 --issue:750 comment:#30 -desc:added uld_id header and source timestamp by:dhivya

 --version:0.3 --sdate:20/02/2014 --edate:21/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya

--VER 0.2 ISSUE NO:594 COMMENT NO:#54 STARTDATE:22/01/2014 ENDDATE:22/01/2014 DESC:CHANGED MIGRATION.MIG_ERM_OCCUPATION_DETAILS TABLE NAME AS MIG_ERM_OCCUPATION_DETAILS AND MIGRATION.MIG_ERM_ENTRY_DETAILS AS MIG_ERM_ENTRY_DETAILS DONE BY DHIVYA

DROP PROCEDURE IF EXISTS SP_ERM_DETAILS_MIG_INSERT;
CREATE PROCEDURE SP_ERM_DETAILS_MIG_INSERT(IN ERM_USERSTAMP VARCHAR(100))
BEGIN
DECLARE DONE INT DEFAULT FALSE;
DECLARE STR INT;
DECLARE STR_UPDATE INT;
DECLARE ERMOID VARCHAR(40);
DECLARE SNO INTEGER;
DECLARE CUSTNAME VARCHAR(40);
DECLARE RENT INTEGER;
DECLARE MOVINGDATE DATE;
DECLARE MINSTAY VARCHAR(10);
DECLARE NCSNO VARCHAR(250);
DECLARE NCID INTEGER;
DECLARE NOOFGUEST VARCHAR(10);
DECLARE AGE VARCHAR(10);
DECLARE CONTACTNO BIGINT(20);
DECLARE EMAILID VARCHAR(40);
DECLARE COMMENTS TEXT;
DECLARE USERSTAMP VARCHAR(40);
DECLARE TSTAMP TIMESTAMP;
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;

DECLARE FILTER_CURSOR CURSOR FOR 
SELECT ERM_SNO,ERM_CUST_NAME,ERM_RENT,ERM_MOVING_DATE,ERM_MIN_STAY,ERMO_ID,NC_SNO,ERM_NO_OF_GUESTS,ERM_AGE,ERM_CONTACT_NO,ERM_EMAIL_ID,ERM_COMMENTS,ERM_USERSTAMP,ERM_TIMESTAMP FROM MIG_ERM_ENTRY_DETAILS;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;

DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
SET START_TIME=(SELECT CURTIME());
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS ERM_ENTRY_DETAILS;
SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS ERM_OCCUPATION_DETAILS;
CREATE TABLE ERM_OCCUPATION_DETAILS(
ERMO_ID	INTEGER NOT NULL AUTO_INCREMENT,
ERMO_DATA VARCHAR(40) NOT NULL,	
ULD_ID INT(2) NOT NULL,
ERMO_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ERMO_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));
--ERM_ENTRY_DETAILS							
CREATE TABLE ERM_ENTRY_DETAILS(
ERM_ID INTEGER NOT NULL	AUTO_INCREMENT,
ERM_CUST_NAME VARCHAR(40) NOT NULL,	
ERM_RENT DECIMAL(7,2) NOT NULL,	
ERM_MOVING_DATE	DATE NOT NULL,	
ERM_MIN_STAY VARCHAR(10) NOT NULL,	
ERMO_ID	INTEGER NOT NULL,
NC_ID INTEGER NULL,
ERM_NO_OF_GUESTS VARCHAR(10) NULL,	
ERM_AGE	VARCHAR(10) NULL,	
ERM_CONTACT_NO BIGINT(15) NULL,	
ERM_EMAIL_ID VARCHAR(40) NULL,	
ERM_COMMENTS TEXT NOT NULL,	
ULD_ID INT(2) NOT NULL,	
ERM_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ERM_ID),
FOREIGN KEY(ERMO_ID) REFERENCES ERM_OCCUPATION_DETAILS (ERMO_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

UPDATE MIG_ERM_ENTRY_DETAILS SET ERM_COMMENTS=' ' WHERE ERM_COMMENTS IS NULL;
INSERT INTO ERM_OCCUPATION_DETAILS(ERMO_ID,ERMO_DATA,ULD_ID,ERMO_TIMESTAMP)SELECT EOD.ERMO_ID,EOD.ERMO_DATA,ULD.ULD_ID,EOD.ERMO_TIMESTAMP FROM MIG_ERM_OCCUPATION_DETAILS EOD,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=EOD.ERMO_USERSTAMP ;

DROP TABLE IF EXISTS ERM_ENTRY_DETAILS_SAMPLE;

CREATE TABLE ERM_ENTRY_DETAILS_SAMPLE(ERM_SNO INTEGER NOT NULL,ERM_CUST_NAME VARCHAR(40) NOT NULL,ERM_RENT DECIMAL(7,2)NOT NULL,ERM_MOVING_DATE DATE NOT NULL,ERM_MIN_STAY VARCHAR(10)NOT NULL,
ERMO_ID VARCHAR(40) NOT NULL,NC_SNO VARCHAR(40)NULL,ERM_NO_OF_GUESTS VARCHAR(10)NULL,ERM_AGE VARCHAR(10)NULL,ERM_CONTACT_NO BIGINT(15)NULL,
ERM_EMAIL_ID VARCHAR(40)NULL,ERM_COMMENTS TEXT NOT NULL,ULD_ID INTEGER NOT NULL,ERM_TIMESTAMP TIMESTAMP NOT NULL);

INSERT INTO ERM_ENTRY_DETAILS_SAMPLE(ERM_SNO,ERM_CUST_NAME,ERM_RENT,ERM_MOVING_DATE,ERM_MIN_STAY,ERMO_ID,NC_SNO,ERM_NO_OF_GUESTS,ERM_AGE,ERM_CONTACT_NO,
ERM_EMAIL_ID,ERM_COMMENTS,ULD_ID,ERM_TIMESTAMP)SELECT ERM.ERM_SNO,ERM.ERM_CUST_NAME,ERM.ERM_RENT,ERM.ERM_MOVING_DATE,ERM.ERM_MIN_STAY,ERM.ERMO_ID,ERM.NC_SNO,ERM.ERM_NO_OF_GUESTS,ERM.ERM_AGE,ERM.ERM_CONTACT_NO,ERM.ERM_EMAIL_ID,
ERM_COMMENTS,ULD.ULD_ID,ERM.ERM_TIMESTAMP FROM MIG_ERM_ENTRY_DETAILS ERM,USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=ERM.ERM_USERSTAMP;

--ERM_OCCUPATION INSERT

OPEN FILTER_CURSOR;

read_loop: LOOP
    FETCH FILTER_CURSOR INTO SNO,CUSTNAME,RENT,MOVINGDATE,MINSTAY,ERMOID,NCSNO,NOOFGUEST,AGE,CONTACTNO,EMAILID,
COMMENTS,USERSTAMP,TSTAMP;

IF DONE THEN
      LEAVE read_loop;
END IF; 

SET STR=(SELECT LENGTH(ERMO_ID)FROM MIG_ERM_ENTRY_DETAILS WHERE ERM_SNO=SNO);
IF STR>=4 THEN
IF NOT EXISTS(SELECT ERMO_DATA FROM MIG_ERM_OCCUPATION_DETAILS WHERE ERMO_DATA=ERMOID) THEN
IF NOT EXISTS(SELECT ERMO_DATA FROM ERM_OCCUPATION_DETAILS WHERE ERMO_DATA=ERMOID) THEN
INSERT INTO ERM_OCCUPATION_DETAILS(ERMO_DATA,ULD_ID)VALUES (ERMOID,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID='expatsintegrated@gmail.com'));
END IF;
END IF;
END IF;


---ENTRY_DETAILS UPDATE


SET STR_UPDATE=(SELECT LENGTH(ERMO_ID) FROM MIG_ERM_ENTRY_DETAILS WHERE ERM_SNO=SNO);
IF STR_UPDATE<=4 THEN
UPDATE ERM_ENTRY_DETAILS_SAMPLE SET ERMO_ID=(SELECT ERMO_DATA FROM MIG_ERM_OCCUPATION_DETAILS S WHERE S.ERMO_ID=ERMOID OR S.ERMO_DATA=ERMOID)WHERE ERM_SNO=SNO;
END IF;
SET NCID=NULL;

IF NCSNO IS NOT NULL THEN

UPDATE ERM_ENTRY_DETAILS_SAMPLE SET NC_SNO=(SELECT NC_DATA FROM MIG_NATIONALITY_CONFIGURATION WHERE NC_SNO=NCSNO)WHERE ERM_SNO=SNO;
SET NCID=(SELECT NC_ID FROM NATIONALITY_CONFIGURATION WHERE NC_DATA=(SELECT NC_SNO FROM ERM_ENTRY_DETAILS_SAMPLE WHERE ERM_SNO=SNO));
END IF;

INSERT INTO ERM_ENTRY_DETAILS(ERM_ID,ERM_CUST_NAME,ERM_RENT,ERM_MOVING_DATE,ERM_MIN_STAY,ERMO_ID,NC_ID,ERM_NO_OF_GUESTS,ERM_AGE,
ERM_CONTACT_NO,ERM_EMAIL_ID,ERM_COMMENTS,ULD_ID,ERM_TIMESTAMP)VALUES
(SNO,CUSTNAME,RENT,MOVINGDATE,MINSTAY,(SELECT ERMO_ID FROM ERM_OCCUPATION_DETAILS WHERE ERMO_DATA=(SELECT ERMO_ID FROM ERM_ENTRY_DETAILS_SAMPLE WHERE ERM_SNO=SNO)OR ERMO_ID=(SELECT ERMO_ID FROM ERM_ENTRY_DETAILS_SAMPLE WHERE ERM_SNO=SNO)),
NCID,NOOFGUEST,AGE,CONTACTNO,EMAILID,COMMENTS,(SELECT ULD_ID FROM ERM_ENTRY_DETAILS_SAMPLE WHERE  ERM_SNO=SNO),TSTAMP);
END LOOP;
SET END_TIME=(SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
CLOSE FILTER_CURSOR;
SET @ERMOC=(SELECT COUNT(DISTINCT( t1.ERMO_ID))
FROM MIG_ERM_ENTRY_DETAILS t1
LEFT JOIN MIG_ERM_OCCUPATION_DETAILS t2 ON t2.ERMO_DATA = t1.ERMO_ID
WHERE t2.ERMO_DATA IS NULL AND LENGTH(t1.ERMO_ID)>=4);
SET @ERM=(SELECT COUNT(*) FROM MIG_ERM_OCCUPATION_DETAILS);
SET @COUNT_SCDB_ERMOC=(SELECT SUM(@ERM+@ERMOC));
SET @COUNT_SPLITTING_ERMOC=(SELECT COUNT(*) FROM ERM_OCCUPATION_DETAILS);
SET @REJECTION_COUNT=(@COUNT_SCDB_ERMOC-@COUNT_SPLITTING_ERMOC);
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_ERMOC WHERE PREASP_DATA='ERM_OCCUPATION_DETAILS';	
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERM_OCCUPATION_DETAILS'),@COUNT_SPLITTING_ERMOC,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERM_OCCUPATION_DETAILS'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='ERM'),DURATION,@REJECTION_COUNT,ERM_USERSTAMP);


SET @COUNT_SCDB_ERMENTRY=(SELECT COUNT(*) FROM MIG_ERM_ENTRY_DETAILS );
SET @COUNT_SPLITTING_ERMENTRY=(SELECT COUNT(*) FROM ERM_ENTRY_DETAILS);
SET @REJECTION_COUNT=(@COUNT_SCDB_ERMENTRY-@COUNT_SPLITTING_ERMENTRY);
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_ERMENTRY WHERE PREASP_DATA='ERM_ENTRY_DETAILS';	
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERM_ENTRY_DETAILS'),@COUNT_SPLITTING_ERMENTRY,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERM_ENTRY_DETAILS'),
(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='ERM'),DURATION,@REJECTION_COUNT,ERM_USERSTAMP);
	
DROP TABLE ERM_ENTRY_DETAILS_SAMPLE;

 COMMIT;
END;


CALL SP_ERM_DETAILS_MIG_INSERT('rajalakshmi.r@ssomens.com');

