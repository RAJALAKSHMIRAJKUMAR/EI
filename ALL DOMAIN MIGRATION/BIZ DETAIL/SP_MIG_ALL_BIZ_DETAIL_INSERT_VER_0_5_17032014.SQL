-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.4 --sdate:28/02/2014 --edate:28/02/2014 --issue:750 --desc:changed userstamp as ULD_ID and timestamp get from scdb done by:RL
--version:0.3 --sdate:21/02/2014 --edate:21/02/2014 --issue:750 --desc:added preaudit and post audit queries done by:dhivya
--version:0.2 --sdate:21/01/2014 --edate:21/01/2014 --issue:594 --commentno:50 & 54 --doneby:RL

--ALL BIZ DETAIL DOMAIN SPLITED TABLE INSERT QUEREIS
DROP PROCEDURE IF EXISTS SP_TEMP_BIZ_DETAIL_SCDB_FORMAT;
CREATE PROCEDURE SP_TEMP_BIZ_DETAIL_SCDB_FORMAT()
BEGIN
--QUERY FOR CREATE TEMP_BIZ_DETAIL_SCDB_FORMAT TABLE
	DROP TABLE IF EXISTS TEMP_BIZ_DETAIL_SCDB_FORMAT;
	CREATE TABLE TEMP_BIZ_DETAIL_SCDB_FORMAT LIKE BIZ_DETAIL_SCDB_FORMAT;
--INSERT QUERY FOR TEMP_BIZ_DETAIL_SCDB_FORMAT TABLE
	INSERT INTO TEMP_BIZ_DETAIL_SCDB_FORMAT SELECT * FROM BIZ_DETAIL_SCDB_FORMAT;
--UPDATE QUERY FOR TEMP_BIZ_DETAIL_SCDB_FORMAT TABLE
	UPDATE TEMP_BIZ_DETAIL_SCDB_FORMAT SET EXPD_AIRCON_SERVICED_BY='LORAC AIRCON AND ENGINEERING PTE LTD' WHERE  EXPD_AIRCON_SERVICED_BY='LORAC AIRCON';
	UPDATE TEMP_BIZ_DETAIL_SCDB_FORMAT SET EXPD_AIRCON_SERVICED_BY='BCS Aircon Engineering Pte Ltd' WHERE  EXPD_AIRCON_SERVICED_BY='BCS AIRCON ENGINEERING';
END;

--INSERT QUERY FOR EXPENSE_AIRCON_SERVICE_BY TABLE
DROP PROCEDURE IF EXISTS EXPENSE_AIRCON_SERVICE_BY_INSERT;
CREATE PROCEDURE EXPENSE_AIRCON_SERVICE_BY_INSERT(IN BIZ_USERSTAMP VARCHAR(50))
BEGIN
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	SET START_TIME=(SELECT CURTIME());
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_AIRCON_SERVICE_BY;
	CREATE TABLE EXPENSE_AIRCON_SERVICE_BY(
	EASB_ID	INTEGER NOT NULL AUTO_INCREMENT,
	EASB_DATA CHAR(50) UNIQUE NOT NULL,	
	ULD_ID INTEGER NOT NULL,
	EASB_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EASB_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	INSERT INTO EXPENSE_AIRCON_SERVICE_BY(EASB_DATA,ULD_ID,EASB_TIMESTAMP) 
	SELECT DISTINCT BIZDTL.EXPD_AIRCON_SERVICED_BY,ULD.ULD_ID,BIZDTL.TIMESTAMP FROM TEMP_BIZ_DETAIL_SCDB_FORMAT BIZDTL, USER_LOGIN_DETAILS ULD  WHERE BIZDTL.EXPD_AIRCON_SERVICED_BY IS NOT NULL AND BIZDTL.USERSTAMP=ULD.ULD_LOGINID GROUP BY BIZDTL.EXPD_AIRCON_SERVICED_BY;
	SET FOREIGN_KEY_CHECKS=1;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_SCDB_EASB=(SELECT COUNT(DISTINCT(EXPD_AIRCON_SERVICED_BY)) FROM TEMP_BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_AIRCON_SERVICED_BY IS NOT NULL);
	SET @COUNT_SPLITTED_EASB=(SELECT COUNT(*) FROM EXPENSE_AIRCON_SERVICE_BY);
	SET @REJECTION_COUNT=(@COUNT_SCDB_EASB-@COUNT_SPLITTED_EASB);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EASB WHERE PREASP_DATA='EXPENSE_AIRCON_SERVICE_BY';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE			
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
	VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_AIRCON_SERVICE_BY'),@COUNT_SPLITTED_EASB,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_AIRCON_SERVICE_BY'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DETAIL'),DURATION,@REJECTION_COUNT,BIZ_USERSTAMP);
END;

--QUERY FOR CREATE EXPENSE_DETAIL_AIRCON_SERVICE TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_AIRCON_SERVICE_TABLE;
CREATE PROCEDURE SP_EXPENSE_DETAIL_AIRCON_SERVICE_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_DETAIL_AIRCON_SERVICE;
	CREATE TABLE EXPENSE_DETAIL_AIRCON_SERVICE(
	EDAS_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	EASB_ID	INTEGER NOT NULL,
	EDAS_REC_VER INTEGER NOT NULL,	
	EDAS_COMMENTS TEXT NULL	,
	ULD_ID INTEGER NOT NULL,	
	EDAS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EDAS_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(EASB_ID) REFERENCES EXPENSE_AIRCON_SERVICE_BY (EASB_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--INSERT QUERY FOR EXPENSE_DETAIL_AIRCON_SERVICE TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_AIRCON_SERVICE_INSERT;
CREATE PROCEDURE SP_EXPENSE_DETAIL_AIRCON_SERVICE_INSERT(IN BIZ_USERSTAMP VARCHAR(100))
BEGIN
--VARIABLE DECLARATION
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE AIRCONSERVICEBY CHAR(50);
	DECLARE RECVER INTEGER;
	DECLARE COMMENTS TEXT;
	DECLARE AIRCON_USERSTAMP VARCHAR(50);
	DECLARE AIRCON_TIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXPD_UNIT_NO,EXPD_AIRCON_SERVICED_BY,EXPD_COMMENTS,USERSTAMP,TIMESTAMP FROM TEMP_BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='AIRCON SERVICES';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_EXPENSE_DETAIL_AIRCON_SERVICE_TABLE();
		OPEN FILTER_CURSOR;
			read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,AIRCONSERVICEBY,COMMENTS,AIRCON_USERSTAMP,AIRCON_TIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		SET RECVER=1;
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_AIRCON_SERVICE WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
			SET RECVER=(SELECT MAX(EDAS_REC_VER) FROM EXPENSE_DETAIL_AIRCON_SERVICE WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO));
			INSERT INTO EXPENSE_DETAIL_AIRCON_SERVICE(UNIT_ID,EASB_ID,EDAS_REC_VER,EDAS_COMMENTS,ULD_ID,EDAS_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT EASB_ID FROM EXPENSE_AIRCON_SERVICE_BY WHERE EASB_DATA=AIRCONSERVICEBY),
			(RECVER+1),COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=AIRCON_USERSTAMP),AIRCON_TIMESTAMP);
		ELSE
			INSERT INTO EXPENSE_DETAIL_AIRCON_SERVICE(UNIT_ID,EASB_ID,EDAS_REC_VER,EDAS_COMMENTS,ULD_ID,EDAS_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT EASB_ID FROM EXPENSE_AIRCON_SERVICE_BY WHERE EASB_DATA=AIRCONSERVICEBY),
			RECVER,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=AIRCON_USERSTAMP),AIRCON_TIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EDAS=(SELECT COUNT(*) FROM BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='AIRCON SERVICES');
		SET @COUNT_SPLITTED_EDAS=(SELECT COUNT(*) FROM EXPENSE_DETAIL_AIRCON_SERVICE);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EDAS-@COUNT_SPLITTED_EDAS);
--UPDATE QUERY FOR PRE_AUDIT_SUB_PROFILE TABLE	
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EDAS WHERE PREASP_DATA='EXPENSE_DETAIL_AIRCON_SERVICE';
--INSERT QUERY FOR POST_AUDIT_HISTORY TABLE			
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DETAIL_AIRCON_SERVICE'),@COUNT_SPLITTED_EDAS,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DETAIL_AIRCON_SERVICE'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DETAIL'),DURATION,@REJECTION_COUNT,BIZ_USERSTAMP);
	COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_ELECTRICITY_TABLE;
CREATE PROCEDURE SP_EXPENSE_DETAIL_ELECTRICITY_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_DETAIL_ELECTRICITY;
	CREATE TABLE EXPENSE_DETAIL_ELECTRICITY(		
	EDE_ID INTEGER NOT NULL	AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	ECN_ID	INTEGER NOT NULL,
	EDE_REC_VER	INTEGER NOT NULL,	
	EDE_COMMENTS TEXT NULL,
	ULD_ID INTEGER NOT NULL,	
	EDE_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EDE_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--INSERT QUERY FOR EXPENSE_DETAIL_ELECTRICITY TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_ELECTRICITY_INSERT;
CREATE PROCEDURE SP_EXPENSE_DETAIL_ELECTRICITY_INSERT(IN BIZ_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE INVOICETO TEXT;
	DECLARE RECVER INTEGER;
	DECLARE COMMENTS TEXT;
	DECLARE ELECTRICITY_USERSTAMP VARCHAR(50);
	DECLARE ELECTRICITY_TIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXPD_UNIT_NO,EXPD_INVOICE_TO,EXPD_COMMENTS,USERSTAMP,TIMESTAMP FROM  TEMP_BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='ELECTRICITY';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_EXPENSE_DETAIL_ELECTRICITY_TABLE();
		OPEN FILTER_CURSOR;
			read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,INVOICETO,COMMENTS,ELECTRICITY_USERSTAMP,ELECTRICITY_TIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		SET RECVER=1;
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
			SET RECVER=(SELECT MAX(EDE_REC_VER) FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO));
			INSERT INTO EXPENSE_DETAIL_ELECTRICITY(UNIT_ID,ECN_ID,EDE_REC_VER,EDE_COMMENTS,ULD_ID,EDE_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27),
			(RECVER+1),COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=ELECTRICITY_USERSTAMP),ELECTRICITY_TIMESTAMP);
		ELSE
			INSERT INTO EXPENSE_DETAIL_ELECTRICITY(UNIT_ID,ECN_ID,EDE_REC_VER,EDE_COMMENTS,ULD_ID,EDE_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27),
			RECVER,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=ELECTRICITY_USERSTAMP),ELECTRICITY_TIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EDE=(SELECT COUNT(*) FROM BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='ELECTRICITY');
		SET @COUNT_SPLITTED_EDE=(SELECT COUNT(*) FROM EXPENSE_DETAIL_ELECTRICITY);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EDE-@COUNT_SPLITTED_EDE);
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EDE WHERE PREASP_DATA='EXPENSE_DETAIL_ELECTRICITY';
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DETAIL_ELECTRICITY'),@COUNT_SPLITTED_EDE,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DETAIL_ELECTRICITY'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DETAIL'),DURATION,@REJECTION_COUNT,BIZ_USERSTAMP);
	COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_DIGITAL_VOICE_TABLE;
CREATE PROCEDURE SP_EXPENSE_DETAIL_DIGITAL_VOICE_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_DETAIL_DIGITAL_VOICE;
--EXPENSE_DETAIL_DIGITAL_VOICE					
	CREATE TABLE EXPENSE_DETAIL_DIGITAL_VOICE(
	EDDV_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	ECN_ID	INTEGER NULL,
	EDDV_REC_VER INTEGER NOT NULL,	
	EDDV_DIGITAL_VOICE_NO INTEGER(8) NOT NULL,	
	EDDV_DIGITAL_ACCOUNT_NO	VARCHAR(11) NOT NULL,	
	EDDV_COMMENTS TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EDDV_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EDDV_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
SET FOREIGN_KEY_CHECKS=1;
END;


--INSERT QUERY FOR EXPENSE_DETAIL_DIGITAL_VOICE TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_DIGITAL_VOICE_INSERT;
CREATE PROCEDURE SP_EXPENSE_DETAIL_DIGITAL_VOICE_INSERT(IN BIZ_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE INVOICETO TEXT;
	DECLARE DIGITALVOICENO INTEGER(8);
	DECLARE DIGITALACCNO VARCHAR(11);
	DECLARE RECVER INTEGER;
	DECLARE COMMENTS TEXT;
	DECLARE DIGITAL_VOICE_USERSTAMP VARCHAR(50);
	DECLARE DIGITAL_TIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXPD_UNIT_NO,EXPD_INVOICE_TO,EXPD_DIGITAL_VOICE_NO,EXPD_DIGITAL_ACCOUNT_NO,EXPD_COMMENTS,USERSTAMP,TIMESTAMP FROM  TEMP_BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='DIGITAL VOICE';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_EXPENSE_DETAIL_DIGITAL_VOICE_TABLE();
		OPEN FILTER_CURSOR;
			read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,INVOICETO,DIGITALVOICENO,DIGITALACCNO,COMMENTS,DIGITAL_VOICE_USERSTAMP,DIGITAL_TIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		SET RECVER=1;
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_DIGITAL_VOICE WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
			SET RECVER=(SELECT MAX(EDDV_REC_VER) FROM EXPENSE_DETAIL_DIGITAL_VOICE WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO));
			INSERT INTO EXPENSE_DETAIL_DIGITAL_VOICE(UNIT_ID,ECN_ID,EDDV_REC_VER,EDDV_DIGITAL_VOICE_NO,EDDV_DIGITAL_ACCOUNT_NO,EDDV_COMMENTS,ULD_ID,EDDV_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27),(RECVER+1),DIGITALVOICENO,DIGITALACCNO,
			COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=DIGITAL_VOICE_USERSTAMP),DIGITAL_TIMESTAMP);
		ELSE
			INSERT INTO EXPENSE_DETAIL_DIGITAL_VOICE(UNIT_ID,ECN_ID,EDDV_REC_VER,EDDV_DIGITAL_VOICE_NO,EDDV_DIGITAL_ACCOUNT_NO,EDDV_COMMENTS,ULD_ID,EDDV_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27),
			RECVER,DIGITALVOICENO,DIGITALACCNO,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=DIGITAL_VOICE_USERSTAMP),DIGITAL_TIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EDDV=(SELECT COUNT(*) FROM BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='DIGITAL VOICE');
		SET @COUNT_SPLITTED_EDDV=(SELECT COUNT(*) FROM EXPENSE_DETAIL_DIGITAL_VOICE);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EDDV-@COUNT_SPLITTED_EDDV);
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EDDV WHERE PREASP_DATA='EXPENSE_DETAIL_DIGITAL_VOICE';
		
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DETAIL_DIGITAL_VOICE'),@COUNT_SPLITTED_EDDV,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DETAIL_DIGITAL_VOICE'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DETAIL'),DURATION,@REJECTION_COUNT,BIZ_USERSTAMP);
	COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_CARPARK_TABLE;
CREATE PROCEDURE SP_EXPENSE_DETAIL_CARPARK_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_DETAIL_CARPARK;
	CREATE TABLE EXPENSE_DETAIL_CARPARK(
	EDCP_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	EDCP_REC_VER INTEGER NOT NULL,	
	EDCP_CAR_NO	VARCHAR(9) NOT NULL	,
	EDCP_COMMENTS TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EDCP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EDCP_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;


--INSERT QUERY FOR SP_EXPENSE_DETAIL_CARPARK TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_CARPARK_INSERT;
CREATE PROCEDURE SP_EXPENSE_DETAIL_CARPARK_INSERT(IN BIZ_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE CARNO VARCHAR(9);
	DECLARE COMMENTS TEXT;
	DECLARE RECVER INTEGER;
	DECLARE CARPARK_USERSTAMP VARCHAR(50);
	DECLARE CARPARK_TIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXPD_UNIT_NO,EXPD_CAR_NO,EXPD_COMMENTS,USERSTAMP,TIMESTAMP FROM  TEMP_BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='CAR PARK';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	CALL SP_EXPENSE_DETAIL_CARPARK_TABLE();
	SET START_TIME=(SELECT CURTIME());
		OPEN FILTER_CURSOR;
			read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,CARNO,COMMENTS,CARPARK_USERSTAMP,CARPARK_TIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		SET RECVER=1;
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_CARPARK WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
			SET RECVER=(SELECT MAX(EDCP_REC_VER) FROM EXPENSE_DETAIL_CARPARK WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO));
			INSERT INTO EXPENSE_DETAIL_CARPARK(UNIT_ID,EDCP_REC_VER,EDCP_CAR_NO,EDCP_COMMENTS,ULD_ID,EDCP_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(RECVER+1),CARNO,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=CARPARK_USERSTAMP),CARPARK_TIMESTAMP);
		ELSE
			INSERT INTO EXPENSE_DETAIL_CARPARK(UNIT_ID,EDCP_REC_VER,EDCP_CAR_NO,EDCP_COMMENTS,ULD_ID,EDCP_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),RECVER,CARNO,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=CARPARK_USERSTAMP),CARPARK_TIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EDCP=(SELECT COUNT(*) FROM BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='CAR PARK');
		SET @COUNT_SPLITTED_EDCP=(SELECT COUNT(*) FROM EXPENSE_DETAIL_CARPARK);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EDCP-@COUNT_SPLITTED_EDCP);
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EDCP WHERE PREASP_DATA='EXPENSE_DETAIL_CARPARK';
		
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DETAIL_CARPARK'),@COUNT_SPLITTED_EDCP,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DETAIL_CARPARK'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DETAIL'),DURATION,@REJECTION_COUNT,BIZ_USERSTAMP);
		
	COMMIT;
END;

DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_STARHUB_TABLE;
CREATE PROCEDURE SP_EXPENSE_DETAIL_STARHUB_TABLE()
BEGIN
	SET FOREIGN_KEY_CHECKS=0;
	DROP TABLE IF EXISTS EXPENSE_DETAIL_STARHUB;
	CREATE TABLE EXPENSE_DETAIL_STARHUB(
	EDSH_ID	INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	ECN_ID INTEGER NULL,
	EDSH_REC_VER INTEGER NOT NULL,
	EDSH_ACCOUNT_NO	VARCHAR(11) NOT NULL,	
	EDSH_APPL_DATE DATE NULL,	
	EDSH_CABLE_START_DATE DATE NULL,
	EDSH_CABLE_END_DATE	DATE NULL,	
	EDSH_INTERNET_START_DATE DATE NULL,	
	EDSH_INTERNET_END_DATE DATE NULL,	
	EDSH_SSID VARCHAR(25) NULL,	
	EDSH_PWD VARCHAR(25) NULL,	
	EDSH_CABLE_BOX_SERIAL_NO VARCHAR(50) NULL,	
	EDSH_MODEM_SERIAL_NO VARCHAR(50) NULL,	
	EDSH_BASIC_GROUP TEXT NULL,	
	EDSH_ADDTNL_CH TEXT NULL,	
	EDSH_COMMENTS TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,	
	EDSH_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EDSH_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));
	SET FOREIGN_KEY_CHECKS=1;
END;

--INSERT QUERY FOR EXPENSE_DETAIL_STARHUB TABLE
DROP PROCEDURE IF EXISTS SP_EXPENSE_DETAIL_STARHUB_INSERT;
CREATE PROCEDURE SP_EXPENSE_DETAIL_STARHUB_INSERT(IN BIZ_USERSTAMP VARCHAR(100))
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE UNITNO INTEGER;
	DECLARE INVOICETO TEXT;
	DECLARE ACCOUNTNO VARCHAR(11);
	DECLARE APPLDATE DATE;
	DECLARE RECVER INTEGER;
	DECLARE STARTDATE DATE;
	DECLARE ENDDATE DATE;
	DECLARE INTERNET_STARTDATE DATE;
	DECLARE INTERNET_ENDDATE DATE;
	DECLARE SSID VARCHAR(25);
	DECLARE PWD VARCHAR(25);
	DECLARE CABLE_BOX_SERIAL_NO VARCHAR(50);
	DECLARE MODEM_SERIAL_NO VARCHAR(50);
	DECLARE BASIC_GROUP TEXT;
	DECLARE ADDTNL_CH TEXT;
	DECLARE COMMENTS TEXT;
	DECLARE STARHUB_USERSTAMP VARCHAR(50);
	DECLARE STARHUB_TIMESTAMP TIMESTAMP;
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT EXPD_UNIT_NO,EXPD_INVOICE_TO,EXPD_STAR_HUB_ACCOUNT_NO,EXPD_APPL_DATE,EXPD_CABLE_START_DATE,EXPD_CABLE_END_DATE,
	EXPD_INTERNET_START_DATE,EXPD_INTERNET_END_DATE,EXPD_SSID,EXPD_PWD,EXPD_CABLE_BOX_SERIAL_NO,EXPD_MODEM_SERIAL_NO,EXPD_BASIC_GROUP,EXPD_ADDTNL_CH,EXPD_COMMENTS,USERSTAMP,TIMESTAMP
	FROM  TEMP_BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='STAR HUB';
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
	END;
	START TRANSACTION;
	SET START_TIME=(SELECT CURTIME());
	CALL SP_EXPENSE_DETAIL_STARHUB_TABLE();
	
		OPEN FILTER_CURSOR;
			read_loop: LOOP
		FETCH FILTER_CURSOR INTO UNITNO,INVOICETO,ACCOUNTNO,APPLDATE,STARTDATE,ENDDATE,INTERNET_STARTDATE,INTERNET_ENDDATE,SSID,PWD,CABLE_BOX_SERIAL_NO,MODEM_SERIAL_NO,BASIC_GROUP,ADDTNL_CH,COMMENTS,STARHUB_USERSTAMP,STARHUB_TIMESTAMP;
		IF DONE THEN
			LEAVE read_loop;
		END IF;
		SET RECVER=1;
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_STARHUB WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
			SET RECVER=(SELECT MAX(EDSH_REC_VER) FROM EXPENSE_DETAIL_STARHUB WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO));
			INSERT INTO EXPENSE_DETAIL_STARHUB(UNIT_ID,ECN_ID,EDSH_REC_VER,EDSH_ACCOUNT_NO,EDSH_APPL_DATE,EDSH_CABLE_START_DATE,EDSH_CABLE_END_DATE,EDSH_INTERNET_START_DATE,EDSH_INTERNET_END_DATE,EDSH_SSID,EDSH_PWD,EDSH_CABLE_BOX_SERIAL_NO,EDSH_MODEM_SERIAL_NO,EDSH_BASIC_GROUP,EDSH_ADDTNL_CH,EDSH_COMMENTS,ULD_ID,EDSH_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27),(RECVER+1),ACCOUNTNO,APPLDATE,STARTDATE,ENDDATE,INTERNET_STARTDATE,INTERNET_ENDDATE,SSID,PWD,CABLE_BOX_SERIAL_NO,MODEM_SERIAL_NO,BASIC_GROUP,ADDTNL_CH,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=STARHUB_USERSTAMP),STARHUB_TIMESTAMP);
		ELSE
			INSERT INTO EXPENSE_DETAIL_STARHUB(UNIT_ID,ECN_ID,EDSH_REC_VER,EDSH_ACCOUNT_NO,EDSH_APPL_DATE,EDSH_CABLE_START_DATE,EDSH_CABLE_END_DATE,EDSH_INTERNET_START_DATE,EDSH_INTERNET_END_DATE,EDSH_SSID,EDSH_PWD,EDSH_CABLE_BOX_SERIAL_NO,EDSH_MODEM_SERIAL_NO,EDSH_BASIC_GROUP,EDSH_ADDTNL_CH,EDSH_COMMENTS,ULD_ID,EDSH_TIMESTAMP)VALUES
			((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO),(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=INVOICETO AND CGN_ID=27),RECVER,ACCOUNTNO,APPLDATE,STARTDATE,ENDDATE,INTERNET_STARTDATE,INTERNET_ENDDATE,SSID,PWD,CABLE_BOX_SERIAL_NO,MODEM_SERIAL_NO,BASIC_GROUP,ADDTNL_CH,COMMENTS,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=STARHUB_USERSTAMP),STARHUB_TIMESTAMP);
		END IF;
		END LOOP;
		CLOSE FILTER_CURSOR;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @COUNT_SCDB_EDSB=(SELECT COUNT(*) FROM BIZ_DETAIL_SCDB_FORMAT WHERE EXPD_TYPE_OF_EXPENSE='STAR HUB');
		SET @COUNT_SPLITTED_EDSB=(SELECT COUNT(*) FROM EXPENSE_DETAIL_STARHUB);
		SET @REJECTION_COUNT=(@COUNT_SCDB_EDSB-@COUNT_SPLITTED_EDSB);
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_EDSB WHERE PREASP_DATA='EXPENSE_DETAIL_STARHUB';
		
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,POSTAH_USERSTAMP)
		VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DETAIL_STARHUB'),@COUNT_SPLITTED_EDSB,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DETAIL_STARHUB'),
		(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DETAIL'),DURATION,@REJECTION_COUNT,BIZ_USERSTAMP);
	COMMIT;
END;

--QUERY FOR INSERT VALUES IN ALL BIZ DETAIL TABLE
DROP PROCEDURE IF EXISTS SP_MIG_ALL_BIZ_DETAIL_INSERT;
CREATE PROCEDURE SP_MIG_ALL_BIZ_DETAIL_INSERT(IN USERSTAMP VARCHAR(50))	
BEGIN
	CALL SP_TEMP_BIZ_DETAIL_SCDB_FORMAT();
	CALL EXPENSE_AIRCON_SERVICE_BY_INSERT(USERSTAMP);
	CALL SP_EXPENSE_DETAIL_AIRCON_SERVICE_INSERT(USERSTAMP);
	CALL SP_EXPENSE_DETAIL_ELECTRICITY_INSERT(USERSTAMP);
	CALL SP_EXPENSE_DETAIL_DIGITAL_VOICE_INSERT(USERSTAMP);
	CALL SP_EXPENSE_DETAIL_CARPARK_INSERT(USERSTAMP);
	CALL SP_EXPENSE_DETAIL_STARHUB_INSERT(USERSTAMP);
	DROP TABLE IF EXISTS TEMP_BIZ_DETAIL_SCDB_FORMAT;
END;

CALL SP_MIG_ALL_BIZ_DETAIL_INSERT('rajalakshmi.r@ssomes.com');