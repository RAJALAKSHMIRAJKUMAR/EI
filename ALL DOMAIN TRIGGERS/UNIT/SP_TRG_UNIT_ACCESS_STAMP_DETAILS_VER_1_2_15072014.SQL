--version:1.2 --sdate:15/07/2014 --edate:15/07/2014 --issue:738-- desc:added UASD_ACTIVE in old_value header --done by:RL
--version:1.1 --sdate:24/06/2014 --edate:24/06/2014 --issue:738 --comment no#97 --desc:updating card and inv to lost,new card no.(updating in new value) --done by:RL
--version:1.0 --sdate:18/06/2014 --edate:18/06/2014 --issue:738 --comment no#71 --desc:ADDED (OLD_VALUE!='' AND NEW_VALUE!='') this condition removed rollback & commit because trigger does not accept roll back & commit --done by:RL
-- version:0.9 -- sdate:10/06/2014 -- edate:10/06/2014 -- issue:566 -- comment no:12 -- desc:ADDED ROLLBACK AND COMMIT -- done by:SASIKALA
-- version:0.8 -- sdate:05/06/2014 -- edate:05/06/2014 -- issue:529 -- comment no:196 -- desc:ADDED ULD_ID & TIMESTAMP OLD VALUE & NEW VALUE -- done by:RL
-- version:0.7-- sdate:07/04/2014 -- edate:07/04/2014 -- issue:797 -- commentno:28 -- desc: changed header name table NAME-- done by:RAJA
-- version 0.6 -- sdate:27/02/2014 -- edate:27/02/2014 -- issue:754 -- comment:22 -- doneby:RL    
-- version:0.4 -- sdate:10/02/2014 -- edate:10/02/2014 -- issue:529 -- desc:add comma after 1 header value is completed -- doneby:RL
-- version 0.3 -- sdate:08/02/2014 -- edate:08/02/2014 -- issue:738 -- commentno:#1 -- desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY DONE BY:DHIVYA
-- version 0.3 -- startdate:07/04/2014 -- endate:07/04/2014 -- ISSUE NO:797 -- COMMENT NO:28 -- desc:changed the headers names TABLE NAME -- doneby:RAJA
-- version 0.1 -- startdate:26/11/2013 -- endate:04/12/2013 -- desc:SP FOR SP_TRG_UNIT_ACCESS_STAMP_DETAILS -- doneby:DINESH.M
DROP PROCEDURE IF EXISTS SP_TRG_UNIT_ACCESS_STAMP_DETAILS;
CREATE PROCEDURE SP_TRG_UNIT_ACCESS_STAMP_DETAILS( 
IN UASDID INTEGER,
IN OLDUNITID INTEGER,
IN NEWUNITID INTEGER,     
IN OLDUSDTID INTEGER,
IN NEWUSDTID INTEGER,
IN OLDSTAMPDUTYDATE DATE,
IN NEWSTAMPDUTYDATE DATE,
IN OLDSTAMPDUTYAMT DECIMAL(6,2),
IN NEWSTAMPDUTYAMT DECIMAL(6,2),
IN OLDACCESS_CARD VARCHAR(7),
IN NEWACCESS_CARD VARCHAR(7),
IN OLDACCESS_ACTIVE CHAR(6),
IN NEWACCESS_ACTIVE CHAR(6),
IN OLDACCESS_INVENTORY CHAR(6),
IN NEWACCESS_INVENTORY CHAR(6),
IN OLDACCESS_LOST CHAR(6),
IN NEWACCESS_LOST CHAR(6),
IN OLDURTDID INTEGER,
IN NEWURTDID INTEGER,
IN OLDCOMMENTS TEXT,
IN NEWCOMMENTS TEXT,
IN OLDULDID INTEGER,
IN NEWULDID INTEGER,
IN OLDTIMESTAMP VARCHAR(50),
IN NEWTIMESTAMP VARCHAR(50),
IN TICKLER VARCHAR(30))
BEGIN
-- VARIABLE DECLARTION ------------
	DECLARE OLD_VALUE TEXT DEFAULT '';
	DECLARE NEW_VALUE TEXT DEFAULT '';
	DECLARE MESSAGE_TEXT VARCHAR(100);
	DECLARE CARDNO INTEGER(7);
	DECLARE FLAG INTEGER;
	SET FLAG =0;
--upadate TICKLER_HISTORY table----
	IF(TICKLER='TICKLER_INSERT') THEN
		IF(OLDUSDTID IS NOT NULL AND NEWUSDTID IS NULL) OR (OLDUSDTID IS NULL AND NEWUSDTID IS NOT NULL) OR (OLDUSDTID != NEWUSDTID) OR  
		(OLDSTAMPDUTYDATE IS NOT NULL AND NEWSTAMPDUTYDATE IS NULL) OR (OLDSTAMPDUTYDATE IS NULL AND NEWSTAMPDUTYDATE IS NOT NULL) OR (OLDSTAMPDUTYDATE != NEWSTAMPDUTYDATE) OR 
		(OLDSTAMPDUTYAMT IS NOT NULL AND NEWSTAMPDUTYAMT IS NULL) OR (OLDSTAMPDUTYAMT IS NULL AND NEWSTAMPDUTYAMT IS NOT NULL) OR (OLDSTAMPDUTYAMT != NEWSTAMPDUTYAMT) OR
		(OLDACCESS_CARD IS NOT NULL AND NEWACCESS_CARD IS NULL) OR (OLDACCESS_CARD IS NULL AND NEWACCESS_CARD IS NOT NULL) OR (OLDACCESS_CARD != NEWACCESS_CARD) OR (OLDACCESS_ACTIVE != NEWACCESS_ACTIVE) OR
		(OLDACCESS_INVENTORY IS NOT NULL AND NEWACCESS_INVENTORY IS NULL) OR (OLDACCESS_INVENTORY IS NULL AND NEWACCESS_INVENTORY IS NOT NULL) OR (OLDACCESS_INVENTORY != NEWACCESS_INVENTORY) OR 
		(OLDACCESS_LOST IS NOT NULL AND NEWACCESS_LOST IS NULL) OR (OLDACCESS_LOST IS NULL AND NEWACCESS_LOST IS NOT NULL) OR (OLDACCESS_LOST != NEWACCESS_LOST) OR 
		(OLDURTDID IS NOT NULL AND NEWURTDID IS NULL) OR (OLDURTDID IS NULL AND NEWURTDID IS NOT NULL) OR (OLDURTDID != NEWURTDID) OR
		(OLDCOMMENTS IS NOT NULL AND NEWCOMMENTS IS NULL) OR (OLDCOMMENTS IS NULL AND NEWCOMMENTS IS NOT NULL) OR (OLDCOMMENTS != NEWCOMMENTS)THEN
			IF (UASDID) THEN 
				SET  OLD_VALUE = CONCAT(OLD_VALUE,'UASD_ID=', UASDID,','); 
			END IF;
		END IF;
		IF(OLDACCESS_CARD IS NULL)THEN
			SET OLDACCESS_CARD = '<NULL>';
		ELSE 
			SET OLDACCESS_CARD = OLDACCESS_CARD;
		END IF;
		IF(NEWACCESS_CARD IS NULL)THEN
			SET NEWACCESS_CARD = '<NULL>';
		ELSE
			SET NEWACCESS_CARD = NEWACCESS_CARD;
		END IF;
		IF(OLDACCESS_ACTIVE IS NULL)THEN
			SET OLDACCESS_ACTIVE = '<NULL>';
		ELSE
			SET OLDACCESS_ACTIVE = OLDACCESS_ACTIVE;
		END IF;
		IF(NEWACCESS_ACTIVE IS NULL)THEN
			SET NEWACCESS_ACTIVE = '<NULL>';
		ELSE
			SET NEWACCESS_ACTIVE = NEWACCESS_ACTIVE;
		END IF;
		IF(OLDACCESS_INVENTORY IS NULL)THEN
			SET OLDACCESS_INVENTORY = '<NULL>';
		ELSE
			SET OLDACCESS_INVENTORY = OLDACCESS_INVENTORY;
		END IF;
		IF(NEWACCESS_INVENTORY IS NULL)THEN
			SET NEWACCESS_INVENTORY = '<NULL>';
		ELSE
			SET NEWACCESS_INVENTORY = NEWACCESS_INVENTORY;
		END IF;
		IF(OLDACCESS_LOST IS NULL)THEN
			SET OLDACCESS_LOST = '<NULL>';
		ELSE 
			SET OLDACCESS_LOST = OLDACCESS_LOST;
		END IF;
		IF(NEWACCESS_LOST IS NULL)THEN
			SET NEWACCESS_LOST = '<NULL>';
		ELSE
			SET NEWACCESS_LOST = NEWACCESS_LOST;
		END IF;
		
		IF(OLDACCESS_ACTIVE IS NULL AND NEWACCESS_ACTIVE IS NOT NULL) OR (OLDACCESS_ACTIVE IS NOT NULL AND NEWACCESS_ACTIVE IS NULL) OR (OLDACCESS_ACTIVE!=NEWACCESS_ACTIVE) OR
		(OLDACCESS_INVENTORY IS NULL AND NEWACCESS_INVENTORY IS NOT NULL) OR (OLDACCESS_INVENTORY IS NOT NULL AND NEWACCESS_INVENTORY IS NULL) OR (OLDACCESS_INVENTORY!=NEWACCESS_INVENTORY) OR
		(OLDACCESS_LOST IS NULL AND NEWACCESS_LOST IS NOT NULL) OR (OLDACCESS_LOST IS NOT NULL AND NEWACCESS_LOST IS NULL) OR (OLDACCESS_LOST!=NEWACCESS_LOST) OR
		(OLDACCESS_CARD!=NEWACCESS_CARD) THEN
			IF (OLDACCESS_CARD IS NULL AND NEWACCESS_CARD IS NOT NULL) THEN
				SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_CARD=','<NULL>,');
			ELSEIF (OLDACCESS_CARD IS NOT NULL AND NEWACCESS_CARD IS NULL) THEN
				SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_CARD=',OLDACCESS_CARD,',');
			ELSEIF (OLDACCESS_CARD = NEWACCESS_CARD) THEN 
				SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_ACCESS_CARD=', OLDACCESS_CARD,','); 
			ELSEIF (OLDACCESS_CARD != NEWACCESS_CARD) THEN 
				SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_ACCESS_CARD=', OLDACCESS_CARD,',');
			END IF;
		END IF;
--get the OLD VALUE & NEW_VALUE for UNIT_ID to store it in TICKLER_HISTORY table
		IF (OLDUNITID!= NEWUNITID) THEN 
			SET  OLD_VALUE = CONCAT(OLD_VALUE,'UNIT_ID=', OLDUNITID,','); 
		END IF;
		IF (OLDUNITID!= NEWUNITID) THEN 
			SET  NEW_VALUE = CONCAT(NEW_VALUE,'UNIT_ID=', NEWUNITID,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for USDT_ID to store it in TICKLER_HISTORY table
		IF (OLDUSDTID IS NULL AND NEWUSDTID IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'USDT_ID=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'USDT_ID=',NEWUSDTID,',');
		ELSEIF (OLDUSDTID IS NOT NULL AND NEWUSDTID IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'USDT_ID=',OLDUSDTID,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'USDT_ID=','<NULL>,');
		ELSEIF (OLDUSDTID!= NEWUSDTID) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'USDT_ID=', OLDUSDTID,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'USDT_ID=', NEWUSDTID,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_STAMPDUTYDATE to store it in TICKLER_HISTORY table
		IF (OLDSTAMPDUTYDATE IS NULL AND NEWSTAMPDUTYDATE IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_STAMPDUTYDATE=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_STAMPDUTYDATE=',NEWSTAMPDUTYDATE,',');
		ELSEIF (OLDSTAMPDUTYDATE IS NOT NULL AND NEWSTAMPDUTYDATE IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_STAMPDUTYDATE=',OLDSTAMPDUTYDATE,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_STAMPDUTYDATE=','<NULL>,');
		ELSEIF (OLDSTAMPDUTYDATE!= NEWSTAMPDUTYDATE) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_STAMPDUTYDATE=', OLDSTAMPDUTYDATE,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_STAMPDUTYDATE=', NEWSTAMPDUTYDATE,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_STAMPDUTYAMT to store it in TICKLER_HISTORY table
		IF (OLDSTAMPDUTYAMT IS NULL AND NEWSTAMPDUTYAMT IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_STAMPDUTYAMT=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_STAMPDUTYAMT=',NEWSTAMPDUTYAMT,',');
		ELSEIF (OLDSTAMPDUTYAMT IS NOT NULL AND NEWSTAMPDUTYAMT IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_STAMPDUTYAMT=',OLDSTAMPDUTYAMT,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_STAMPDUTYAMT=','<NULL>,');
		ELSEIF (OLDSTAMPDUTYAMT!= NEWSTAMPDUTYAMT) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_STAMPDUTYAMT=', OLDSTAMPDUTYAMT,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_STAMPDUTYAMT=', NEWSTAMPDUTYAMT,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_ACCESS_CARD to store it in TICKLER_HISTORY table
		IF (OLDACCESS_CARD IS NULL AND NEWACCESS_CARD IS NOT NULL) THEN
				SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_CARD=',NEWACCESS_CARD,',');
			ELSEIF (OLDACCESS_CARD IS NOT NULL AND NEWACCESS_CARD IS NULL) THEN
				SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_CARD=','<NULL>,');
			ELSEIF(OLDACCESS_CARD!= NEWACCESS_CARD) THEN
				SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_ACCESS_CARD=', NEWACCESS_CARD,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_ACCESS_ACTIVE to store it in TICKLER_HISTORY table
		IF (OLDACCESS_ACTIVE IS NULL AND NEWACCESS_ACTIVE IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_ACTIVE=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_ACTIVE=',NEWACCESS_ACTIVE,',');
		ELSEIF (OLDACCESS_ACTIVE IS NOT NULL AND NEWACCESS_ACTIVE IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_ACTIVE=',OLDACCESS_ACTIVE,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_ACTIVE=','<NULL>,');
		ELSEIF (OLDACCESS_ACTIVE!= NEWACCESS_ACTIVE) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_ACCESS_ACTIVE=', OLDACCESS_ACTIVE,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_ACCESS_ACTIVE=', NEWACCESS_ACTIVE,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_ACCESS_INVENTORY to store it in TICKLER_HISTORY table
		IF (OLDACCESS_INVENTORY IS NULL AND NEWACCESS_INVENTORY IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_INVENTORY=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_INVENTORY=',NEWACCESS_INVENTORY,',');
		ELSEIF (OLDACCESS_INVENTORY IS NOT NULL AND NEWACCESS_INVENTORY IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_INVENTORY=',OLDACCESS_INVENTORY,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_INVENTORY=','<NULL>,');
		ELSEIF (OLDACCESS_INVENTORY!= NEWACCESS_INVENTORY) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_ACCESS_INVENTORY=', OLDACCESS_INVENTORY,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_ACCESS_INVENTORY=', NEWACCESS_INVENTORY,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_ACCESS_LOST to store it in TICKLER_HISTORY table
		IF (OLDACCESS_LOST IS NULL AND NEWACCESS_LOST IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_LOST=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_LOST=',NEWACCESS_LOST,',');
		ELSEIF (OLDACCESS_LOST IS NOT NULL AND NEWACCESS_LOST IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_ACCESS_LOST=',OLDACCESS_LOST,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_ACCESS_LOST=','<NULL>,');
		ELSEIF (OLDACCESS_LOST!= NEWACCESS_LOST) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_ACCESS_LOST=', OLDACCESS_LOST,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_ACCESS_LOST=', NEWACCESS_LOST,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_URTD_ID to store it in TICKLER_HISTORY table
		IF (OLDURTDID IS NULL AND NEWURTDID IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'URTD_ID=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'URTD_ID=',NEWURTDID,',');
		ELSEIF (OLDURTDID IS NOT NULL AND NEWURTDID IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'URTD_ID=',OLDURTDID,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'URTD_ID=','<NULL>,');
		ELSEIF (OLDURTDID!= NEWURTDID) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'URTD_ID=', OLDURTDID,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'URTD_ID=', NEWURTDID,','); 
		END IF;
--get the OLD VALUE & NEW_VALUE for UASD_NEW_COMMENTS to store it in TICKLER_HISTORY table
		IF (OLDCOMMENTS IS NULL AND NEWCOMMENTS IS NOT NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_COMMENTS=','<NULL>,');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_COMMENTS=',NEWCOMMENTS,',');
		ELSEIF (OLDCOMMENTS IS NOT NULL AND NEWCOMMENTS IS NULL) THEN
			SET OLD_VALUE=CONCAT(OLD_VALUE,'UASD_COMMENTS=',OLDCOMMENTS,',');
			SET NEW_VALUE=CONCAT(NEW_VALUE,'UASD_COMMENTS=','<NULL>,');
		ELSEIF (OLDCOMMENTS!= NEWCOMMENTS) THEN 
			SET OLD_VALUE = CONCAT(OLD_VALUE,'UASD_COMMENTS=', OLDCOMMENTS,','); 
			SET NEW_VALUE = CONCAT(NEW_VALUE,'UASD_COMMENTS=', NEWCOMMENTS,','); 
		END IF;
		IF(OLDUSDTID IS NOT NULL AND NEWUSDTID IS NULL) OR (OLDUSDTID IS NULL AND NEWUSDTID IS NOT NULL) OR (OLDUSDTID != NEWUSDTID) OR  
		(OLDSTAMPDUTYDATE IS NOT NULL AND NEWSTAMPDUTYDATE IS NULL) OR (OLDSTAMPDUTYDATE IS NULL AND NEWSTAMPDUTYDATE IS NOT NULL) OR (OLDSTAMPDUTYDATE != NEWSTAMPDUTYDATE) OR 
		(OLDSTAMPDUTYAMT IS NOT NULL AND NEWSTAMPDUTYAMT IS NULL) OR (OLDSTAMPDUTYAMT IS NULL AND NEWSTAMPDUTYAMT IS NOT NULL) OR (OLDSTAMPDUTYAMT != NEWSTAMPDUTYAMT) OR
		(OLDACCESS_CARD IS NOT NULL AND NEWACCESS_CARD IS NULL) OR (OLDACCESS_CARD IS NULL AND NEWACCESS_CARD IS NOT NULL) OR (OLDACCESS_CARD != NEWACCESS_CARD) OR (OLDACCESS_ACTIVE != NEWACCESS_ACTIVE) OR
		(OLDACCESS_INVENTORY IS NOT NULL AND NEWACCESS_INVENTORY IS NULL) OR (OLDACCESS_INVENTORY IS NULL AND NEWACCESS_INVENTORY IS NOT NULL) OR (OLDACCESS_INVENTORY != NEWACCESS_INVENTORY) OR 
		(OLDACCESS_LOST IS NOT NULL AND NEWACCESS_LOST IS NULL) OR (OLDACCESS_LOST IS NULL AND NEWACCESS_LOST IS NOT NULL) OR (OLDACCESS_LOST != NEWACCESS_LOST) OR 
		(OLDURTDID IS NOT NULL AND NEWURTDID IS NULL) OR (OLDURTDID IS NULL AND NEWURTDID IS NOT NULL) OR (OLDURTDID != NEWURTDID) OR
		(OLDCOMMENTS IS NOT NULL AND NEWCOMMENTS IS NULL) OR (OLDCOMMENTS IS NULL AND NEWCOMMENTS IS NOT NULL) OR (OLDCOMMENTS != NEWCOMMENTS)THEN
			IF (OLDULDID!= NEWULDID) THEN 
				SET OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLDULDID,','); 
			END IF;
			IF (OLDTIMESTAMP!= NEWTIMESTAMP) THEN  
				SET  OLD_VALUE = CONCAT(OLD_VALUE,'UASD_TIMESTAMP=', OLDTIMESTAMP,','); 
			END IF;
		END IF;
		IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
			IF(OLD_VALUE!=NEW_VALUE)THEN
				SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
				SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
				INSERT INTO TICKLER_HISTORY
				(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
				((SELECT ULD_ID FROM UNIT_ACCESS_STAMP_DETAILS  WHERE UASD_ID=UASDID),
				(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
				(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='UNIT_ACCESS_STAMP_DETAILS'),OLD_VALUE,NEW_VALUE);
			END IF;
		END IF;
	END IF;
-- passing ERROR message before insert USDT_ID and URTD_ID  from UNIT_ACCESS_STAMP_DETAILS
	IF(TICKLER='INSERT') THEN
		IF EXISTS (SELECT USDT_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE USDT_ID=NEWUSDTID AND UNIT_ID=NEWUNITID)THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT= 'CAN NOT INSERT USDT_ID ';
		END IF;
		IF EXISTS (SELECT URTD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE URTD_ID=NEWURTDID AND UNIT_ID=NEWUNITID)THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT='CAN NOT INSERT URTD_ID ';
		END IF;
		IF CHAR_LENGTH( NEWACCESS_CARD )>7 THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT=' ACCESS CARD MUST BE MAXMIMUM 7 DIGITS  ';
        END IF;
	END IF;
-- passing ERROR message before UPDATE USDT_ID and URTD_ID  from UNIT_ACCESS_STAMP_DETAILS
	IF(TICKLER='UPDATE') THEN
		IF NEWUSDTID IS NOT NULL THEN
			IF (SELECT COUNT(USDT_ID) FROM UNIT_ACCESS_STAMP_DETAILS WHERE USDT_ID=NEWUSDTID AND UNIT_ID=NEWUNITID AND UASD_ID!=UASDID)>0 THEN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT= 'CAN NOT UPDATE USDT_ID';
			END IF; 
		END IF;
		IF NEWURTDID IS NOT NULL THEN
			IF (SELECT COUNT(URTD_ID) FROM UNIT_ACCESS_STAMP_DETAILS WHERE URTD_ID=NEWURTDID AND UNIT_ID=NEWUNITID AND UASD_ID!=UASDID)>0 THEN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT= 'CAN NOT UPDATE URDT_ID';
			END IF;
		END IF;
		IF CHAR_LENGTH( NEWACCESS_CARD )>7 THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT= 'ACCESS CARD MUST BE MAXMIMUM 7 DIGITS ';
        END IF;
	END IF;
END;