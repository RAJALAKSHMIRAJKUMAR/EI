-- VERSION :0.9 TRACKER: 738, START DATE: 12-06-2014, END DATE: 12-06-2014, DESC: implementing trigger changes for not updating primary key in tickler_history   DONE BY: BHAVANI.R
--version:0.8 --sdate:05/06/2014 --edate:05/06/2014 --issue:529 --comment no:196 --desc:ADDED ULD_ID & TIMESTAMP OLD VALUE & NEW VALUE --done by:RL
--version:0.7 --sdate:07/04/2014 --edate:07/04/2014 --issue:797 --commentno:27 -- desc:REPLACED TABLENAME AND HEADERNAME --done by:SASIKALA.D
--version:0.6 --sdate:26/02/2014 --edate:26/02/2014 --issue:529 --commentno:132 --done by:RL
-- VERSION:0.5, TRACKER: 529, COMMENT:#105 ,START DATE: 10-02-2014, END DATE: 10-02-2014, DESC: added comma after one header value is completed, DONE BY: MANIKANDAN S
-- version:0.3 -- sdate:07/02/2014 -- edate:07/02/2014 -- issue:738 -- desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY -- doneby:RL
-- version 0.2 -- startdate:15/11/2013 -- endate:15/11/2013 -- desc:TRG FOR EXPENSE_DETAIL_DIGITAL_VOICE_UPDATE( MODIFIED TRIGGER NAME )-- doneby:dinesh -- issue no:529 comment no:#85
-- version 0.1 -- startdate:14/11/2013 -- endate:14/11/2013 -- desc:TRG FOR EXPENSE_DETAIL_DIGITAL_VOICE_UPDATE -- doneby:dinesh -- issue no:529 comment no:#85
DROP TRIGGER IF EXISTS TRG_BIZDTL_DIGITAL_VOICE_UPDATE;
CREATE TRIGGER TRG_BIZDTL_DIGITAL_VOICE_UPDATE  
AFTER UPDATE ON EXPENSE_DETAIL_DIGITAL_VOICE
FOR EACH ROW
BEGIN 
-- declaration for old_value and new_value to store it in TICKLER_HISTORY table
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF (OLD.UNIT_ID!= NEW.UNIT_ID) OR (OLD.ECN_ID IS NULL AND NEW.ECN_ID IS NOT NULL) OR (OLD.ECN_ID IS NOT NULL AND NEW.ECN_ID IS NULL) OR (OLD.ECN_ID!= NEW.ECN_ID) OR (OLD.EDDV_REC_VER!= NEW.EDDV_REC_VER) OR (OLD.EDDV_DIGITAL_VOICE_NO!= NEW.EDDV_DIGITAL_VOICE_NO) OR (OLD.EDDV_DIGITAL_ACCOUNT_NO!= NEW.EDDV_DIGITAL_ACCOUNT_NO) OR (OLD.EDDV_COMMENTS IS NULL AND NEW.EDDV_COMMENTS IS NOT NULL) OR (OLD.EDDV_COMMENTS IS NOT NULL AND NEW.EDDV_COMMENTS IS NULL) OR (OLD.EDDV_COMMENTS!= NEW.EDDV_COMMENTS) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EDDV_ID=', OLD.EDDV_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for UNIT_ID to store it in TICKLER_HISTORY table
IF (OLD.UNIT_ID!= NEW.UNIT_ID) THEN 
  SET OLD_VALUE = CONCAT(OLD_VALUE,'UNIT_ID=', OLD.UNIT_ID,','); 
  SET NEW_VALUE = CONCAT(NEW_VALUE,'UNIT_ID=', NEW.UNIT_ID,',');
END IF;

-- get the OLD VALUE & NEW_VALUE for ECN_ID to store it in TICKLER_HISTORY table
IF (OLD.ECN_ID IS NULL AND NEW.ECN_ID IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'ECN_ID=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'ECN_ID=',NEW.ECN_ID,',');
ELSEIF (OLD.ECN_ID IS NOT NULL AND NEW.ECN_ID IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'ECN_ID=',OLD.ECN_ID,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'ECN_ID=','<NULL>,');
ELSEIF (OLD.ECN_ID!= NEW.ECN_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECN_ID=', OLD.ECN_ID,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'ECN_ID=', NEW.ECN_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EDDV_REC_VER to store it in TICKLER_HISTORY table
IF (OLD.EDDV_REC_VER!= NEW.EDDV_REC_VER) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EDDV_REC_VER=', OLD.EDDV_REC_VER,','); 
END IF;
IF (OLD.EDDV_REC_VER!= NEW.EDDV_REC_VER) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EDDV_REC_VER=', NEW.EDDV_REC_VER,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EDDV_DIGITAL_VOICE_NO to store it in TICKLER_HISTORY table
IF (OLD.EDDV_DIGITAL_VOICE_NO!= NEW.EDDV_DIGITAL_VOICE_NO) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EDDV_DIGITAL_VOICE_NO=', OLD.EDDV_DIGITAL_VOICE_NO,','); 
END IF;
IF (OLD.EDDV_DIGITAL_VOICE_NO!= NEW.EDDV_DIGITAL_VOICE_NO) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EDDV_DIGITAL_VOICE_NO=', NEW.EDDV_DIGITAL_VOICE_NO,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EDDV_DIGITAL_ACCOUNT_NO to store it in TICKLER_HISTORY table
IF (OLD.EDDV_DIGITAL_ACCOUNT_NO!= NEW.EDDV_DIGITAL_ACCOUNT_NO) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EDDV_DIGITAL_ACCOUNT_NO=', OLD.EDDV_DIGITAL_ACCOUNT_NO,','); 
END IF;
IF (OLD.EDDV_DIGITAL_ACCOUNT_NO!= NEW.EDDV_DIGITAL_ACCOUNT_NO) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EDDV_DIGITAL_ACCOUNT_NO=', NEW.EDDV_DIGITAL_ACCOUNT_NO,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EDDV_COMMENTS to store it in TICKLER_HISTORY table
IF (OLD.EDDV_COMMENTS IS NULL AND NEW.EDDV_COMMENTS IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EDDV_COMMENTS=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EDDV_COMMENTS=',NEW.EDDV_COMMENTS,',');
ELSEIF (OLD.EDDV_COMMENTS IS NOT NULL AND NEW.EDDV_COMMENTS IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EDDV_COMMENTS=',OLD.EDDV_COMMENTS,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EDDV_COMMENTS=','<NULL>,');
ELSEIF (OLD.EDDV_COMMENTS!= NEW.EDDV_COMMENTS) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EDDV_COMMENTS=', OLD.EDDV_COMMENTS,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EDDV_COMMENTS=', NEW.EDDV_COMMENTS,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) OR (OLD.ECN_ID IS NULL AND NEW.ECN_ID IS NOT NULL) OR (OLD.ECN_ID IS NOT NULL AND NEW.ECN_ID IS NULL) OR (OLD.ECN_ID!= NEW.ECN_ID) OR (OLD.EDDV_REC_VER!= NEW.EDDV_REC_VER) OR (OLD.EDDV_DIGITAL_VOICE_NO!= NEW.EDDV_DIGITAL_VOICE_NO) OR (OLD.EDDV_DIGITAL_ACCOUNT_NO!= NEW.EDDV_DIGITAL_ACCOUNT_NO) OR (OLD.EDDV_COMMENTS IS NULL AND NEW.EDDV_COMMENTS IS NOT NULL) OR (OLD.EDDV_COMMENTS IS NOT NULL AND NEW.EDDV_COMMENTS IS NULL) OR (OLD.EDDV_COMMENTS!= NEW.EDDV_COMMENTS) THEN  
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;

IF (OLD.EDDV_TIMESTAMP!= NEW.EDDV_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EDDV_TIMESTAMP=', OLD.EDDV_TIMESTAMP,','); 
END IF;
END IF;
-- inserting old_values and new_values in the TICKLER_HISTORY table with their corresponding TTIP_ID in TICKLER_TABID_PROFILE
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF(OLD_VALUE != NEW_VALUE)THEN

    -- REMOVING COMMA(,) AT THE END OF OLD_VALUE & NEW_VALUE
     SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
     SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);

INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM EXPENSE_DETAIL_DIGITAL_VOICE WHERE EDDV_ID=NEW.EDDV_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_DETAIL_DIGITAL_VOICE'),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;
