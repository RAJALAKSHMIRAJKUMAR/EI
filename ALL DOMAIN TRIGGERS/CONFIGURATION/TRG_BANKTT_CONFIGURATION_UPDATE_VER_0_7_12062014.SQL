-- VERSION :0.7, TRACKER: 738, START DATE: 12-06-2014, END DATE: 12-06-2014, DESC: implementing trigger changes for not updating primary key in tickler_history   DONE BY: BHAVANI.R
-- VERSION :0.6, TRACKER: 529, START DATE: 05-06-2014, END DATE: 05-06-2014, DESC: ADDED USERSTAMP AND TIMESTAMP OLD_VALUE IN TICKLER_HISTORY TABLE   DONE BY: DHIVYA.A
-- version 0.5 -- TRACKER: 797, COMMENT:#28 ,START DATE: 07-04-2014, END DATE: 07-04-2014, DESC: REPLACED TABLENAME AND HEADERNAME DONE BY: SASIKALA.D
--version:0.4 --sdate:26/02/2014 --edate:26/02/2014 --issue:529 --commentno:132 --done by:RL
-- version 0.3-- VERSION :0.5, TRACKER: 529, COMMENT:#105 ,START DATE: 10-02-2014, END DATE: 10-02-2014, DESC: added comma after one header value is completed, DONE BY: MANIKANDAN S
-- sdate:07/02/2014 -- edate:07/02/2014 -- issue:738 -- commentno:#1 -- desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY DONE BY:DHIVYA
-- > version 0.1 -- >date:09/11/2013 -- > desc:trigger updation query for BANKTT_CONFIGURATION table  done by rl

-- after update on BANKTT_CONFIGURATION table this trigger will be executed
DROP TRIGGER IF EXISTS TRG_BANKTT_CONFIGURATION_UPDATE ;
CREATE TRIGGER TRG_BANKTT_CONFIGURATION_UPDATE   
AFTER UPDATE ON BANKTT_CONFIGURATION
FOR EACH ROW
BEGIN 
-- declaration for old_value and new_value to store it in TICKLER_HISTORY table
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
-- get the OLD VALUE & NEW_VALUE for BCN_ID to store it in TICKLER_HISTORY table
IF (OLD.CGN_ID!= NEW.CGN_ID) OR (OLD.BCN_DATA!= NEW.BCN_DATA) OR (OLD.BCN_INITIALIZE_FLAG IS NULL AND NEW.BCN_INITIALIZE_FLAG IS NOT NULL) OR (OLD.BCN_INITIALIZE_FLAG IS NOT NULL AND NEW.BCN_INITIALIZE_FLAG IS NULL) OR (OLD.BCN_INITIALIZE_FLAG!= NEW.BCN_INITIALIZE_FLAG) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'BCN_ID=', OLD.BCN_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for CGN_ID to store it in TICKLER_HISTORY table
IF (OLD.CGN_ID!= NEW.CGN_ID) THEN 
  SET OLD_VALUE = CONCAT(OLD_VALUE,'CGN_ID=', OLD.CGN_ID,','); 
  SET NEW_VALUE = CONCAT(NEW_VALUE,'CGN_ID=', NEW.CGN_ID,',');
END IF;

-- get the OLD VALUE & NEW_VALUE for BCN_DATA to store it in TICKLER_HISTORY table
IF (OLD.BCN_DATA!= NEW.BCN_DATA) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'BCN_DATA=', OLD.BCN_DATA,','); 
  SET NEW_VALUE = CONCAT(NEW_VALUE,'BCN_DATA=', NEW.BCN_DATA,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for BCN_INITIALIZE_FLAG to store it in TICKLER_HISTORY table
IF (OLD.BCN_INITIALIZE_FLAG IS NULL AND NEW.BCN_INITIALIZE_FLAG IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'BCN_INITIALIZE_FLAG=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'BCN_INITIALIZE_FLAG=',NEW.BCN_INITIALIZE_FLAG,',');
ELSEIF (OLD.BCN_INITIALIZE_FLAG IS NOT NULL AND NEW.BCN_INITIALIZE_FLAG IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'BCN_INITIALIZE_FLAG=',OLD.BCN_INITIALIZE_FLAG,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'BCN_INITIALIZE_FLAG=','<NULL>,');
ELSEIF (OLD.BCN_INITIALIZE_FLAG!= NEW.BCN_INITIALIZE_FLAG) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'BCN_INITIALIZE_FLAG=', OLD.BCN_INITIALIZE_FLAG,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'BCN_INITIALIZE_FLAG=', NEW.BCN_INITIALIZE_FLAG,','); 
END IF;
IF (OLD.CGN_ID!= NEW.CGN_ID) OR (OLD.BCN_DATA!= NEW.BCN_DATA) OR (OLD.BCN_INITIALIZE_FLAG IS NULL AND NEW.BCN_INITIALIZE_FLAG IS NOT NULL) OR (OLD.BCN_INITIALIZE_FLAG IS NOT NULL AND NEW.BCN_INITIALIZE_FLAG IS NULL) OR (OLD.BCN_INITIALIZE_FLAG!= NEW.BCN_INITIALIZE_FLAG) THEN  
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.BCN_TIMESTAMP!= NEW.BCN_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'BCN_TIMESTAMP=', OLD.BCN_TIMESTAMP,','); 
END IF;
END IF;
-- inserting old_values and new_values in the TICKLER_HISTORY table with their corresponding TTIP_ID in POST_AUDIT_PROFILE
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF (OLD_VALUE!=NEW_VALUE)THEN

-- REMOVING COMMA(,) AT THE END OF OLD_VALUE & NEW_VALUE
     SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
     SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);

INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM BANKTT_CONFIGURATION WHERE BCN_ID=NEW.BCN_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='BANKTT_CONFIGURATION'),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;

