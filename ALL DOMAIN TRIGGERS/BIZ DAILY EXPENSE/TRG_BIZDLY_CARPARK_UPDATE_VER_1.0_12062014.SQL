-- VERSION :1.0 TRACKER: 738, START DATE: 12-06-2014, END DATE: 12-06-2014, DESC: implementing trigger changes for not updating primary key in tickler_history   DONE BY: BHAVANI.R
--version:0.9 --sdate:05/06/2014 --edate:05/06/2014 --issue:529 --comment no:196 --desc:ADDED ULD_ID & TIMESTAMP OLD VALUE & NEW VALUE --done by:RL
--version:0.8 --sdate:07/04/2014 --edate:07/04/2014 --issue:797 --desc:REPLACED TABLENAME AND HEADERNAME --doneby:SASIKALA.D
--version:0.7 --sdate:26/02/2014 --edate:26/02/2014 --issue:529 --commentno:132 --done by:RL
--version:0.6 --sdate:10/02/2014 --edate:10/02/2014 --issue:529 --desc:add comma after 1 header value is completed --doneby:RL
--version:0.5 --sdate:08/02/2014 --edate:08/02/2014 --issue:738 --desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY --doneby:RL
--version 0.4 --sd:07/11/2013 --ed:07/11/2013 --issue:636 --commentno:47 --desc:trigger name changed by rl
--version 0.3-->start date:09/10/2013 end date:10/10/2013-->issueno:636 -->desc:changed variable name O as old_value and N as new_value and added comments
-->doneby:dhivya
--> version 0.2 -->date:02/08/2013 -->issueno:529 -->commentno:23 -->desc:added one condition for null fields
-->doneby:dhivya
--after update on EXPENSE_CARPARK table this trigger will be executed
DROP TRIGGER IF EXISTS TRG_BIZDLY_CARPARK_UPDATE;
CREATE TRIGGER TRG_BIZDLY_CARPARK_UPDATE 
AFTER UPDATE ON EXPENSE_CARPARK
FOR EACH ROW
BEGIN 
-- declaration for old_value and new_value to store it in TICKLER_HISTORY table
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF (OLD.EDCP_ID!= NEW.EDCP_ID) OR (OLD.ECP_INVOICE_DATE!= NEW.ECP_INVOICE_DATE) OR (OLD.ECP_FROM_PERIOD != NEW.ECP_FROM_PERIOD ) OR  (OLD.ECP_TO_PERIOD != NEW.ECP_TO_PERIOD ) OR (OLD.ECP_AMOUNT!= NEW.ECP_AMOUNT) OR (OLD.ECP_COMMENTS IS NULL AND NEW.ECP_COMMENTS IS NOT NULL) OR (OLD.ECP_COMMENTS IS NOT NULL AND NEW.ECP_COMMENTS IS NULL) OR (OLD.ECP_COMMENTS != NEW.ECP_COMMENTS) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'ECP_PARK_ID=', OLD.ECP_PARK_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for EDCP_ID to store it in TICKLER_HISTORY table
IF (OLD.EDCP_ID!= NEW.EDCP_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EDCP_ID=', OLD.EDCP_ID,','); 
END IF;
IF (OLD.EDCP_ID!= NEW.EDCP_ID) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EDCP_ID=', NEW.EDCP_ID,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for ECP_INVOICE_DATE to store it in TICKLER_HISTORY table
IF (OLD.ECP_INVOICE_DATE!= NEW.ECP_INVOICE_DATE) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECP_INVOICE_DATE=', OLD.ECP_INVOICE_DATE,','); 
END IF;
IF (OLD.ECP_INVOICE_DATE!= NEW.ECP_INVOICE_DATE) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'ECP_INVOICE_DATE=', NEW.ECP_INVOICE_DATE,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for ECP_FROM_PERIOD to store it in TICKLER_HISTORY table
IF (OLD.ECP_FROM_PERIOD!= NEW.ECP_FROM_PERIOD) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECP_FROM_PERIOD=', OLD.ECP_FROM_PERIOD,','); 
END IF;
IF (OLD.ECP_FROM_PERIOD!= NEW.ECP_FROM_PERIOD) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'ECP_FROM_PERIOD=', NEW.ECP_FROM_PERIOD,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for ECP_TO_PERIOD to store it in TICKLER_HISTORY table
IF (OLD.ECP_TO_PERIOD!= NEW.ECP_TO_PERIOD) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECP_TO_PERIOD=', OLD.ECP_TO_PERIOD,','); 
END IF;
IF (OLD.ECP_TO_PERIOD!= NEW.ECP_TO_PERIOD) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'ECP_TO_PERIOD=', NEW.ECP_TO_PERIOD,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for ECP_AMOUNT to store it in TICKLER_HISTORY table
IF (OLD.ECP_AMOUNT!= NEW.ECP_AMOUNT) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECP_AMOUNT=', OLD.ECP_AMOUNT,','); 
END IF;
IF (OLD.ECP_AMOUNT!= NEW.ECP_AMOUNT) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'ECP_AMOUNT=', NEW.ECP_AMOUNT,','); 
END IF;
-- get the OLD VALUE & NEW_VALUE for ECP_COMMENTS to store it in TICKLER_HISTORY table
IF (OLD.ECP_COMMENTS IS NULL AND NEW.ECP_COMMENTS IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'ECP_COMMENTS=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'ECP_COMMENTS=',NEW.ECP_COMMENTS,',');
ELSEIF(OLD.ECP_COMMENTS IS NOT NULL AND NEW.ECP_COMMENTS IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'ECP_COMMENTS=',OLD.ECP_COMMENTS,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'ECP_COMMENTS=','<NULL>,');
ELSEIF (OLD.ECP_COMMENTS!= NEW.ECP_COMMENTS) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECP_COMMENTS=', OLD.ECP_COMMENTS,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'ECP_COMMENTS=', NEW.ECP_COMMENTS,','); 
END IF;
IF (OLD.EDCP_ID!= NEW.EDCP_ID) OR (OLD.ECP_INVOICE_DATE!= NEW.ECP_INVOICE_DATE) OR (OLD.ECP_FROM_PERIOD != NEW.ECP_FROM_PERIOD ) OR  (OLD.ECP_TO_PERIOD != NEW.ECP_TO_PERIOD ) OR (OLD.ECP_AMOUNT!= NEW.ECP_AMOUNT) OR (OLD.ECP_COMMENTS IS NULL AND NEW.ECP_COMMENTS IS NOT NULL) OR (OLD.ECP_COMMENTS IS NOT NULL AND NEW.ECP_COMMENTS IS NULL) OR (OLD.ECP_COMMENTS != NEW.ECP_COMMENTS) THEN  
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.ECP_TIMESTAMP!= NEW.ECP_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ECP_TIMESTAMP=', OLD.ECP_TIMESTAMP,','); 
END IF;
END IF;
-- inserting old_values and new_values in the TICKLER_HISTORY table with their corresponding POSTTAP_ID in TICKLER_TABID_PROFILE
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF(OLD_VALUE != NEW_VALUE)THEN
SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM EXPENSE_CARPARK WHERE ECP_PARK_ID=NEW.ECP_PARK_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_CARPARK'),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;
