-- VERSION :1.0 TRACKER: 738, START DATE: 12-06-2014, END DATE: 12-06-2014, DESC: implementing trigger changes for not updating primary key in tickler_history   DONE BY: BHAVANI.R
--version:0.9 --sdate:05/06/2014 --edate:05/06/2014 --issue:529 --comment no:196 --desc:ADDED ULD_ID & TIMESTAMP OLD VALUE & NEW VALUE --done by:RL
--version:0.8 --sdate:07/04/2014 --edate:07/04/2014 --issue:797--desc:REPLACED TABLE NAME AND HEADER NAME --doneby:SASIKALA.D_
--version:0.7 --sdate:26/02/2014 --edate:26/02/2014 --issue:529 --commentno:132 --done by:RL
--version:0.6 --sdate:10/02/2014 --edate:10/02/2014 --issue:529 --desc:add comma after 1 header value is completed --doneby:RL
--version:0.5 --sdate:08/02/2014 --edate:08/02/2014 --issue:738 --desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY --doneby:RL
--version 0.4 --sd:07/11/2013 --ed:07/11/2013 --issue:636 --commentno:47 --desc:trigger name changed by rl
--version 0.3-->startdate:09/10/2013 end date:10/10/2013 -->issueno:636 -->desc:changed variable name O as old_value and N as new_value and added comments
-->doneby:dhivya
--> version 0.2 -->date:02/08/2013 -->issueno:529 -->commentno:23 -->desc:added one condition for null fields
-->doneby:dhivya

DROP TRIGGER IF EXISTS TRG_BIZDLY_HOUSEKEEPING_PAYMENT_UPDATE;
CREATE TRIGGER TRG_BIZDLY_HOUSEKEEPING_PAYMENT_UPDATE  
AFTER UPDATE ON EXPENSE_HOUSEKEEPING_PAYMENT 
FOR EACH ROW
BEGIN 
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF (OLD.UNIT_ID IS NULL AND NEW.UNIT_ID IS NOT NULL) OR (OLD.UNIT_ID IS NOT NULL AND NEW.UNIT_ID IS NULL) OR (OLD.UNIT_ID != NEW.UNIT_ID ) OR  (OLD.EHKU_ID IS NULL AND NEW.EHKU_ID IS NOT NULL) OR (OLD.EHKU_ID IS NOT NULL AND NEW.EHKU_ID IS NULL) OR (OLD.EHKU_ID!= NEW.EHKU_ID) OR (OLD.EHKP_FOR_PERIOD!= NEW.EHKP_FOR_PERIOD) OR (OLD.EHKP_PAID_DATE!= NEW.EHKP_PAID_DATE) OR (OLD.EHKP_AMOUNT!= NEW.EHKP_AMOUNT) OR (OLD.EHKP_COMMENTS IS NULL AND NEW.EHKP_COMMENTS IS NOT NULL) OR (OLD.EHKP_COMMENTS IS NOT NULL AND NEW.EHKP_COMMENTS IS NULL) OR (OLD.EHKP_COMMENTS != NEW.EHKP_COMMENTS) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EHKP_ID=', OLD.EHKP_ID,','); 
END IF;
IF (OLD.UNIT_ID IS NULL AND NEW.UNIT_ID IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'UNIT_ID=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'UNIT_ID=',NEW.UNIT_ID,',');
ELSEIF(OLD.UNIT_ID IS NOT NULL AND NEW.UNIT_ID IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'UNIT_ID=',OLD.UNIT_ID,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'UNIT_ID=','<NULL>,');
ELSEIF (OLD.UNIT_ID!= NEW.UNIT_ID) THEN 
SET OLD_VALUE = CONCAT(OLD_VALUE,'UNIT_ID=', OLD.UNIT_ID,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'UNIT_ID=', NEW.UNIT_ID,','); 
END IF;
IF (OLD.EHKU_ID IS NULL AND NEW.EHKU_ID IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EHKU_ID=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EHKU_ID=',NEW.EHKU_ID,',');
ELSEIF(OLD.EHKU_ID IS NOT NULL AND NEW.EHKU_ID IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EHKU_ID=',OLD.EHKU_ID,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EHKU_ID=','<NULL>,');
ELSEIF (OLD.EHKU_ID!= NEW.EHKU_ID) THEN 
SET OLD_VALUE = CONCAT(OLD_VALUE,'EHKU_ID=', OLD.EHKU_ID,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EHKU_ID=', NEW.EHKU_ID,','); 
END IF;
IF (OLD.EHKP_FOR_PERIOD!= NEW.EHKP_FOR_PERIOD) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EHKP_FOR_PERIOD =', OLD.EHKP_FOR_PERIOD ,','); 
END IF;
IF (OLD.EHKP_FOR_PERIOD!= NEW.EHKP_FOR_PERIOD) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EHKP_FOR_PERIOD =', NEW.EHKP_FOR_PERIOD ,','); 
END IF;
IF (OLD.EHKP_PAID_DATE!= NEW.EHKP_PAID_DATE) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EHKP_PAID_DATE  =', OLD.EHKP_PAID_DATE ,','); 
END IF;
IF (OLD.EHKP_PAID_DATE != NEW.EHKP_PAID_DATE) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EHKP_PAID_DATE  =', NEW.EHKP_PAID_DATE ,','); 
END IF;
IF (OLD.EHKP_AMOUNT!= NEW.EHKP_AMOUNT) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EHKP_AMOUNT=', OLD.EHKP_AMOUNT,','); 
END IF;
IF (OLD.EHKP_AMOUNT!= NEW.EHKP_AMOUNT) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EHKP_AMOUNT=', NEW.EHKP_AMOUNT,','); 
END IF;
IF (OLD.EHKP_COMMENTS IS NULL AND NEW.EHKP_COMMENTS IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EHKP_COMMENTS=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EHKP_COMMENTS=',NEW.EHKP_COMMENTS,',');
ELSEIF(OLD.EHKP_COMMENTS IS NOT NULL AND NEW.EHKP_COMMENTS IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EHKP_COMMENTS=',OLD.EHKP_COMMENTS,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EHKP_COMMENTS=','<NULL>,');
ELSEIF (OLD.EHKP_COMMENTS!= NEW.EHKP_COMMENTS) THEN 
SET OLD_VALUE = CONCAT(OLD_VALUE,'EHKP_COMMENTS=', OLD.EHKP_COMMENTS,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EHKP_COMMENTS=', NEW.EHKP_COMMENTS,','); 
END IF;
IF (OLD.UNIT_ID IS NULL AND NEW.UNIT_ID IS NOT NULL) OR (OLD.UNIT_ID IS NOT NULL AND NEW.UNIT_ID IS NULL) OR (OLD.UNIT_ID != NEW.UNIT_ID ) OR  (OLD.EHKU_ID IS NULL AND NEW.EHKU_ID IS NOT NULL) OR (OLD.EHKU_ID IS NOT NULL AND NEW.EHKU_ID IS NULL) OR (OLD.EHKU_ID!= NEW.EHKU_ID) OR (OLD.EHKP_FOR_PERIOD!= NEW.EHKP_FOR_PERIOD) OR (OLD.EHKP_PAID_DATE!= NEW.EHKP_PAID_DATE) OR (OLD.EHKP_AMOUNT!= NEW.EHKP_AMOUNT) OR (OLD.EHKP_COMMENTS IS NULL AND NEW.EHKP_COMMENTS IS NOT NULL) OR (OLD.EHKP_COMMENTS IS NOT NULL AND NEW.EHKP_COMMENTS IS NULL) OR (OLD.EHKP_COMMENTS != NEW.EHKP_COMMENTS) THEN  

IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.EHKP_TIMESTAMP!= NEW.EHKP_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EHKP_TIMESTAMP=', OLD.EHKP_TIMESTAMP,','); 
END IF;
END IF;

IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF(OLD_VALUE != NEW_VALUE)THEN
SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE EHKP_ID=NEW.EHKP_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_HOUSEKEEPING_PAYMENT '),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;