-- VER0.1 SDATE:10/09/2014 EDATE:10/09/2014 ISSUE:837 CMT 19 DESC:SEQUENCE ID UPDATION PATCH FOR OCBC DOMAIN DOMAIN DONE BY:DHIVYA


DROP PROCEDURE IF EXISTS SP_OCBC_AUTO_INCREMENT_SEQUENCE_UPDATE;
CREATE PROCEDURE SP_OCBC_AUTO_INCREMENT_SEQUENCE_UPDATE(IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
-- VARIABLE DECLARATION
DECLARE MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE OBRID INTEGER;
DECLARE SEQID INTEGER;
DECLARE FAILURE_ECN_DATA TEXT;
DECLARE FAIL_ECNDATA TEXT;
DECLARE SUCCESS_ECNDATA TEXT;
DECLARE FAILURE_ECNDATA TEXT;
DECLARE SUCCESSECNDATA TEXT;
DECLARE FAILUREECNDATA TEXT;
DECLARE PATCHFILENAME VARCHAR(100);
DECLARE PHSTATUS TINYINT;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
	ROLLBACK;
	-- INSERT QUERY FOR PATCH HISTORY IF EXECUTION FAILED
	INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (9,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
	SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	SET AUTOCOMMIT=0;
	SET FOREIGN_KEY_CHECKS = 0;
	-- ERROR MSG GETTING QUERY
	SET SUCCESS_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);
	SET FAILURE_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
		-- SETTING MINID & MAXID FOR OCBC_BANK_RECORDS TABLE
		SET MINID=(SELECT MAX(OBR_ID) FROM OCBC_BANK_RECORDS WHERE OBR_VALUE_DATE<'2014-07-16');
		SET MAXID=(MINID+(SELECT COUNT(*) FROM OCBC_BANK_RECORDS WHERE OBR_ID>MINID));
			WHILE MINID<=MAXID DO
				SET OBRID=(SELECT OBR_ID FROM OCBC_BANK_RECORDS WHERE OBR_ID=MINID);
				SET SEQID=(SELECT MIN(OBR_ID) FROM OCBC_BANK_RECORDS WHERE OBR_ID>MINID);
				IF OBRID IS NULL OR OBRID=' ' THEN
					-- UPDATE QUERY IF THE SEQUENCE IS MISSING
					UPDATE OCBC_BANK_RECORDS SET OBR_ID=MINID WHERE OBR_ID=SEQID;
				END IF;	
				SET MINID=MINID+1;
			END WHILE;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (9,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		SET FOREIGN_KEY_CHECKS = 1;
	END IF;
COMMIT;
END;
CALL SP_OCBC_AUTO_INCREMENT_SEQUENCE_UPDATE(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);