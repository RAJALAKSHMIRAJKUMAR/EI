-- version:0.1 --sdate:30/07/2014 --edate:30/07/2014 --issue:832 --commentno#9 --desc:update query for patch history table --done by:RL

DROP PROCEDURE IF EXISTS SP_PATCH_HISTORY_UPDATE;
CREATE PROCEDURE SP_PATCH_HISTORY_UPDATE(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN

-- VARIABLE DECLARATION
	DECLARE FAILURE_ECN_DATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
    DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	
-- QUERY FOR ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (3,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	
	SET FOREIGN_KEY_CHECKS = 0;
	
-- QUERY FOR GET ERROR MESSGAE FROM ERROR_MESSAGE_CONFIGURATION TABLE
	SET SUCCESS_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);
	SET FAILURE_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);
	
-- QUERY FOR REPLACE [FILENAME]
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	
-- QUERY FOR CHECK THE PASSING FILE NAME EXISTS IN PATCH_HISTORY TABLE
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	
-- QUERY FOR CHECK THE PASSING FILE NAME NOT EXISTS IN PATCH_HISTORY TABLE
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN

		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_PATCH_HISTORY_INSERT_VER_0.1_831_40_23072014.SQL' WHERE PH_ID = 1;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_CONFIGURATION_INSERT_VER_0.1_303_451_22072014.SQL' WHERE PH_ID = 2;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_LOGIN_TERMINATE_SAVE_VER_0.6_465_39_24072014.SQL' WHERE PH_ID = 3;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_DROP_PROD_TEMP_TABLE_VER_0.2_830_11_23072014.SQL' WHERE PH_ID = 4;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_CUSTOMER_UNTERMINATED_NON_ACTIVE_UPDATE_VER_1.0_345_746_22072014.SQL' WHERE PH_ID = 5;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_CUSTOMER_AUTO_TERMINATION_VER_1.1_345_746_22072014.SQL' WHERE PH_ID = 6;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_CUSTOMER_UNCANCEL_INSERT_VER_1.2_345_748_21072014.SQL' WHERE PH_ID = 7;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_EMAIL_INSERT_VER_0.1_303_452_22072014.SQL' WHERE PH_ID = 8;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_BANK_TT_TEMP_TABLE_VER_0.8_674_28_24072014.SQL' WHERE PH_ID = 9;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_BANK_TT_UPDATE_VER_1.1_807_19_17072014.SQL' WHERE PH_ID = 10;
		UPDATE PATCH_HISTORY SET PH_FILE_NAME = 'SP_CONFIGURATION_ERROR_MESSAGE_INSERT_VER_0.2_303_457_458_25072014.SQL' WHERE PH_ID = 11;
		
-- QUERY FOR INSERT VALUES IN PATCH_HISTORY
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (10,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		
		SET FOREIGN_KEY_CHECKS = 1;
	
	END IF;
	
	COMMIT;
END;

CALL SP_PATCH_HISTORY_UPDATE(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);