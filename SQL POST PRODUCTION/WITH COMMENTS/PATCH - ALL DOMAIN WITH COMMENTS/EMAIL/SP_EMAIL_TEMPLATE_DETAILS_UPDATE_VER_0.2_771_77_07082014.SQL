-- version:0.2 --sdate:07/08/2014 --edate:07/08/2014 --issue:771 --desc:update the body msg for ETD_ID = 14 (PLZ FIND BELOW THE TEMPORARY TABLES LIST,  WHICH HAVE BEEN DELETED, DATED ON OR BEFORE [CURRENTDATE]) --comment no#77 --done by:RL
-- version:0.1 --sdate:06/08/2014 --edate:06/08/2014 --issue:771 --desc:email template update query  --comment no#65 --done by:RL

DROP PROCEDURE IF EXISTS SP_EMAIL_TEMPLATE_DETAILS_UPDATE;
CREATE PROCEDURE SP_EMAIL_TEMPLATE_DETAILS_UPDATE(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
-- VARIABLE DECLARATION
    DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	DECLARE FAILURE_ECN_DATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
-- QUERY FOR ROLLBACK COMMAND
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (3,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
-- QUERY FOR GET ERROR MESSGAE FROM ERROR_MESSAGE_CONFIGURATION TABLE
	SET SUCCESS_ECNDATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);	
	SET FAILURE_ECNDATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);
-- QUERY FOR REPLACE [FILENAME]
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
-- QUERY FOR CHECK THE PASSING FILE NAME EXISTS IN PATCH_HISTORY TABLE
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
-- QUERY FOR CHECK THE PASSING FILE NAME NOT EXISTS IN PATCH_HISTORY TABLE
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
		UPDATE EMAIL_TEMPLATE_DETAILS SET ETD_EMAIL_BODY = 'PLZ FIND BELOW THE TEMPORARY TABLES LIST,  WHICH HAVE BEEN DELETED, DATED ON OR BEFORE [CURRENTDATE]' WHERE ETD_ID = 14;
-- QUERY FOR INSERT VALUES IN PATCH_HISTORY
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (3,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
	END IF;
	COMMIT;
END;
CALL SP_EMAIL_TEMPLATE_DETAILS_UPDATE(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);