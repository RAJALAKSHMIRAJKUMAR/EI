-- VER1.8 ISSUE 836 COMMENT:52 STARTDATE:23/09/2014 ENDDATE:23/09/2014 DESC:INVENTORY CARD CHECKING ERRORMSG GET FROM DB DONE BY:DHIVYA.A

-- VER1.7 ISSUE 835 COMMENT:#1 DESC:IMPLEMENTED AUTOCOMMIT DONE BY:DHIVYA.A

DROP PROCEDURE IF EXISTS SP_CUSTOMER_CARDASSIGN_INSERT;
CREATE PROCEDURE SP_CUSTOMER_CARDASSIGN_INSERT(
IN CA_CUSTOMER_ID INTEGER,
IN CA_UNIT_NO INTEGER(4),
IN CA_REC_VER INTEGER,
IN CA_CARD_NO TEXT,
IN CA_VALID_FROM DATE,
IN CA_GUEST_CARD TEXT,
IN CA_STARTDATE DATE,
IN CA_ENDDATE DATE,
IN CA_COMMENTS TEXT,
IN USERSTAMP VARCHAR(50),
OUT FLAG TEXT
)
BEGIN   
	DECLARE MINDROPID INTEGER;
    DECLARE MAXDROPID INTEGER;
    DECLARE PRETERMINATE_DATE DATE;
    DECLARE RECHECKIN_RECVER INTEGER;
    DECLARE RECHECKIN_NULL_RECVER INTEGER;
    DECLARE STARTDATE DATE;
    DECLARE TERMINATE_RECVER INTEGER;
    DECLARE ACTIVE_RECVER INTEGER;
    DECLARE FUTURE_RECVER INTEGER;
    DECLARE TERMINATE_NULL_RECVER INTEGER;
    DECLARE ACTIVE_NULL_RECVER INTEGER;
    DECLARE FUTURE_NULL_RECVER INTEGER;
    DECLARE TEMP_ACCESS_CARD TEXT;
    DECLARE OLD_ACCESS_CARD_NO VARCHAR(7);
    DECLARE NEW_ACCESS_CARD_NO VARCHAR(7);
    DECLARE ACCESS_POSITION INTEGER;
    DECLARE ACCESS_LOCATION INTEGER;
    DECLARE ACCESS_LENGTH INTEGER;
    DECLARE GUEST_ACCESS_LENGTH INTEGER;
    DECLARE GUEST_FLAG CHAR(1);
    DECLARE MIN_REC_VER INTEGER;
    DECLARE MAX_REC_VER INTEGER;
    DECLARE MINID INTEGER;
    DECLARE MAXID INTEGER;
    DECLARE ENDDATE DATE;
    DECLARE USERSTAMP_ID INTEGER;
    DECLARE MINTERMID INTEGER;
    DECLARE MAXTERMID INTEGER;
    DECLARE MINACCESSID INTEGER;
    DECLARE MAXACCESSID INTEGER;
    DECLARE UASDID INTEGER;
    DECLARE CPDID INTEGER;
    DECLARE OLDCOMMENTS TEXT;
    DECLARE NEWCOMMENTS TEXT;
    DECLARE SAMEUNITMINID INTEGER;
    DECLARE SAMEUNITMAXID INTEGER;
    DECLARE CURRENT_REC_VER INTEGER;
    DECLARE ACCESSOLDCARD INTEGER;
    DECLARE ACCESSNEWCARD INTEGER;
    DECLARE TEMP_SAME_CUSTOMER_SWAPPING  TEXT; 
	DECLARE TEMPSAMECUSTSWAPPING TEXT;
	DECLARE TEMPCUSTOMERACCESSCARD TEXT;
	DECLARE TEMP_CUSTOMER_ACCESS_CARD TEXT;
	DECLARE TEMPCUSTOMERRECVER TEXT;
	DECLARE TEMP_CUSTOMER_RECVER TEXT;
	DECLARE TEMPCTDID TEXT;
	DECLARE TEMP_CTD_ID TEXT;
	DECLARE TEMPCTD TEXT;
	DECLARE TEMP_CTD TEXT;
	DECLARE MAXRECVER INTEGER;
	DECLARE PTD_DATE DATE;
	DECLARE MAX_END_DATE DATE;
    DECLARE COUNT_VALUE INTEGER;
    DECLARE SAMEUNITFLAG INTEGER;
	DECLARE TEMPTABLEDROPPING TEXT;
	DECLARE TEMP_TABLE_DROPPING TEXT;
	DECLARE TAB_NAME TEXT;	
	DECLARE EMPUASDID INTEGER;
    DECLARE ECDID INTEGER;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
     BEGIN    
    ROLLBACK;
	SET FLAG=0;
		SET @SETMINDROPID=(SELECT CONCAT('SELECT MIN(ID)INTO @MIN_DROP FROM ',TEMP_TABLE_DROPPING));
		PREPARE SETMINDROPIDSTMT FROM @SETMINDROPID;
		EXECUTE SETMINDROPIDSTMT;
		SET MINDROPID=@MIN_DROP ;
        SET @SETMAXDROPID=(SELECT CONCAT('SELECT MAX(ID)INTO @MAX_DROP FROM ',TEMP_TABLE_DROPPING));
		PREPARE SETMAXDROPIDSTMT FROM @SETMAXDROPID;
		EXECUTE SETMAXDROPIDSTMT;
		SET MAXDROPID=@MAX_DROP;
        WHILE MINDROPID<=MAXDROPID DO
		SET @SET_TAB_NAME=(SELECT CONCAT('SELECT TABLE_NAME INTO @TABNAME FROM ',TEMP_TABLE_DROPPING,' WHERE ID=',MINDROPID));
		PREPARE SET_TAB_NAME_STMT FROM @SET_TAB_NAME;
		EXECUTE SET_TAB_NAME_STMT;
		SET TAB_NAME=@TABNAME;
        SET @DROP_QUERY_STMT=(SELECT CONCAT('DROP TABLE IF EXISTS ',TAB_NAME));
        PREPARE DROP_STMT FROM @DROP_QUERY_STMT;
        EXECUTE DROP_STMT;
		SET MINDROPID=MINDROPID+1; 
		END WHILE;
		SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_TABLE_DROPPING));
		PREPARE DROPQUERYSTMT FROM @DROPQUERY;
		EXECUTE DROPQUERYSTMT;
		IF TEMP_SAME_CUSTOMER_SWAPPING IS NOT NULL THEN
     SET @DROP_TEMPSAMECUSTSWAPPING=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_SAME_CUSTOMER_SWAPPING));
    PREPARE DROP_TEMPSAMECUSTSWAPPING_STMT FROM @DROP_TEMPSAMECUSTSWAPPING;
    EXECUTE DROP_TEMPSAMECUSTSWAPPING_STMT;
	END IF;
	IF TEMP_CUSTOMER_ACCESS_CARD IS NOT NULL THEN
	 SET @DROP_TEMPCUSTOMERACCESSCARD=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER_ACCESS_CARD));
	PREPARE DROP_TEMPCUSTOMERACCESSCARD_STMT FROM @DROP_TEMPCUSTOMERACCESSCARD;
    EXECUTE DROP_TEMPCUSTOMERACCESSCARD_STMT;
    END IF; 	
	IF TEMP_CUSTOMER_RECVER IS NOT NULL THEN
	SET @DROP_TEMPCUSTOMERRECVER=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER_RECVER));
	PREPARE DROP_TEMPCUSTOMERRECVER_STMT FROM @DROP_TEMPCUSTOMERRECVER;
    EXECUTE DROP_TEMPCUSTOMERRECVER_STMT;
	END IF;  
	END;    
	SET AUTOCOMMIT=0;
    START TRANSACTION;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
    SET USERSTAMP_ID = (SELECT @ULDID);	
	SET TEMPTABLEDROPPING=(SELECT CONCAT('TEMP_TABLE_DROPPING_',SYSDATE()));
	SET TEMPTABLEDROPPING=(SELECT REPLACE(TEMPTABLEDROPPING,' ',''));
	SET TEMPTABLEDROPPING=(SELECT REPLACE(TEMPTABLEDROPPING,'-',''));
	SET TEMPTABLEDROPPING=(SELECT REPLACE(TEMPTABLEDROPPING,':',''));
	SET TEMP_TABLE_DROPPING=(SELECT CONCAT(TEMPTABLEDROPPING,'_',USERSTAMP_ID)); 
	SET @CREATE_TEMPTABLEDROPPING=(SELECT CONCAT('CREATE TABLE ',TEMP_TABLE_DROPPING,'(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,TABLE_NAME TEXT)'));
	PREPARE CREATE_TEMPTABLEDROPPING_STMT FROM @CREATE_TEMPTABLEDROPPING;
	EXECUTE CREATE_TEMPTABLEDROPPING_STMT;
	 CALL SP_CARD_ASSIGN_INVENTORY_CARD_CHECKING(CA_CUSTOMER_ID,CA_UNIT_NO,CA_REC_VER,CA_CARD_NO,USERSTAMP,TEMP_TABLE_DROPPING,@CHECK_FLAG); 
	SET FLAG=(SELECT @CHECK_FLAG); 
    IF CA_COMMENTS='' THEN
        SET CA_COMMENTS=NULL;
    END IF;
    IF CA_CARD_NO='' THEN
        SET CA_CARD_NO=NULL;
    END IF;
    IF CA_GUEST_CARD='' THEN
        SET CA_GUEST_CARD=NULL;
    END IF;
    IF FLAG IS NULL THEN    
    SET FLAG=0;
     SET RECHECKIN_RECVER=(SELECT MAX(CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID AND CED_RECHECKIN='X');
	SET TEMPSAMECUSTSWAPPING=(SELECT CONCAT('TEMP_SAME_CUSTOMER_SWAPPING_',SYSDATE()));
	SET TEMPSAMECUSTSWAPPING=(SELECT REPLACE(TEMPSAMECUSTSWAPPING,' ',''));
	SET TEMPSAMECUSTSWAPPING=(SELECT REPLACE(TEMPSAMECUSTSWAPPING,'-',''));
	SET TEMPSAMECUSTSWAPPING=(SELECT REPLACE(TEMPSAMECUSTSWAPPING,':',''));
	SET TEMP_SAME_CUSTOMER_SWAPPING=(SELECT CONCAT(TEMPSAMECUSTSWAPPING,'_',USERSTAMP_ID)); 
    SET @CREATE_TEMPSAMECUSTSWAPPING=(SELECT CONCAT('CREATE TABLE ',TEMP_SAME_CUSTOMER_SWAPPING,'(CLP_ID    INTEGER,CUSTOMER_ID INTEGER,CED_REC_VER INTEGER,UASD_ID INTEGER,CLP_STARTDATE DATE,CLP_ENDDATE DATE,CLP_PRETERMINATE_DATE DATE,CLP_TERMINATE CHAR(1),ULD_ID INTEGER,TIMESTAMP TIMESTAMP)'));
	PREPARE CREATE_TEMPSAMECUSTSWAPPING_STMT FROM @CREATE_TEMPSAMECUSTSWAPPING;
	EXECUTE CREATE_TEMPSAMECUSTSWAPPING_STMT;
	SET @INSERT_TEMP_TABLE_DROPPING=(SELECT CONCAT('INSERT INTO ',TEMP_TABLE_DROPPING,'(TABLE_NAME)VALUES(','"',TEMP_SAME_CUSTOMER_SWAPPING,'"',')'));
	PREPARE INSERT_TEMP_TABLE_DROPPING_STMT FROM @INSERT_TEMP_TABLE_DROPPING;
	EXECUTE INSERT_TEMP_TABLE_DROPPING_STMT;
    IF RECHECKIN_RECVER IS NOT NULL THEN
        SET @INSERT_TEMPSAMECUSTSWAPPING=(SELECT CONCAT('INSERT INTO ',TEMP_SAME_CUSTOMER_SWAPPING,' SELECT CLP_ID,CUSTOMER_ID,CED_REC_VER,UASD_ID,CLP_STARTDATE,CLP_ENDDATE,CLP_PRETERMINATE_DATE,CLP_TERMINATE,ULD_ID,CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=',CA_CUSTOMER_ID,' AND CED_REC_VER>=',RECHECKIN_RECVER,' AND  CLP_TERMINATE IS NULL AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE())'));
		PREPARE INSERT_TEMPSAMECUSTSWAPPING_STMT FROM @INSERT_TEMPSAMECUSTSWAPPING;
        EXECUTE INSERT_TEMPSAMECUSTSWAPPING_STMT;		
    ELSE
        SET @INSERT_TEMPSAMECUSTSWAPPING=(SELECT CONCAT('INSERT INTO ',TEMP_SAME_CUSTOMER_SWAPPING,' SELECT CLP_ID,CUSTOMER_ID,CED_REC_VER,UASD_ID,CLP_STARTDATE,CLP_ENDDATE,CLP_PRETERMINATE_DATE,CLP_TERMINATE,ULD_ID,CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=',CA_CUSTOMER_ID,' AND CLP_TERMINATE IS NULL AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE())'));
		PREPARE INSERT_TEMPSAMECUSTSWAPPING_STMT FROM @INSERT_TEMPSAMECUSTSWAPPING;
        EXECUTE INSERT_TEMPSAMECUSTSWAPPING_STMT;
    END IF; 
     SET TEMPCUSTOMERACCESSCARD=(SELECT CONCAT('TEMP_CUSTOMER_ACCESS_CARD_',SYSDATE()));
     SET TEMPCUSTOMERACCESSCARD=(SELECT REPLACE(TEMPCUSTOMERACCESSCARD,' ',''));
     SET TEMPCUSTOMERACCESSCARD=(SELECT REPLACE(TEMPCUSTOMERACCESSCARD,'-',''));
     SET TEMPCUSTOMERACCESSCARD=(SELECT REPLACE(TEMPCUSTOMERACCESSCARD,':',''));
     SET TEMP_CUSTOMER_ACCESS_CARD=(SELECT CONCAT(TEMPCUSTOMERACCESSCARD,'_',USERSTAMP_ID)); 	
    SET @CREATE_TEMPCUSTOMERACCESSCARD=(SELECT CONCAT('CREATE TABLE ',TEMP_CUSTOMER_ACCESS_CARD,'(CACD_ID INTEGER,CUSTOMER_ID INTEGER,UASD_ID INTEGER,ULD_ID INTEGER,TIMESTAMP TIMESTAMP)'));
	PREPARE CREATE_TEMPCUSTOMERACCESSCARD_STMT FROM @CREATE_TEMPCUSTOMERACCESSCARD;
    EXECUTE CREATE_TEMPCUSTOMERACCESSCARD_STMT;
	SET @INSERT_TEMP_TABLE_DROPPING=(SELECT CONCAT('INSERT INTO ',TEMP_TABLE_DROPPING,'(TABLE_NAME)VALUES(','"',TEMP_CUSTOMER_ACCESS_CARD,'"',')'));
	PREPARE INSERT_TEMP_TABLE_DROPPING_STMT FROM @INSERT_TEMP_TABLE_DROPPING;
	EXECUTE INSERT_TEMP_TABLE_DROPPING_STMT;
    SET @INSERT_TEMPCUSTOMERACCESSCARD=(SELECT CONCAT('INSERT INTO ',TEMP_CUSTOMER_ACCESS_CARD,' SELECT CACD_ID,CUSTOMER_ID,UASD_ID ,ULD_ID,CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=',CA_CUSTOMER_ID,' AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL'));
	PREPARE INSERT_TEMPCUSTOMERACCESSCARD_STMT FROM @INSERT_TEMPCUSTOMERACCESSCARD;
    EXECUTE INSERT_TEMPCUSTOMERACCESSCARD_STMT; 
    SET MAXRECVER=(SELECT MAX(CED_REC_VER) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID);
    SET PTD_DATE=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID AND CED_REC_VER=MAXRECVER AND CLP_GUEST_CARD IS NULL);
    IF PTD_DATE IS NOT NULL THEN
      SET MAX_END_DATE=PTD_DATE;
	 ELSE
    SET MAX_END_DATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID AND CED_REC_VER=MAXRECVER AND CLP_GUEST_CARD IS NULL);
	END IF;
	IF MAX_END_DATE>=CURDATE() THEN	
    SET SAMEUNITMINID=(SELECT MIN(ced.CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS ced, CUSTOMER_LP_DETAILS ctd WHERE ced.CUSTOMER_ID=CA_CUSTOMER_ID AND ced.CED_PRETERMINATE IS NULL AND ced.CED_REC_VER>=CA_REC_VER and ced.CUSTOMER_ID=ctd.CUSTOMER_ID and ced.CED_REC_VER=ctd.CED_REC_VER AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE()));
   ELSE
    SET SAMEUNITFLAG=1;
    SET SAMEUNITMINID=(SELECT MIN(ced.CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS ced, CUSTOMER_LP_DETAILS ctd WHERE ced.CUSTOMER_ID=CA_CUSTOMER_ID  AND ced.CED_PRETERMINATE IS NULL AND ced.CED_REC_VER>=CA_REC_VER and ced.CUSTOMER_ID=ctd.CUSTOMER_ID and ced.CED_REC_VER=ctd.CED_REC_VER AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE()));
   END IF;
   IF(SAMEUNITFLAG=1 AND SAMEUNITMINID IS NULL)THEN
   SET SAMEUNITMINID=(SELECT MAX(ced.CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS ced, CUSTOMER_LP_DETAILS ctd WHERE ced.CUSTOMER_ID=CA_CUSTOMER_ID  AND ced.CED_REC_VER>=CA_REC_VER and ced.CUSTOMER_ID=ctd.CUSTOMER_ID and ced.CED_REC_VER=ctd.CED_REC_VER AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE()));   
   END IF;
   SET SAMEUNITMAXID=(SELECT MIN(CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID AND CED_PRETERMINATE IS NULL AND CED_REC_VER<CA_REC_VER);
    IF CA_CARD_NO IS NOT NULL AND CA_GUEST_CARD IS NOT NULL AND CA_VALID_FROM IS NOT NULL AND CA_STARTDATE IS NOT NULL AND CA_ENDDATE IS NOT NULL THEN
        SET TEMP_ACCESS_CARD = CA_CARD_NO;
        SET ACCESS_LENGTH=1;
        loop_label:  LOOP
            SET ACCESS_POSITION=(SELECT LOCATE(',', TEMP_ACCESS_CARD,ACCESS_LENGTH));
            IF ACCESS_POSITION<=0 THEN
                SET OLD_ACCESS_CARD_NO=TEMP_ACCESS_CARD;
            ELSE
                SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_LENGTH,ACCESS_POSITION-1) INTO OLD_ACCESS_CARD_NO;
                SET TEMP_ACCESS_CARD=(SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_POSITION+1));
            END IF;
            IF(TRIM(OLD_ACCESS_CARD_NO)='') THEN
                SET OLD_ACCESS_CARD_NO=NULL;
            END IF;
            SET ACCESS_POSITION=(SELECT LOCATE(',', TEMP_ACCESS_CARD,ACCESS_LENGTH));
            IF ACCESS_POSITION<=0 THEN
                SET NEW_ACCESS_CARD_NO=TEMP_ACCESS_CARD;
            ELSE
                SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_LENGTH,ACCESS_POSITION-1) INTO NEW_ACCESS_CARD_NO;
                SET TEMP_ACCESS_CARD=(SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_POSITION+1));
            END IF;
            IF(TRIM(NEW_ACCESS_CARD_NO)='') THEN
                SET NEW_ACCESS_CARD_NO=NULL;
            END IF;
            IF EXISTS(SELECT UASD_ID FROM EMPLOYEE_CARD_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=NEW_ACCESS_CARD_NO))THEN
			SET EMPUASDID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=NEW_ACCESS_CARD_NO);
            SET ECDID=(SELECT ECD_ID FROM EMPLOYEE_CARD_DETAILS WHERE UASD_ID=EMPUASDID);
            CALL SP_CUSTOMER_ROW_DELETION(40,ECDID,USERSTAMP_ID);            
			END IF;
            SET ACCESS_LOCATION=(SELECT LOCATE(NEW_ACCESS_CARD_NO, CA_GUEST_CARD));
            SET GUEST_ACCESS_LENGTH=(SELECT LENGTH(NEW_ACCESS_CARD_NO));
            SET GUEST_FLAG=(SELECT SUBSTRING(CA_GUEST_CARD,ACCESS_LOCATION+GUEST_ACCESS_LENGTH+1,1));
            SET GUEST_FLAG=TRIM(GUEST_FLAG);
            IF GUEST_FLAG='' THEN
                SET GUEST_FLAG=NULL;
            END IF;
            SET ACCESSOLDCARD=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=OLD_ACCESS_CARD_NO AND UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=CA_UNIT_NO));
            SET ACCESSNEWCARD=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=NEW_ACCESS_CARD_NO AND UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=CA_UNIT_NO));
			IF(ACCESSOLDCARD IS NOT NULL)THEN
			SET TEMPCUSTOMERRECVER=(SELECT CONCAT('TEMP_CUSTOMER_RECVER_',SYSDATE()));
            SET TEMPCUSTOMERRECVER=(SELECT REPLACE(TEMPCUSTOMERRECVER,' ',''));
            SET TEMPCUSTOMERRECVER=(SELECT REPLACE(TEMPCUSTOMERRECVER,'-',''));
            SET TEMPCUSTOMERRECVER=(SELECT REPLACE(TEMPCUSTOMERRECVER,':',''));
            SET TEMP_CUSTOMER_RECVER=(SELECT CONCAT(TEMPCUSTOMERRECVER,'_',ACCESSOLDCARD,'_',USERSTAMP_ID)); 	
            SET @CREATE_TEMPCUSTOMERRECVER=(SELECT CONCAT('CREATE TABLE ',TEMP_CUSTOMER_RECVER,'(CLP_ID     INTEGER,CUSTOMER_ID INTEGER,CED_REC_VER INTEGER,UASD_ID INTEGER,CLP_STARTDATE DATE,CLP_ENDDATE DATE,CLP_PRETERMINATE_DATE DATE,CLP_TERMINATE CHAR(1),ULD_ID INTEGER,TIMESTAMP TIMESTAMP)'));
			PREPARE CREATE_TEMPCUSTOMERRECVER_STMT FROM @CREATE_TEMPCUSTOMERRECVER;
            EXECUTE CREATE_TEMPCUSTOMERRECVER_STMT;
			SET @INSERT_TEMP_TABLE_DROPPING=(SELECT CONCAT('INSERT INTO ',TEMP_TABLE_DROPPING,'(TABLE_NAME)VALUES(','"',TEMP_CUSTOMER_RECVER,'"',')'));
			PREPARE INSERT_TEMP_TABLE_DROPPING_STMT FROM @INSERT_TEMP_TABLE_DROPPING;
			EXECUTE INSERT_TEMP_TABLE_DROPPING_STMT;
           IF RECHECKIN_RECVER IS NOT NULL THEN
                SET @INSERT_TEMPCUSTOMERRECVER=(SELECT CONCAT('INSERT INTO ',TEMP_CUSTOMER_RECVER,' SELECT CLP_ID,CUSTOMER_ID,CED_REC_VER,UASD_ID,CLP_STARTDATE,CLP_ENDDATE,CLP_PRETERMINATE_DATE,CLP_TERMINATE,ULD_ID,CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=',CA_CUSTOMER_ID,' AND UASD_ID=',ACCESSOLDCARD,' AND CED_REC_VER!=',CA_REC_VER,' AND CED_REC_VER>=',RECHECKIN_RECVER,'  AND CLP_TERMINATE IS NULL'));
				PREPARE INSERT_TEMPCUSTOMERRECVER_STMT FROM @INSERT_TEMPCUSTOMERRECVER;
                EXECUTE INSERT_TEMPCUSTOMERRECVER_STMT;
            ELSE
			    SET @INSERT_TEMPCUSTOMERRECVER=(SELECT CONCAT('INSERT INTO ',TEMP_CUSTOMER_RECVER,' SELECT CLP_ID,CUSTOMER_ID,CED_REC_VER,UASD_ID,CLP_STARTDATE,CLP_ENDDATE,CLP_PRETERMINATE_DATE,CLP_TERMINATE,ULD_ID,CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=',CA_CUSTOMER_ID,' AND UASD_ID=',ACCESSOLDCARD,' AND CED_REC_VER!=',CA_REC_VER,'  AND CLP_TERMINATE IS NULL'));
				PREPARE INSERT_TEMPCUSTOMERRECVER_STMT FROM @INSERT_TEMPCUSTOMERRECVER;
                EXECUTE INSERT_TEMPCUSTOMERRECVER_STMT;                
           END IF;
		        SET @TEMPTERMINATE_RECVER=NULL;
                SET @TERMINATERECVER=(SELECT CONCAT('SELECT MAX(CED_REC_VER) INTO @TEMPTERMINATE_RECVER FROM ',TEMP_CUSTOMER_RECVER,' WHERE UASD_ID=',ACCESSOLDCARD,' AND CED_REC_VER<',CA_REC_VER,' AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE<CURDATE(), CLP_ENDDATE<CURDATE()) AND CLP_TERMINATE IS NULL'));
				PREPARE TERMINATERECVER_STMT FROM @TERMINATERECVER;
                EXECUTE TERMINATERECVER_STMT;
				SET TERMINATE_RECVER=@TEMPTERMINATE_RECVER;
                SET @TEMPACTIVE_RECVER=NULL;				
                SET @ACTIVERECVER=(SELECT CONCAT('SELECT MIN(CED_REC_VER) INTO @TEMPACTIVE_RECVER FROM ',TEMP_CUSTOMER_RECVER,' WHERE UASD_ID=',ACCESSOLDCARD,' AND CED_REC_VER<',CA_REC_VER,' AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE()) AND CLP_TERMINATE IS NULL'));
				PREPARE ACTIVERECVER_STMT FROM @ACTIVERECVER;
                EXECUTE ACTIVERECVER_STMT;
                SET ACTIVE_RECVER=@TEMPACTIVE_RECVER;				
                SET @TEMPFUTURE_RECVER=NULL;				
                SET @FUTURERECVER=(SELECT CONCAT('SELECT MAX(CED_REC_VER) INTO @TEMPFUTURE_RECVER FROM ',TEMP_CUSTOMER_RECVER,' WHERE UASD_ID=',ACCESSOLDCARD,' AND CED_REC_VER>',CA_REC_VER,' AND IF (CLP_PRETERMINATE_DATE IS NOT NULL,CLP_PRETERMINATE_DATE>CURDATE(), CLP_ENDDATE>CURDATE()) AND CLP_TERMINATE IS NULL'));  
                PREPARE FUTURERECVER_STMT FROM @FUTURERECVER;
                EXECUTE FUTURERECVER_STMT;
				SET FUTURE_RECVER=@TEMPFUTURE_RECVER;
           END IF; 
		   IF (OLD_ACCESS_CARD_NO IS NULL AND NEW_ACCESS_CARD_NO IS NOT NULL)THEN 
            CALL SP_SUB_CARD_ASSIGN(CA_CUSTOMER_ID,CA_UNIT_NO,CA_REC_VER,CA_CARD_NO,OLD_ACCESS_CARD_NO,NEW_ACCESS_CARD_NO,GUEST_FLAG,SAMEUNITMINID,USERSTAMP_ID,CA_VALID_FROM,CA_STARTDATE,CA_ENDDATE,CA_COMMENTS,CA_GUEST_CARD,ACCESSNEWCARD,@CARD_FLAG); 
			SET FLAG=(SELECT @CARD_FLAG);
			END IF;			 
            IF (OLD_ACCESS_CARD_NO IS NOT NULL AND NEW_ACCESS_CARD_NO IS NOT NULL AND NEW_ACCESS_CARD_NO!=OLD_ACCESS_CARD_NO)THEN
			CALL SP_CUSTOMER_CARD_ASSIGN_SWAPPING(CA_CUSTOMER_ID,OLD_ACCESS_CARD_NO,NEW_ACCESS_CARD_NO,ACTIVE_RECVER,TERMINATE_RECVER,FUTURE_RECVER,TEMP_SAME_CUSTOMER_SWAPPING,CA_UNIT_NO,TEMP_CUSTOMER_RECVER,TEMP_CUSTOMER_ACCESS_CARD,ACCESSOLDCARD,ACCESSNEWCARD,CA_REC_VER,COUNT_VALUE,GUEST_FLAG,USERSTAMP_ID,SAMEUNITMINID,TEMP_TABLE_DROPPING,@SWAP_FLAG);
			SET FLAG=@SWAP_FLAG;
			END IF;  
            IF (OLD_ACCESS_CARD_NO IS NOT NULL AND NEW_ACCESS_CARD_NO IS NULL) THEN  
			 CALL SP_GUEST_NULL_CARD_ASSIGN(CA_CUSTOMER_ID,TERMINATE_RECVER,CA_REC_VER,ACTIVE_RECVER,TEMP_CUSTOMER_RECVER,USERSTAMP_ID,OLD_ACCESS_CARD_NO,NEW_ACCESS_CARD_NO,USERSTAMP,SAMEUNITMINID,TEMP_TABLE_DROPPING,@GUEST_ASSIGNFLAG);
			 SET FLAG=(SELECT @GUEST_ASSIGNFLAG);
			 END IF; 
		  IF ACCESS_POSITION<=0 THEN
        LEAVE  loop_label;
    END IF;
    END LOOP;
    END IF;
     IF CA_CARD_NO IS NULL AND CA_GUEST_CARD IS NULL THEN
        CALL SP_CUSTOMER_NULL_CARDASSIGN_INSERT(CA_CUSTOMER_ID,CA_UNIT_NO,CA_REC_VER,CA_CARD_NO,CA_VALID_FROM,CA_GUEST_CARD,CA_STARTDATE,CA_ENDDATE,CA_COMMENTS,SAMEUNITMINID,USERSTAMP,TEMP_TABLE_DROPPING,@FLAG); 
    END IF;
	 IF EXISTS(SELECT CUSTOMER_ID FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=(SELECT CUSTOMER_ID FROM CUSTOMER WHERE CUSTOMER_ID=CA_CUSTOMER_ID)) THEN
        SET OLDCOMMENTS=(SELECT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID);
        SET NEWCOMMENTS=CA_COMMENTS;
        IF OLDCOMMENTS IS NULL OR OLDCOMMENTS=' ' THEN
        SET OLDCOMMENTS='NULL';
        END IF;
        IF OLDCOMMENTS!=NEWCOMMENTS THEN
        SET CPDID=(SELECT CPD_ID FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CA_CUSTOMER_ID);
        SET @TICK_OLD_VALUE=(SELECT CONCAT('CPD_ID=',CPDID,',CPD_COMMENTS=',OLDCOMMENTS));
        SET @TICK_NEW_VALUE=(SELECT CONCAT('CPD_COMMENTS=',NEWCOMMENTS));
        INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES((SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='CUSTOMER_PERSONAL_DETAILS'),@TICK_OLD_VALUE,@TICK_NEW_VALUE,USERSTAMP_ID,CA_CUSTOMER_ID);
        END IF;
        UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=CA_COMMENTS WHERE CUSTOMER_ID=CA_CUSTOMER_ID;
        SET FLAG=1;
    END IF; 
    END IF;
        SET @SETMINDROPID=(SELECT CONCAT('SELECT MIN(ID)INTO @MIN_DROP FROM ',TEMP_TABLE_DROPPING));
		PREPARE SETMINDROPIDSTMT FROM @SETMINDROPID;
		EXECUTE SETMINDROPIDSTMT;
		SET MINDROPID=@MIN_DROP ;
        SET @SETMAXDROPID=(SELECT CONCAT('SELECT MAX(ID)INTO @MAX_DROP FROM ',TEMP_TABLE_DROPPING));
		PREPARE SETMAXDROPIDSTMT FROM @SETMAXDROPID;
		EXECUTE SETMAXDROPIDSTMT;
		SET MAXDROPID=@MAX_DROP;
        WHILE MINDROPID<=MAXDROPID DO
		SET @SET_TAB_NAME=(SELECT CONCAT('SELECT TABLE_NAME INTO @TABNAME FROM ',TEMP_TABLE_DROPPING,' WHERE ID=',MINDROPID));
		PREPARE SET_TAB_NAME_STMT FROM @SET_TAB_NAME;
		EXECUTE SET_TAB_NAME_STMT;
		SET TAB_NAME=@TABNAME;
        SET @DROP_QUERY_STMT=(SELECT CONCAT('DROP TABLE IF EXISTS ',TAB_NAME));
        PREPARE DROP_STMT FROM @DROP_QUERY_STMT;
        EXECUTE DROP_STMT;
		SET MINDROPID=MINDROPID+1; 
        END WHILE;
		SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_TABLE_DROPPING));
		PREPARE DROPQUERYSTMT FROM @DROPQUERY;
		EXECUTE DROPQUERYSTMT;
    IF TEMP_SAME_CUSTOMER_SWAPPING IS NOT NULL THEN	
    SET @DROP_TEMPSAMECUSTSWAPPING=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_SAME_CUSTOMER_SWAPPING));
    PREPARE DROP_TEMPSAMECUSTSWAPPING_STMT FROM @DROP_TEMPSAMECUSTSWAPPING;
    EXECUTE DROP_TEMPSAMECUSTSWAPPING_STMT;
	END IF;
	IF TEMP_CUSTOMER_ACCESS_CARD IS NOT NULL THEN
	 SET @DROP_TEMPCUSTOMERACCESSCARD=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER_ACCESS_CARD));
	PREPARE DROP_TEMPCUSTOMERACCESSCARD_STMT FROM @DROP_TEMPCUSTOMERACCESSCARD;
    EXECUTE DROP_TEMPCUSTOMERACCESSCARD_STMT; 
    END IF;   
	IF TEMP_CUSTOMER_RECVER IS NOT NULL THEN
	SET @DROP_TEMPCUSTOMERRECVER=(SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_CUSTOMER_RECVER));
	PREPARE DROP_TEMPCUSTOMERRECVER_STMT FROM @DROP_TEMPCUSTOMERRECVER;
    EXECUTE DROP_TEMPCUSTOMERRECVER_STMT;
	END IF;
    COMMIT;
END;
