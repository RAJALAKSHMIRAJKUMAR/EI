-- VERSION:1.3 --SDATE:22/09/2014 --EDATE:22/9/2014 --ISSUE:836 --COMMENT NO#52 --DESC:GETTING ERR MSG FROM CONFIG DB --DONE BY:RL
-- version 1.2 --sadte:02/08/2014 --edate:02/08/2014 --issue:835,705 --commentno:3,29 --desc:implementing auto commit N CHECKING given card is inventroy r not --done by : RL
-->VERSION 1.1-->START DATE:28/02/2014 END DATE:28/02/2014-->ISSUENO:754-->ADD DECLEAR USERSTAMP VALUES--> BY BALAJI
-->version 1.0 -->start date:27/02/2014 end date:27/02/2014 -->issueno:754  -->description:REPLACE USERSTAMP VARCAHR TO USERSTAMP INTEGER -->BY BALAJI.R
-->version 0.9 -->start date:26/02/2014 end date:26/02/2014 -->issueno:750  -->description:UPDATING USERSTAMP TO ULD_ID -->created by:SAFI.M
--VERSION 0.8 --startdate:18/02/2014 --endate :18/02/2014 --doneby:Bhavani --comment no:33 --desc:Implementation of flag for success message in SP_EMPDTL_INSERT. 
--VERSION 0.7 -startdate -29/11/2013 - endate :29/11/2013 - doneby:dinesh --commant no:665 --desc:SP_EMPDTL_INERT --> checking error for EMP_ID can not be null, when same record insert error occcure, clear error using order by and limit condition .......
--VERSION 0.6 -startdate -27/11/2013 - endate :28/11/2013 - doneby:dinesh --commant no:661 --desc:SP_EMPDTL_INERT --> SET FLAG VARIABLE AND INSERT CARD_NO NULL AND IF NOT EXISTS UASD_ID  FROM EMP_CARD_DETAILS ..
--version 0.5 --startdate-26/11/2013 --endate :26/11/2013 --doneby:dinesh --commant no:661 --desc:SP FOR SP_EMPDTL_INSERT -> CHECKING ERROR for dummy record no insertion..
--version 0.4 --startdate-23/11/2013 --endate :25/11/2013 --doneby:dinesh --commant no:661 --desc:SP FOR SP_EMPDTL_INSERT -> checking error for EMPLOYEE_CARD_DETAILS INSERTION (EMP_ID CAN NOT BE NULL)..ASSIGN FLAG VARIABLE(CARD) and INSERT MULTIPLE USERACCESSCARD_ID AND EMPID FROM EMPLOYEE_CARD_DETAILS AND EMPLOYEE_DETAILS
--version 0.3 --startdate:21/11/2013 --endate :21/11/2013  --doneby:dinesh -->issueno:535 commentno:#101 --desc:SP FOR  SP_EMPDTL_INSERT -> INSERT MULTIPLE USERACCESSCARD_ID AND EMPID FROM EMPLOYEE_CARD_DETAILS AND EMPLOYEE_DETAILS   
--version 0.2 --startdate:20/11/2013 --endate :20/11/2013  --doneby:dinesh -->issueno:253 commentno:#111 --desc:SP FOR SP_EMPDTL_INSERT changed DATA TYPE (INTEGER (7)) FOR CARD_NO
--version 0.1 --startdate:13/11/2013 --endate:13/11/2013 --desc:SP FOR SP_EMPDTL_INSERT --doneby:dinesh
DROP PROCEDURE IF EXISTS SP_EMPDTL_INSERT;
CREATE PROCEDURE SP_EMPDTL_INSERT(
IN FIRST_NAME CHAR(30),
IN LAST_NAME CHAR(30),
IN DESIGNATION TEXT,
IN MOBILE  VARCHAR(10),
IN EMAIL VARCHAR(40),
IN COMMENTS TEXT,
IN USERSTAMP varchar(50),
IN CARD_NO TEXT,
OUT EMP_SUCCESSFLAG TEXT)
BEGIN
    
	DECLARE TEMP_ACCESS_CARD TEXT;
    DECLARE ACCESS_CARD_NO INTEGER(7);
    DECLARE ACCESS_POSITION INTEGER;
    DECLARE ACCESS_LOCATION INTEGER;
    DECLARE ACCESS_LENGTH INTEGER;
    DECLARE TEMP_ACCESS_CARD_FLAG TEXT;
    DECLARE ACCESS_CARD_FLAG INTEGER(7);
    DECLARE ACCESS_POSITION_FLAG INTEGER;
    DECLARE ACCESS_LOCATION_FLAG INTEGER;
    DECLARE ACCESS_LENGTH_FLAG INTEGER;
    DECLARE USERSTAMP_ID INTEGER(2);
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE CHECK_CARDNO TEXT;
	DECLARE ACTIVECARDCOUNT INTEGER;
	DECLARE MINID INTEGER;
	DECLARE MAXID INTEGER;
	DECLARE EMPLOYEE_LENGTH INTEGER;
	DECLARE LOCATION INTEGER;
	DECLARE ACTIVECARDNO INTEGER(7);
	DECLARE SUCCESS_ECNDATA TEXT;

	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		ROLLBACK;
		IF(CHECK_CARDNO IS NOT NULL)THEN
			SET @CHECK_CARDNO_DROPQUERY = (SELECT CONCAT('DROP TABLE IF EXISTS ',CHECK_CARDNO,''));
			PREPARE CHECK_CARDNO_DROPQUERY_STMT FROM @CHECK_CARDNO_DROPQUERY;
			EXECUTE CHECK_CARDNO_DROPQUERY_STMT;
		END IF;
	END;
	
	SET AUTOCOMMIT = 0;
	START TRANSACTION;
	
	SET EMP_SUCCESSFLAG='';

	SET ACTIVECARDCOUNT = 0;
	
	
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
	
-- set null for non mandatory fields
	IF EMAIL = '' THEN
		SET EMAIL=NULL;
	END IF;
	IF COMMENTS = '' THEN
		SET COMMENTS=NULL;
	END IF;
	IF CARD_NO='' THEN
		SET CARD_NO=NULL;
	END IF;

	SET SUCCESS_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 571);

-- QUERY FOR SET DATETIME & ULDID VALUES
	SET SYSDATEANDTIME = (SELECT SYSDATE());
	SET SYSDATEANDTIME = (SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME = (SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME = (SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID = (SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));	
	SET CHECK_CARDNO = (SELECT CONCAT('TEMP_CHECK_EMP_CARDNO','_',SYSDATEANDULDID));
	
-- QUERY FOR CREATE TEMP_CHECK_CARDNO TABLE
	SET @TEMP_CARD_NO = CARD_NO;
	
	IF(CARD_NO IS NOT NULL) THEN
	
		SET @CHECK_CARDNO_CREATEQUERY = (SELECT CONCAT('CREATE TABLE ',CHECK_CARDNO,'(
		ID INTEGER AUTO_INCREMENT,
		CARDNO INTEGER(7),
		UASDID INTEGER NOT NULL,
		ACTIVE CHAR(1),
		LOST CHAR(1),
		INVENTORY CHAR(1),
		PRIMARY KEY(ID))'));
		PREPARE CHECK_CARDNO_CREATEQUERY_STMT FROM @CHECK_CARDNO_CREATEQUERY;
		EXECUTE CHECK_CARDNO_CREATEQUERY_STMT;
		
		MAIN_LOOP : LOOP
		
-- QUERY FOR SET PASSING CARD NO VALUES IN TEMP VARIABLE

			CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_CARD_NO,@VALUE,@REMAINING_STRING);
			SELECT @VALUE INTO ACCESS_CARD_NO;
			SELECT @REMAINING_STRING INTO @TEMP_CARD_NO;
			
			SET @CARDID = (SELECT CONCAT('SELECT UASD_ID  INTO @UASDID_VALUE FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=',ACCESS_CARD_NO,''));
			PREPARE CARDID_STMT FROM @CARDID;
			EXECUTE CARDID_STMT;

			SET @ACTIVE_FLAG = (SELECT CONCAT('SELECT UASD_ACCESS_ACTIVE  INTO @ACTIVE_VALUE FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=',ACCESS_CARD_NO,''));
			PREPARE ACTIVE_FLAG_STMT FROM @ACTIVE_FLAG;
			EXECUTE ACTIVE_FLAG_STMT;
			
			SET @LOST_FLAG = (SELECT CONCAT('SELECT UASD_ACCESS_LOST INTO @LOST_VALUE FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=',ACCESS_CARD_NO,''));
			PREPARE LOST_FLAG_STMT FROM @LOST_FLAG;
			EXECUTE LOST_FLAG_STMT;
			
			SET @INVENTORY_FLAG = (SELECT CONCAT('SELECT UASD_ACCESS_INVENTORY INTO @INVENTORY_VALUE FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=',ACCESS_CARD_NO,''));
			PREPARE INVENTORY_FLAG_STMT FROM @INVENTORY_FLAG;
			EXECUTE INVENTORY_FLAG_STMT;
			
-- QUERY FOR INSERTING VALUES IN TEMP_CHECK_CARDNO
			SET @CHECK_CARDNO_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',CHECK_CARDNO,'(CARDNO,UASDID,ACTIVE,LOST,INVENTORY)VALUES
			(',ACCESS_CARD_NO,',@UASDID_VALUE,@ACTIVE_VALUE,@LOST_VALUE,@INVENTORY_VALUE)'));
			PREPARE CHECK_CARDNO_INSERTQUERY_STMT FROM @CHECK_CARDNO_INSERTQUERY;
			EXECUTE CHECK_CARDNO_INSERTQUERY_STMT;

			IF @TEMP_CARD_NO IS NULL THEN
				LEAVE  MAIN_LOOP;
			END IF;
			
			SET @UASDID_VALUE = NULL;
			SET @ACTIVE_VALUE = NULL;
			SET @LOST_VALUE = NULL;
			SET @INVENTORY_VALUE = NULL;
	
		END LOOP;
		
		SET @ACTIVECARD_COUNT = (SELECT CONCAT('SELECT COUNT(*) INTO @ACTIVE_CARD_COUNT FROM ',CHECK_CARDNO,' WHERE ACTIVE IS NOT NULL OR LOST IS NOT NULL'));
		PREPARE ACTIVECARD_COUNT_STMT FROM @ACTIVECARD_COUNT;
		EXECUTE ACTIVECARD_COUNT_STMT;
		SET ACTIVECARDCOUNT = @ACTIVE_CARD_COUNT;
		
	END IF;
	
	IF(ACTIVECARDCOUNT!=0) THEN
	
		SET @TEMP_MINID = (SELECT CONCAT('SELECT MIN(ID) INTO @TEMPMINID FROM ',CHECK_CARDNO));
		PREPARE TEMP_MINID_STMT FROM @TEMP_MINID;
		EXECUTE TEMP_MINID_STMT;
		SET MINID=@TEMPMINID;
			
		SET @TEMP_MAXID =(SELECT CONCAT('SELECT MAX(ID) INTO @TEMPMAXID FROM ',CHECK_CARDNO));
		PREPARE TEMP_MAXID_STMT FROM @TEMP_MAXID;
		EXECUTE TEMP_MAXID_STMT;
		SET MAXID=@TEMPMAXID;
			
		WHILE (MINID <= MAXID) DO
		
			SET @ACTIVE_CARDNO = (SELECT CONCAT('SELECT CARDNO INTO @ACTIVE_CARD_NO FROM ',CHECK_CARDNO,' WHERE ID =',MINID,' AND (ACTIVE IS NOT NULL OR LOST IS NOT NULL)'));
			PREPARE ACTIVE_CARD_NO_STMT FROM @ACTIVE_CARDNO;
			EXECUTE ACTIVE_CARD_NO_STMT;
			SET ACTIVECARDNO = @ACTIVE_CARD_NO;
			
			IF (ACTIVECARDNO IS NOT NULL)THEN
		
				SET EMP_SUCCESSFLAG = (SELECT CONCAT(EMP_SUCCESSFLAG,',',ACTIVECARDNO));
			
			END IF;
		
			SET MINID = MINID+1;
			
			SET @ACTIVE_CARD_NO = NULL;
			
		END WHILE;
		
		SET LOCATION=(SELECT LOCATE(',', EMP_SUCCESSFLAG,EMPLOYEE_LENGTH));
		
		SET EMP_SUCCESSFLAG=(SELECT SUBSTRING(EMP_SUCCESSFLAG,LOCATION+2));
			
		SET EMP_SUCCESSFLAG = (SELECT REPLACE(SUCCESS_ECNDATA,'[CARD NO]',EMP_SUCCESSFLAG));

	END IF;
	
	IF (FIRST_NAME IS NULL OR LAST_NAME IS NULL OR DESIGNATION IS NULL OR MOBILE IS NULL OR USERSTAMP_ID IS NULL ) THEN
	
		SET EMP_SUCCESSFLAG = 0;
		
	END IF;
	
	IF (ACTIVECARDCOUNT = 0)THEN
-- insert query for EMPLOYEE_DETAILS when passing CARD_NO=null
		IF (FIRST_NAME IS NOT NULL AND LAST_NAME IS NOT NULL AND DESIGNATION IS NOT NULL AND MOBILE IS NOT NULL AND USERSTAMP_ID IS NOT NULL ) THEN
			
			IF CARD_NO IS NULL THEN
				
				INSERT INTO EMPLOYEE_DETAILS(EMP_FIRST_NAME,EMP_LAST_NAME,ECN_ID,EMP_MOBILE,EMP_EMAIL,EMP_COMMENTS,ULD_ID)
				VALUES (FIRST_NAME,LAST_NAME,(SELECT ECN_ID FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=DESIGNATION AND CGN_ID=35),MOBILE,EMAIL,COMMENTS,USERSTAMP_ID);
				SET EMP_SUCCESSFLAG=1;

			END IF;

-- insert query for EMPLOYEE_DETAILS and EMPLOYEE_CARD_DETAILS , CARD_NO=NOTNULL AND exiting UASD_ID FROM EMPLOYEE_CARD_DETAILS
		
			IF(CARD_NO IS NOT NULL) THEN

				SET TEMP_ACCESS_CARD=CARD_NO;
				SET ACCESS_LENGTH=1;
			
				loop_label:  LOOP
				
					SET ACCESS_POSITION=(SELECT LOCATE(',', TEMP_ACCESS_CARD,ACCESS_LENGTH));
					IF ACCESS_POSITION<=0 THEN
						SET ACCESS_CARD_NO=TEMP_ACCESS_CARD;
					ELSE
						SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_LENGTH,ACCESS_POSITION-1) INTO ACCESS_CARD_NO;
						SET TEMP_ACCESS_CARD=(SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_POSITION+1));
					END IF;
				
					IF EXISTS (SELECT UASD_ID FROM EMPLOYEE_CARD_DETAILS WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=ACCESS_CARD_NO)) THEN
						SET EMP_SUCCESSFLAG = 1;
					END IF;

					IF ACCESS_POSITION<=0 THEN
						LEAVE  loop_label;
					END IF;
				END LOOP;

			END IF;
	 
			IF EMP_SUCCESSFLAG!=1 THEN
				
				INSERT INTO EMPLOYEE_DETAILS (EMP_FIRST_NAME,EMP_LAST_NAME,ECN_ID,EMP_MOBILE,EMP_EMAIL,EMP_COMMENTS,ULD_ID) VALUES (FIRST_NAME,LAST_NAME,(SELECT ECN_ID
				FROM EXPENSE_CONFIGURATION WHERE ECN_DATA=DESIGNATION AND CGN_ID=35),MOBILE,EMAIL,COMMENTS,USERSTAMP_ID);
				SET TEMP_ACCESS_CARD_FLAG =CARD_NO;
				SET ACCESS_LENGTH_FLAG=1;
				
				loop_label:  LOOP
					
					SET ACCESS_POSITION_FLAG=(SELECT LOCATE(',', TEMP_ACCESS_CARD_FLAG,ACCESS_LENGTH_FLAG));
					IF ACCESS_POSITION_FLAG<=0 THEN
						SET ACCESS_CARD_FLAG=TEMP_ACCESS_CARD_FLAG;
					ELSE
						SELECT SUBSTRING(TEMP_ACCESS_CARD_FLAG,ACCESS_LENGTH_FLAG,ACCESS_POSITION_FLAG-1) INTO ACCESS_CARD_FLAG;
						SET TEMP_ACCESS_CARD_FLAG=(SELECT SUBSTRING(TEMP_ACCESS_CARD_FLAG,ACCESS_POSITION_FLAG+1));
					END IF;
						 
					INSERT INTO EMPLOYEE_CARD_DETAILS (EMP_ID,UASD_ID) VALUES ((SELECT EMP_ID FROM EMPLOYEE_DETAILS ORDER BY EMP_ID DESC LIMIT 1),( SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=ACCESS_CARD_FLAG));
					SET EMP_SUCCESSFLAG=1;
				
					IF ACCESS_POSITION_FLAG<=0 THEN
						LEAVE  loop_label;
					END IF;
				
				END LOOP;    
			
			END IF;
		
		END IF;
	
	END IF;

	IF(CHECK_CARDNO IS NOT NULL)THEN
		SET @CHECK_CARDNO_DROPQUERY = (SELECT CONCAT('DROP TABLE IF EXISTS ',CHECK_CARDNO,''));
		PREPARE CHECK_CARDNO_DROPQUERY_STMT FROM @CHECK_CARDNO_DROPQUERY;
		EXECUTE CHECK_CARDNO_DROPQUERY_STMT;
	END IF;
		
	COMMIT;
END;
