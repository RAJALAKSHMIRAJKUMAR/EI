-- version 1.3 issue:837 -- COMMENTNO#95  --SDATE:15/11/2014 DESC:REMOVED EP_ID  --doneby:RL
-- version 1.2 issue:831 commentno#108 added one new condition for EP_ID --sdate:11/08/2014 --doneby:RL
-- VERSION 1.1 TRACKER NO: 738, COMMENT:24 ,START DATE: 13-06-2014, END DATE: 13-06-2014,IMPLEMENTING TRIGGER CHANGES FOR NOT UPDATING ULD_ID AND TIMESTAMP IN TICKLER_HISTORY, DONE BY: SASIKALA
-- VERSION 1.0 TRACKER NO: 738, COMMENT:18 ,START DATE: 12-06-2014, END DATE: 12-06-2014,IMPLEMENTING TRIGGER CHANGES FOR NOT UPDATING PRIMARY KEY IN TICKLER_HISTORY, DONE BY: SASIKALA
-- VERSION 0.9 TRACKER NO: 529, COMMENT:196 ,START DATE: 05-06-2014, END DATE: 05-06-2014, ADDEDD OLD USERSTAMP,TIMESTAMP IN OLD TICKLER VALUE AND UPDATED NEW ULD ID IN NEW VALUE, DONE BY: SAFI.M
-- version 0.8 -- sdate:07/04/2014 -- edate:07/04/2014 -- issue:797 -- commentno:#28 -- desc:REPLACED TABLENAME AND HEADERNAME DONE BY:SASIKALA.D
-- version:0.7 -- sdate:26/02/2014 -- edate:26/02/2014 -- issue:529 -- commentno:132 -- done by:RL
-- version:0.6 -- sdate:10/02/2014 -- edate:10/02/2014 -- issue:529 -- desc:add comma after 1 header value is completed -- doneby:RL
-- version 0.5 -- sdate:08/02/2014 -- edate:08/02/2014 -- issue:738 -- commentno:#1 -- desc:ADDED ONE CONDITION FOR NOT CREATING NULL ROW IN TICKLER_HISTORY DONE BY:DHIVYA
-- version 0.4 -- sd:08/11/2013 -- ed:08/11/2013 -- issue:636 -- commentno:47 -- desc:trigger name changed by rl
-- version 0.3 -- >start date:08/10/2013 end date:10/10/2013-- >issueno:636 -- >desc:changed variable name O as old_value and N as new_value and added comments
-- >doneby:dhivya
-- > version 0.2 -- >date:02/08/2013 -- >issueno:529 -- >commentno:23 -- >desc:changed ECN_SNO to ECN_ID&added one condition for null fields
-- >doneby:dhivya

DROP TRIGGER IF EXISTS TRG_PERSONAL_UPDATE;
CREATE TRIGGER TRG_PERSONAL_UPDATE  
AFTER UPDATE ON EXPENSE_PERSONAL
FOR EACH ROW
BEGIN 
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF ((OLD.EP_ID!= NEW.EP_ID) OR (OLD.ECN_ID!= NEW.ECN_ID) OR (OLD.EP_INVOICE_DATE!= NEW.EP_INVOICE_DATE) OR (OLD.EP_AMOUNT!= NEW.EP_AMOUNT) OR (OLD.EP_INVOICE_ITEMS!= NEW.EP_INVOICE_ITEMS) OR (OLD.EP_INVOICE_FROM!= NEW.EP_INVOICE_FROM) OR (OLD.EP_COMMENTS IS NULL AND NEW.EP_COMMENTS IS NOT NULL) OR (OLD.EP_COMMENTS IS NOT NULL AND NEW.EP_COMMENTS IS NULL) OR (OLD.EP_COMMENTS!= NEW.EP_COMMENTS)) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_ID=', OLD.EP_ID,','); 
END IF;
IF (OLD.ECN_ID!= NEW.ECN_ID) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'ECN_ID=', OLD.ECN_ID,','); 
END IF;
IF (OLD.ECN_ID!= NEW.ECN_ID) THEN 
	SET NEW_VALUE = CONCAT(NEW_VALUE,'ECN_ID=', NEW.ECN_ID,','); 
END IF;
IF (OLD.EP_INVOICE_DATE!= NEW.EP_INVOICE_DATE) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_INVOICE_DATE=', OLD.EP_INVOICE_DATE,','); 
END IF;
IF (OLD.EP_INVOICE_DATE!= NEW.EP_INVOICE_DATE) THEN 
	SET NEW_VALUE = CONCAT(NEW_VALUE,'EP_INVOICE_DATE=', NEW.EP_INVOICE_DATE,','); 
END IF;
IF (OLD.EP_AMOUNT!= NEW.EP_AMOUNT) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_AMOUNT=', OLD.EP_AMOUNT,','); 
END IF;
IF (OLD.EP_AMOUNT!= NEW.EP_AMOUNT) THEN 
	SET NEW_VALUE = CONCAT(NEW_VALUE,'EP_AMOUNT=', NEW.EP_AMOUNT,','); 
END IF;
IF (OLD.EP_INVOICE_ITEMS!= NEW.EP_INVOICE_ITEMS) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_INVOICE_ITEMS=', OLD.EP_INVOICE_ITEMS,','); 
END IF;
IF (OLD.EP_INVOICE_ITEMS!= NEW.EP_INVOICE_ITEMS) THEN 
	SET NEW_VALUE = CONCAT(NEW_VALUE,'EP_INVOICE_ITEMS=', NEW.EP_INVOICE_ITEMS,','); 
END IF;
IF (OLD.EP_INVOICE_FROM!= NEW.EP_INVOICE_FROM) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_INVOICE_FROM=', OLD.EP_INVOICE_FROM,','); 
END IF;
IF (OLD.EP_INVOICE_FROM!= NEW.EP_INVOICE_FROM) THEN 
	SET NEW_VALUE = CONCAT(NEW_VALUE,'EP_INVOICE_FROM=', NEW.EP_INVOICE_FROM,','); 
END IF;
IF (OLD.EP_COMMENTS IS NULL AND NEW.EP_COMMENTS IS NOT NULL) THEN
	SET OLD_VALUE=CONCAT(OLD_VALUE,'EP_COMMENTS=','<NULL>,');
	SET NEW_VALUE=CONCAT(NEW_VALUE,'EP_COMMENTS=',NEW.EP_COMMENTS,',');
ELSEIF(OLD.EP_COMMENTS IS NOT NULL AND NEW.EP_COMMENTS IS NULL) THEN
	SET OLD_VALUE=CONCAT(OLD_VALUE,'EP_COMMENTS=',OLD.EP_COMMENTS,',');
	SET NEW_VALUE=CONCAT(NEW_VALUE,'EP_COMMENTS=','<NULL>,');
ELSEIF (OLD.EP_COMMENTS!= NEW.EP_COMMENTS) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_COMMENTS=', OLD.EP_COMMENTS,','); 
	SET NEW_VALUE = CONCAT(NEW_VALUE,'EP_COMMENTS=', NEW.EP_COMMENTS,','); 
END IF;
IF ((OLD.ECN_ID!= NEW.ECN_ID) OR (OLD.EP_INVOICE_DATE!= NEW.EP_INVOICE_DATE) OR (OLD.EP_AMOUNT!= NEW.EP_AMOUNT) OR (OLD.EP_INVOICE_ITEMS!= NEW.EP_INVOICE_ITEMS) OR (OLD.EP_INVOICE_FROM!= NEW.EP_INVOICE_FROM) OR (OLD.EP_COMMENTS IS NULL AND NEW.EP_COMMENTS IS NOT NULL) OR (OLD.EP_COMMENTS IS NOT NULL AND NEW.EP_COMMENTS IS NULL) OR (OLD.EP_COMMENTS!= NEW.EP_COMMENTS)) THEN  
	IF (OLD.ULD_ID!= NEW.ULD_ID) THEN 
		SET OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
	END IF;
	IF (OLD.EP_TIMESTAMP!= NEW.EP_TIMESTAMP) THEN 
	SET OLD_VALUE = CONCAT(OLD_VALUE,'EP_TIMESTAMP=', OLD.EP_TIMESTAMP,','); 
	END IF;
END IF;
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
	IF(OLD_VALUE!=NEW_VALUE)THEN
		SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
		SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
		INSERT INTO TICKLER_HISTORY(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
		((SELECT ULD_ID FROM EXPENSE_PERSONAL WHERE EP_ID=NEW.EP_ID),
		(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
		(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_PERSONAL'),OLD_VALUE,NEW_VALUE);
	END IF;
	END IF;
END;
