-->version 0.3 -->start date:13/08/2014 end date:13/08/2014 -->issueno:836--commentno:#32 --> DESC:changing amt data type(7,2) as DECIMAL(5,2) DONE BY: RL
--version:0.2 --sdate:04/08/2014 --edate:04/08/2014 --issue:835 --comment no#1 --desc:IMPLEMENTED AUTOCOMMIT  --doneby:DHIVYA
--version:0.1 --sdate:22/07/2014 --edate:25/07/2014 --issue:593 --comment no#314 --desc:IMPLEMENTED ALL CHECK CONSTRAINTS CONDITIONS  --doneby:DHIVYA

DROP PROCEDURE IF EXISTS SP_BIZDLY_ELECTRICITY_UPDATE;
CREATE PROCEDURE SP_BIZDLY_ELECTRICITY_UPDATE(
IN EEID INTEGER,
IN INPUT_INVOICEDATE DATE,
IN INPUT_FROMPERIOD DATE,
IN INPUT_TOPERIOD DATE,
IN INPUT_ECNID INTEGER,
IN INPUT_AMOUNT DECIMAL(5,2),
IN INPUT_COMMENTS TEXT,
IN INPUT_USERSTAMP VARCHAR(50),
OUT OUTPUT_MSG TEXT)
BEGIN
	DECLARE USERSTAMP_ID INTEGER(2);
	DECLARE EDEID INTEGER;
	DECLARE TODAYDATE DATE;
	DECLARE UNITID INTEGER;
	DECLARE UNITSTARTDATE DATE;
	DECLARE UNITENDDATE DATE;
	DECLARE UNITMONTH INTEGER;
	DECLARE MINDATE DATE;
	DECLARE MAXDATE DATE;
	DECLARE MONTH_INVDATE INTEGER;
	DECLARE OLDINVDATE DATE;
	DECLARE YEAR_INVDATE INTEGER;
	DECLARE OLDAMOUNT DECIMAL(5,2);
	DECLARE AMOUNTTYPE TEXT;
	DECLARE OLDECNID INTEGER;
	DECLARE ERRORMSG TEXT;
	DECLARE MONTHNAME TEXT;
	DECLARE MONTH_YEAR VARCHAR(20);
	DECLARE INVOICEDATE DATE;
	DECLARE FROMPERIOD DATE;
	DECLARE TOPERIOD DATE;
	DECLARE ECNID INTEGER;
	DECLARE ELEC_UNITNO INTEGER(4)UNSIGNED ZEROFILL;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK; 
		SET OUTPUT_MSG = 0;
	END;
	SET AUTOCOMMIT=0;
	SET INVOICEDATE=(SELECT EE_INVOICE_DATE FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
	SET FROMPERIOD=(SELECT EE_FROM_PERIOD FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
	SET TOPERIOD=(SELECT EE_TO_PERIOD FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
	SET ECNID=(SELECT ECN_ID FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
	SET MONTH_INVDATE=(SELECT MONTH(INPUT_INVOICEDATE));
	SET YEAR_INVDATE=(SELECT YEAR(INPUT_INVOICEDATE));
	SET MONTHNAME=(SELECT UCASE(MONTHNAME(STR_TO_DATE(MONTH_INVDATE, '%m'))));
	SET MONTH_YEAR=(SELECT CONCAT(MONTHNAME,'-',YEAR_INVDATE));
	SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=471);
	SET UNITID=(SELECT UNIT_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE EDE_ID=(SELECT EDE_ID FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID));
	SET AMOUNTTYPE=(SELECT ECN_DATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID=INPUT_ECNID);
	SET ELEC_UNITNO=(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=UNITID);
	SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[AMTTYPE]',AMOUNTTYPE));
	SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[UNITNO]',ELEC_UNITNO));
	SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[MONTH]',MONTH_YEAR));
	SET OUTPUT_MSG='';
	CALL SP_CONFIG_SDATE_EDATE(UNITID,@S_CONFIGDATE,@E_CONFIGDATE,@INVOICE_DATE);
	SET UNITSTARTDATE=@S_CONFIGDATE;
	SET UNITENDDATE=@E_CONFIGDATE;
	SET MAXDATE=@INVOICE_DATE;
	SET TODAYDATE=CURDATE();
		IF INPUT_INVOICEDATE > TODAYDATE THEN
			SET OUTPUT_MSG=(SELECT CONCAT(OUTPUT_MSG,(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=474)));
		END IF;
		SET MINDATE=UNITSTARTDATE;
		IF INPUT_INVOICEDATE NOT BETWEEN MINDATE AND MAXDATE THEN 
		SET OUTPUT_MSG=(SELECT CONCAT(OUTPUT_MSG,',', (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=475)));
		END IF;
		IF INPUT_FROMPERIOD NOT BETWEEN MINDATE AND INPUT_INVOICEDATE THEN
			SET OUTPUT_MSG=(SELECT CONCAT(OUTPUT_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=478)));
		END IF;
		IF INPUT_TOPERIOD NOT BETWEEN INPUT_FROMPERIOD AND INPUT_INVOICEDATE THEN
			SET OUTPUT_MSG=(SELECT CONCAT(OUTPUT_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=479)));
		END IF;
		IF INPUT_ECNID NOT BETWEEN 133 AND 135  THEN
			SET OUTPUT_MSG=(SELECT CONCAT(OUTPUT_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=480)));
		END IF;
		IF EXISTS(SELECT * FROM EXPENSE_ELECTRICITY WHERE MONTH(EE_INVOICE_DATE)=MONTH_INVDATE AND YEAR(EE_INVOICE_DATE)=YEAR_INVDATE AND EDE_ID IN(SELECT EDE_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=UNITID) AND ECN_ID=INPUT_ECNID AND EE_ID!=EEID)THEN
		SET OUTPUT_MSG=(SELECT CONCAT(OUTPUT_MSG,',',ERRORMSG));
		
		END IF;
		SET OUTPUT_MSG=(SELECT SUBSTRING(OUTPUT_MSG,2));
	IF(INPUT_INVOICEDATE='' OR INPUT_INVOICEDATE IS NULL)THEN
		SET INPUT_INVOICEDATE = NULL;
	END IF;
	IF(INPUT_FROMPERIOD='' OR INPUT_FROMPERIOD IS NULL)THEN
		SET INPUT_FROMPERIOD = NULL;
	END IF;
	IF(INPUT_TOPERIOD='' OR INPUT_TOPERIOD IS NULL)THEN
		SET INPUT_TOPERIOD = NULL;
	END IF;
	IF(INPUT_ECNID='' OR INPUT_ECNID IS NULL)THEN
		SET INPUT_ECNID = NULL;
	END IF;
	IF(INPUT_AMOUNT='' OR INPUT_AMOUNT IS NULL)THEN
		SET INPUT_AMOUNT = NULL;
	END IF;
	IF(INPUT_COMMENTS='' OR INPUT_COMMENTS IS NULL)THEN
		SET INPUT_COMMENTS = NULL;
	END IF;
	IF(INPUT_USERSTAMP='' OR INPUT_USERSTAMP IS NULL)THEN
		SET INPUT_USERSTAMP = NULL;
	END IF;
	START TRANSACTION;	
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(INPUT_USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
	IF(INPUT_INVOICEDATE IS NOT NULL AND INPUT_FROMPERIOD IS NOT NULL AND INPUT_TOPERIOD IS NOT NULL AND INPUT_ECNID IS NOT NULL AND INPUT_AMOUNT IS NOT NULL AND INPUT_USERSTAMP IS NOT NULL)THEN
		IF OUTPUT_MSG=' ' THEN
			UPDATE EXPENSE_ELECTRICITY SET EE_INVOICE_DATE=INPUT_INVOICEDATE,EE_FROM_PERIOD=INPUT_FROMPERIOD,EE_TO_PERIOD=INPUT_TOPERIOD,ECN_ID=INPUT_ECNID,EE_AMOUNT=INPUT_AMOUNT,EE_COMMENTS=INPUT_COMMENTS,ULD_ID=USERSTAMP_ID WHERE EE_ID=EEID;
			SET OUTPUT_MSG = 1;
		END IF;
	END IF;
COMMIT;
END;
