-- version 1.5 --sadte:31/07/2014 --edate:31/07/2014 --issue:835 --commentno:3 --desc:implementing auto commit -- doneby:RL
--version 1.4 --sdate:28/02/2014 --edate:28/02/2014 --issue:754 --comment:36 --doneby:RL	
--version 1.3 --sdate:27/02/2014 --edate:27/02/2014 --issue:754 --comment:22 --doneby:RL	
--version 1.2 --sdate:22/02/2014 --edate:22/02/2014 --issue:346 --comment:245 --doneby:RL
--version 1.1 --sdate:14/02/2014 --edate:14/02/2014 --issue:346 --comment:203 --doneby:RL
--version 1.0 -->done by DINESH.M -->startdate:21/11/2013 -->enddate:21/11/2013 -->issueno:253 commentno:#111 -->desc:changed DATA TYPE (INTEGER (7)) FOR ACCESS_CARD 
--version 0.9 -->done by DINESH.M -->startdate:20/11/2013 -->enddate:20/11/2013 -->issueno:253 commentno:#111 -->desc:changed DATA TYPE (INTEGER) FOR ACCESS_CARD 
--version 0.8 -->done by DHIVYA.A -->startdate:07/11/2013 -->enddate:07/11/2013 -->issueno:636 commentno:#47 -->desc:changed sp name and added comments
--version 0.7 -->done by M.LOGASUNDARI -->startdate:2013-08-21 -->enddate:2013-08-21 -->issueno:346 commentno:88 -->desc:included the userstamp column for unit room type details and unit stamp duty type
--version 0.6 -->done by:rajalakshmi.r -->startdate:2013-08-14 -->enddate:2013-08-14--issueno:346 -->commentno:61
-- version :0.5 -->startdate:31-07-2013 -->enddate:31-07-2013 -->issueno:346 -->commentno:53  -->done by :rajalakshmi.r
-- version :0.4 -->startdate:29-07-2013 -->enddate:29-07-2013 -->desc:changed procedure name  -->done by :rajalakshmi.r
--version 0.3 -->created by:rajalakshmi -->startdate:2013-07-23 -->enddate:2013-07-23 -->issueno:566 -->desc:modify of unit access stamp details 
--version 0.2 --created by:rajalakshmi --startdate:2013-07-11 --enddate:2013-07-11 --issueno:356 --desc:modify of unit access stamp details 
--version 0.1 --created by:loganathan --date:2013-05-10 --issueno:356 --desc:unit creation non mandatory fields insert sp
DROP PROCEDURE IF EXISTS SP_EXISTING_UNIT_ACCESS_STAMP_DETAILS_INSERT;
CREATE PROCEDURE SP_EXISTING_UNIT_ACCESS_STAMP_DETAILS_INSERT(
--variable declaration
IN UNIT_NUMBER SMALLINT(4) ,
IN ACCESS_CARD INTEGER(7) ,
IN ROOMTYPE VARCHAR(30),
IN STAMP_DUTY_DATE DATE ,
IN STAMPDUTYTYPE CHAR(12),
IN STAMP_DUTY_AMOUNT DECIMAL(6,2),
IN USERSTAMP VARCHAR(50),
IN UNIT_DEPOSIT INTEGER(5), 
IN COMMENTS TEXT,
OUT CONFIRMATIONFLAG INTEGER) 
BEGIN
	DECLARE ROOM_TYPE INT;
	DECLARE STAMP_DUTY_TYPE INT;
	DECLARE OLD_DEPOSIT INTEGER(5);
	DECLARE USERSTAMP_ID INTEGER(2);
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK; 
		SET CONFIRMATIONFLAG = 0;
	END;

	SET AUTOCOMMIT = 0;
	START TRANSACTION;
	
	SET CONFIRMATIONFLAG = 0;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
--set null for non mandatory headers
	IF UNIT_DEPOSIT='' THEN
		SET UNIT_DEPOSIT=NULL;
	END IF;
	IF ACCESS_CARD='' THEN 
		SET ACCESS_CARD=NULL;
	END IF;
	IF COMMENTS='' THEN
		SET COMMENTS=NULL;
	END IF;
	IF ROOMTYPE='' OR ROOMTYPE=NULL THEN
		SET ROOMTYPE=NULL;
	END IF;
	IF STAMPDUTYTYPE='' OR STAMPDUTYTYPE=NULL THEN
		SET STAMPDUTYTYPE=NULL;
	END IF;
	
	SET OLD_DEPOSIT = (SELECT UD_DEPOSIT FROM UNIT_DETAILS WHERE UNIT_ID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO = UNIT_NUMBER));
	
	SET UNIT_DEPOSIT =(SELECT(IF (OLD_DEPOSIT IS NOT NULL,OLD_DEPOSIT,UNIT_DEPOSIT)));
	
	
	IF EXISTS(SELECT UNIT_NO FROM VW_ACTIVE_UNIT WHERE UNIT_NO = UNIT_NUMBER)THEN
		IF (ACCESS_CARD IS NOT NULL OR ROOMTYPE IS NOT NULL OR STAMP_DUTY_DATE IS NOT NULL OR STAMPDUTYTYPE IS NOT NULL 
		OR STAMP_DUTY_AMOUNT IS NOT NULL OR COMMENTS IS NOT NULL OR UNIT_DEPOSIT IS NOT NULL)THEN
--if the passing room type is in unit_room_type_details table set that room type id in room type variable
			IF (ROOMTYPE IS NOT NULL) THEN
				IF EXISTS(SELECT URTD_ROOM_TYPE FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE) THEN
					SET ROOM_TYPE = (SELECT URTD_ID FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE);
				END IF;
--if the passing room type is not in the unit_room_type_details insert that roomtype in that table and set that id in room type variable 
				IF NOT EXISTS(SELECT URTD_ROOM_TYPE FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE) THEN
					INSERT INTO UNIT_ROOM_TYPE_DETAILS (URTD_ROOM_TYPE, ULD_ID) VALUES (ROOMTYPE, USERSTAMP_ID);
					SET CONFIRMATIONFLAG = 1;
					SET ROOM_TYPE = (SELECT URTD_ID FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE);
				END IF;
			END IF;
--if the passing stampdutytype is in UNIT_STAMP_DUTY_TYPE table set that id in STAMPDUTYTYPE variable
			IF STAMPDUTYTYPE IS NOT NULL THEN
				IF EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
--if the passing stampdutytype is not in the UNIT_STAMP_DUTY_TYPE insert that stampdutytype in that table and set that id in STAMPDUTYTYPE variable 
				IF NOT EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					INSERT INTO UNIT_STAMP_DUTY_TYPE (USDT_DATA, ULD_ID) VALUES (STAMPDUTYTYPE, USERSTAMP_ID);
					SET CONFIRMATIONFLAG =1;
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
			END IF;

			IF(ACCESS_CARD IS NULL AND(ROOM_TYPE IS NOT NULL OR STAMP_DUTY_DATE IS NOT NULL OR STAMP_DUTY_TYPE IS NOT NULL OR STAMP_DUTY_AMOUNT IS NOT NULL OR COMMENTS IS NOT NULL))THEN
--insert query for unit_access_stamp_details if the passing access card is null
				INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,UASD_ACCESS_CARD,URTD_ID,UASD_STAMPDUTYDATE,USDT_ID,UASD_STAMPDUTYAMT,ULD_ID,UASD_COMMENTS)
				VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER),ACCESS_CARD,ROOM_TYPE,STAMP_DUTY_DATE,STAMP_DUTY_TYPE,STAMP_DUTY_AMOUNT,USERSTAMP_ID,COMMENTS);
				SET CONFIRMATIONFLAG = 1;
			END IF;
			IF (ACCESS_CARD IS NOT NULL)THEN
--insert query for unit_access_stamp_details if the passing access card is not null
				INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,UASD_ACCESS_CARD,URTD_ID,UASD_STAMPDUTYDATE,USDT_ID,UASD_STAMPDUTYAMT,ULD_ID,UASD_COMMENTS,UASD_ACCESS_INVENTORY)
				VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER),ACCESS_CARD,ROOM_TYPE,STAMP_DUTY_DATE,STAMP_DUTY_TYPE,STAMP_DUTY_AMOUNT,USERSTAMP_ID,COMMENTS,'X');
				SET CONFIRMATIONFLAG = 1;
			END IF; 
--update query for UNIT_DETAILS table
			UPDATE UNIT_DETAILS SET UD_DEPOSIT = UNIT_DEPOSIT WHERE UNIT_ID =(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER);
			SET CONFIRMATIONFLAG = 1;
		END IF;
	END IF;
	
	IF EXISTS(SELECT UNIT_NO FROM VW_NON_ACTIVE_UNIT WHERE UNIT_NO = UNIT_NUMBER)THEN
		IF(STAMPDUTYTYPE IS NOT NULL OR STAMP_DUTY_DATE IS NOT NULL OR STAMP_DUTY_AMOUNT IS NOT NULL OR COMMENTS IS NOT NULL)THEN
	--if the passing stampdutytype is in UNIT_STAMP_DUTY_TYPE table set that id in STAMPDUTYTYPE variable
			IF STAMPDUTYTYPE IS NOT NULL THEN
				IF EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
--if the passing stampdutytype is not in the UNIT_STAMP_DUTY_TYPE insert that stampdutytype in that table and set that id in STAMPDUTYTYPE variable 
				IF NOT EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					INSERT INTO UNIT_STAMP_DUTY_TYPE (USDT_DATA, ULD_ID) VALUES (STAMPDUTYTYPE, USERSTAMP_ID);
					SET CONFIRMATIONFLAG = 1;
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
			END IF;
			INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,UASD_STAMPDUTYDATE,USDT_ID,UASD_STAMPDUTYAMT,ULD_ID,UASD_COMMENTS)
			VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER),STAMP_DUTY_DATE,STAMP_DUTY_TYPE,STAMP_DUTY_AMOUNT,USERSTAMP_ID,COMMENTS);
			SET CONFIRMATIONFLAG = 1;
		END IF;
	END IF;
			
COMMIT;
END;