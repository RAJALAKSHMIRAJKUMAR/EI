DROP PROCEDURE IF EXISTS SP_TRG_BIZDLY_PURCHASE_NEW_CARD_VALIDATION;
CREATE PROCEDURE SP_TRG_BIZDLY_PURCHASE_NEW_CARD_VALIDATION(
IN EPNCNO INTEGER,
IN UNITID INTEGER,
IN INVOICEDATE DATE,
IN PROCESS TEXT)
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(50);
	DECLARE STARTDATE DATE;
	DECLARE ENDDATE DATE;
	DECLARE MINDATE DATE;
	DECLARE MAXDATE DATE;
  DECLARE ERRORMSG TEXT;
  DECLARE EPNCAMT INTEGER;
  DECLARE MSG TEXT;
	CALL SP_CONFIG_SDATE_EDATE(UNITID,@S_CONFIGDATE,@E_CONFIGDATE,@INVOICE_DATE);
 	SET STARTDATE=@S_CONFIGDATE;
	SET ENDDATE=@E_CONFIGDATE;
	SET MAXDATE = @INVOICE_DATE;
	IF(PROCESS='INSERT') OR (PROCESS='UPDATE') THEN
		IF(EPNCNO IS NOT NULL) THEN
			IF(LENGTH(EPNCNO) > 7) THEN
      SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=534);
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
			END IF;
		END IF;
		IF(INVOICEDATE > CURDATE()) THEN
      SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=474);
			SIGNAL SQLSTATE '45000'
      SET MESSAGE_TEXT = ERRORMSG;
		END IF;
		SET MINDATE=STARTDATE;
		IF(INVOICEDATE NOT BETWEEN MINDATE AND MAXDATE) THEN
    SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=475);
			SIGNAL SQLSTATE '45000'
			   SET MESSAGE_TEXT = ERRORMSG;
		END IF;
     END IF;  
END;   
