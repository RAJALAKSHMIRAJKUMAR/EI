DROP PROCEDURE IF EXISTS SP_TRG_BIZDLY_EXPENSE_ELECTRICITY_VALIDATION;
CREATE PROCEDURE SP_TRG_BIZDLY_EXPENSE_ELECTRICITY_VALIDATION(
IN EEID INTEGER,
IN INVOICEDATE DATE,
IN FROMPERIOD DATE,
IN TOPERIOD DATE,
IN EDEID INTEGER,
IN ECNID INTEGER,
IN AMOUNT DECIMAL(5,2),
IN PROCESS TEXT
)
BEGIN
DECLARE TODAYDATE DATE;
DECLARE UNITID INTEGER;
DECLARE UNITSTARTDATE DATE;
DECLARE UNITENDDATE DATE;
DECLARE UNITMONTH INTEGER;
DECLARE MINDATE DATE;
DECLARE MAXDATE DATE;
DECLARE MESSAGE_TEXT TEXT;
DECLARE MONTH_INVDATE INTEGER;
DECLARE OLDINVDATE DATE;
DECLARE YEAR_INVDATE INTEGER;
DECLARE OLDAMOUNT DECIMAL(5,2);
DECLARE AMOUNTTYPE TEXT;
DECLARE OLDECNID INTEGER;
DECLARE ERRORMSG TEXT;
DECLARE MONTHNAME TEXT;
DECLARE MONTH_YEAR VARCHAR(20);
DECLARE ERRORMSG1 TEXT;
DECLARE ERRORMSG2 TEXT;
DECLARE ERRORMSG3 TEXT;
DECLARE ERRORMSG4 TEXT;
DECLARE ERRORMSG5 TEXT;
SET ERRORMSG1=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=474);
SET ERRORMSG2=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=475);
SET ERRORMSG3=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=478);
SET ERRORMSG4=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=479);
SET ERRORMSG5=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=480);
SET MONTH_INVDATE=(SELECT MONTH(INVOICEDATE));
SET YEAR_INVDATE=(SELECT YEAR(INVOICEDATE));
SET MONTHNAME=(SELECT UCASE(MONTHNAME(STR_TO_DATE(MONTH_INVDATE, '%m'))));
SET MONTH_YEAR=(SELECT CONCAT(MONTHNAME,'-',YEAR_INVDATE));
SET OLDINVDATE=(SELECT EE_INVOICE_DATE FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
SET OLDAMOUNT=(SELECT EE_AMOUNT FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
SET ERRORMSG=(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=471);
SET UNITID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_ID=(SELECT UNIT_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE EDE_ID=EDEID)); 
SET AMOUNTTYPE=(SELECT ECN_DATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID=ECNID);
SET OLDECNID=(SELECT ECN_ID FROM EXPENSE_ELECTRICITY WHERE EE_ID=EEID);
SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[AMTTYPE]',AMOUNTTYPE));
SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[UNITNO]',(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=UNITID)));
SET ERRORMSG=(SELECT REPLACE(ERRORMSG,'[MONTH]',MONTH_YEAR));
	CALL SP_CONFIG_SDATE_EDATE(UNITID,@S_CONFIGDATE,@E_CONFIGDATE,@INVOICE_DATE);
	SET UNITSTARTDATE=@S_CONFIGDATE;
	SET UNITENDDATE=@E_CONFIGDATE;
	SET MAXDATE=@INVOICE_DATE;
	SET TODAYDATE=CURDATE();
IF (PROCESS='INSERT') OR (PROCESS='UPDATE') THEN
	IF INVOICEDATE > TODAYDATE THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT=ERRORMSG1;
	END IF;
	SET MINDATE=UNITSTARTDATE;
	IF INVOICEDATE NOT BETWEEN MINDATE AND MAXDATE THEN 
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT=ERRORMSG2;
	END IF;
	IF FROMPERIOD NOT BETWEEN MINDATE AND INVOICEDATE THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT=ERRORMSG3;
	END IF;
	IF TOPERIOD NOT BETWEEN FROMPERIOD AND INVOICEDATE THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT=ERRORMSG4;
	END IF;
	IF ECNID NOT BETWEEN 133 AND 135  THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT=ERRORMSG5;
	END IF;
END IF;
	IF (PROCESS='INSERT')THEN
		IF EXISTS(SELECT * FROM EXPENSE_ELECTRICITY WHERE MONTH(EE_INVOICE_DATE)=MONTH_INVDATE AND YEAR(EE_INVOICE_DATE)=YEAR_INVDATE AND EDE_ID IN(SELECT EDE_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=UNITID) AND ECN_ID=ECNID)THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT=ERRORMSG;
		END IF;
	END IF;
	IF (PROCESS='UPDATE')THEN
			IF EXISTS(SELECT * FROM EXPENSE_ELECTRICITY WHERE MONTH(EE_INVOICE_DATE)=MONTH_INVDATE AND YEAR(EE_INVOICE_DATE)=YEAR_INVDATE AND EDE_ID IN(SELECT EDE_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID=UNITID) AND ECN_ID=ECNID AND EE_ID!=EEID)THEN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT=ERRORMSG;
			END IF;
	END IF;
END;
