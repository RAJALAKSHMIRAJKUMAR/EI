DROP PROCEDURE IF EXISTS SP_STAFFDLY_STAFF_SALARY_INSERT;
CREATE PROCEDURE SP_STAFFDLY_STAFF_SALARY_INSERT(
INPUT_EDSSID INTEGER,
INPUT_INVOICE_DATE DATE,
INPUT_FROM_PERIOD DATE,
INPUT_TO_PERIOD DATE,
INPUT_CPF_AMOUNT DECIMAL(7,2),
INPUT_LEVY_AMOUNT DECIMAL(7,2),
INPUT_SALARY_AMOUNT DECIMAL(7,2),
INPUT_SALARY_COMMENTS TEXT,
INPUT_USERSTAMP VARCHAR(50),
OUT SUCCESS_MSG TEXT)
BEGIN
	DECLARE USERSTAMP_ID INTEGER;
	DECLARE ERROR_MSG TEXT;
	DECLARE ERRORMSG TEXT;
	DECLARE ERRORMSG1 TEXT;
	DECLARE INVOICEDATE_MONTH INTEGER;
	DECLARE INVOICEDATE_MONTH_LENGTH INTEGER;
	DECLARE INVOICEDATE_YEAR INTEGER;
	DECLARE INVOICEDATE_MONTHNAME TEXT;
	DECLARE INVOICEDATE_MONTH_YEAR VARCHAR(20);
	DECLARE FIRSTDAY_INVOICEDATE DATE;
	DECLARE LASTDAY_INVOICEDATE DATE;
	DECLARE FROMPERIOD_MONTH INTEGER;
	DECLARE FROMPERIOD_MONTH_LENGTH INTEGER;
	DECLARE FROMPERIOD_YEAR INTEGER;
	DECLARE FIRSTDAY_FROMPERIOD DATE;
	DECLARE FIRSTDAYFROMPERIOD VARCHAR(25);
	DECLARE LASTDAY_FROMPERIOD DATE;
	DECLARE LASTDAYFROMPERIOD VARCHAR(25);
	DECLARE TOPERIOD_MONTH INTEGER;
	DECLARE TOPERIOD_MONTH_LENGTH INTEGER;
	DECLARE TOPERIOD_YEAR INTEGER;
	DECLARE FIRSTDAY_TOPERIOD DATE;
	DECLARE FIRSTDAYTOPERIOD VARCHAR(25);
	DECLARE LASTDAY_TOPERIOD DATE;
	DECLARE LASTDAYTOPERIOD VARCHAR(25);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK; 
	    SET SUCCESS_MSG = '';
	END;
	SET AUTOCOMMIT = 0;
	SET SUCCESS_MSG = '';
	SET INVOICEDATE_MONTH = (SELECT MONTH(INPUT_INVOICE_DATE));
	SET INVOICEDATE_MONTH_LENGTH = (SELECT LENGTH(INVOICEDATE_MONTH));
	IF(INVOICEDATE_MONTH_LENGTH <= 1) THEN
		SET INVOICEDATE_MONTH = (SELECT CONCAT('0',INVOICEDATE_MONTH));
	ELSE
		SET INVOICEDATE_MONTH = INVOICEDATE_MONTH;
	END IF;
	SET INVOICEDATE_YEAR = (SELECT YEAR(INPUT_INVOICE_DATE));
	SET INVOICEDATE_MONTHNAME = (SELECT UCASE(MONTHNAME(STR_TO_DATE(INVOICEDATE_MONTH, '%m'))));
	SET INVOICEDATE_MONTH_YEAR = (SELECT CONCAT(INVOICEDATE_MONTHNAME,'-',INVOICEDATE_YEAR));
	SET FIRSTDAY_INVOICEDATE = (SELECT CONCAT(INVOICEDATE_YEAR,'-',INVOICEDATE_MONTH,'-','01'));
	SET LASTDAY_INVOICEDATE = (SELECT LAST_DAY(FIRSTDAY_INVOICEDATE));
	SET FROMPERIOD_MONTH = (SELECT MONTH(INPUT_FROM_PERIOD));
	SET FROMPERIOD_MONTH_LENGTH = (SELECT LENGTH(FROMPERIOD_MONTH));
	IF(FROMPERIOD_MONTH_LENGTH <= 1) THEN
		SET FROMPERIOD_MONTH = (SELECT CONCAT('0',FROMPERIOD_MONTH));
	ELSE
		SET FROMPERIOD_MONTH = FROMPERIOD_MONTH;
	END IF;
	SET FROMPERIOD_YEAR = (SELECT YEAR(INPUT_FROM_PERIOD));
	SET FIRSTDAY_FROMPERIOD = (SELECT CONCAT(FROMPERIOD_YEAR,'-',FROMPERIOD_MONTH,'-','01'));
	SET FIRSTDAYFROMPERIOD = (SELECT DATE_FORMAT(FIRSTDAY_FROMPERIOD, '%d-%m-%Y'));
	SET LASTDAY_FROMPERIOD = (SELECT LAST_DAY(FIRSTDAY_FROMPERIOD));
	SET LASTDAYFROMPERIOD = (SELECT DATE_FORMAT(LASTDAY_FROMPERIOD, '%d-%m-%Y'));
	SET TOPERIOD_MONTH = (SELECT MONTH(INPUT_TO_PERIOD));
	SET TOPERIOD_MONTH_LENGTH = (SELECT LENGTH(TOPERIOD_MONTH));
	IF(TOPERIOD_MONTH_LENGTH <= 1) THEN
		SET TOPERIOD_MONTH = (SELECT CONCAT('0',TOPERIOD_MONTH));
	ELSE
		SET TOPERIOD_MONTH = TOPERIOD_MONTH;
	END IF;
	SET TOPERIOD_YEAR = (SELECT YEAR(INPUT_TO_PERIOD));
	SET FIRSTDAY_TOPERIOD = (SELECT CONCAT(TOPERIOD_YEAR,'-',TOPERIOD_MONTH,'-','01'));
	SET FIRSTDAYTOPERIOD = (SELECT DATE_FORMAT(FIRSTDAY_TOPERIOD, '%d-%m-%Y'));
	SET LASTDAY_TOPERIOD = (SELECT LAST_DAY(FIRSTDAY_TOPERIOD));
	SET LASTDAYTOPERIOD = (SELECT DATE_FORMAT(LASTDAY_TOPERIOD, '%d-%m-%Y'));
	IF(INPUT_INVOICE_DATE > CURDATE()) THEN
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION 
		WHERE EMC_ID = 474)));
	END IF;
	IF EXISTS(SELECT ESS_INVOICE_DATE FROM EXPENSE_STAFF_SALARY WHERE EDSS_ID = INPUT_EDSSID AND 
	ESS_INVOICE_DATE BETWEEN FIRSTDAY_INVOICEDATE AND LASTDAY_INVOICEDATE) THEN
		SET ERROR_MSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 574);
		SET ERROR_MSG = (SELECT REPLACE(ERROR_MSG,'[MONTH]',INVOICEDATE_MONTH_YEAR));
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',ERROR_MSG));
	END IF;
	IF(INPUT_FROM_PERIOD >= INPUT_INVOICE_DATE) THEN
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION 
		WHERE EMC_ID = 512)));
	END IF;
	IF EXISTS(SELECT ESS_FROM_PERIOD FROM EXPENSE_STAFF_SALARY WHERE EDSS_ID = INPUT_EDSSID AND 
	ESS_FROM_PERIOD BETWEEN FIRSTDAY_FROMPERIOD AND LASTDAY_FROMPERIOD) THEN
		SET ERRORMSG = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 575);
		SET ERRORMSG = (SELECT REPLACE(ERRORMSG,'[SDATE]',FIRSTDAYFROMPERIOD));
		SET ERRORMSG = (SELECT REPLACE(ERRORMSG,'[EDATE]',LASTDAYFROMPERIOD));
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',ERRORMSG));
	END IF;
	IF(INPUT_TO_PERIOD < INPUT_FROM_PERIOD) THEN
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION 
		WHERE EMC_ID = 513)));
	END IF;
	IF(INPUT_TO_PERIOD >= INPUT_INVOICE_DATE) THEN
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',(SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION 
		WHERE EMC_ID = 514)));
	END IF;
	IF EXISTS(SELECT ESS_TO_PERIOD FROM EXPENSE_STAFF_SALARY WHERE EDSS_ID = INPUT_EDSSID AND 
	ESS_TO_PERIOD BETWEEN FIRSTDAY_TOPERIOD AND FIRSTDAY_TOPERIOD) THEN
		SET ERRORMSG1 = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID = 576);
		SET ERRORMSG1 = (SELECT REPLACE(ERRORMSG1,'[SDATE]',FIRSTDAYTOPERIOD));
		SET ERRORMSG1 = (SELECT REPLACE(ERRORMSG1,'[EDATE]',LASTDAYTOPERIOD));
		SET SUCCESS_MSG = (SELECT CONCAT(SUCCESS_MSG,',',ERRORMSG1));
	END IF;
	SET SUCCESS_MSG=(SELECT SUBSTRING(SUCCESS_MSG,2));
	IF(INPUT_CPF_AMOUNT IS NULL) THEN
		SET INPUT_CPF_AMOUNT = NULL;
	END IF;
	IF(INPUT_LEVY_AMOUNT IS NULL) THEN
		SET INPUT_LEVY_AMOUNT = NULL;
	END IF;
	IF(INPUT_SALARY_COMMENTS IS NULL OR INPUT_SALARY_COMMENTS='') THEN
		SET INPUT_SALARY_COMMENTS = NULL;
	END IF;
	START TRANSACTION;	
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(INPUT_USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
	IF(INPUT_EDSSID IS NOT NULL AND INPUT_INVOICE_DATE IS NOT NULL AND INPUT_FROM_PERIOD IS NOT NULL AND
	INPUT_TO_PERIOD IS NOT NULL AND INPUT_SALARY_AMOUNT IS NOT NULL AND INPUT_USERSTAMP IS NOT NULL) THEN
		IF(SUCCESS_MSG = ' ') THEN
			INSERT INTO EXPENSE_STAFF_SALARY (EDSS_ID,ESS_INVOICE_DATE,ESS_FROM_PERIOD,ESS_TO_PERIOD,
			ESS_CPF_AMOUNT,ESS_LEVY_AMOUNT,ESS_SALARY_AMOUNT,ESS_SALARY_COMMENTS,ULD_ID) VALUES
			(INPUT_EDSSID,INPUT_INVOICE_DATE,INPUT_FROM_PERIOD,INPUT_TO_PERIOD,INPUT_CPF_AMOUNT,INPUT_LEVY_AMOUNT,
			INPUT_SALARY_AMOUNT,INPUT_SALARY_COMMENTS,USERSTAMP_ID);
			SET SUCCESS_MSG = 1;
		END IF;
	END IF;
	COMMIT;
END;
