DROP PROCEDURE IF EXISTS SP_EXISTING_UNIT_ACCESS_STAMP_DETAILS_INSERT;
CREATE PROCEDURE SP_EXISTING_UNIT_ACCESS_STAMP_DETAILS_INSERT(
IN UNIT_NUMBER SMALLINT(4) ,
IN ACCESS_CARD INTEGER(7) ,
IN ROOMTYPE VARCHAR(30),
IN STAMP_DUTY_DATE DATE ,
IN STAMPDUTYTYPE CHAR(12),
IN STAMP_DUTY_AMOUNT DECIMAL(6,2),
IN USERSTAMP VARCHAR(50),
IN UNIT_DEPOSIT INTEGER(5), 
IN COMMENTS TEXT,
OUT CONFIRMATIONFLAG INTEGER) 
BEGIN
	DECLARE ROOM_TYPE INT;
	DECLARE STAMP_DUTY_TYPE INT;
	DECLARE OLD_DEPOSIT INTEGER(5);
	DECLARE USERSTAMP_ID INTEGER(2);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK; 
		SET CONFIRMATIONFLAG = 0;
	END;
	SET AUTOCOMMIT = 0;
	START TRANSACTION;
	SET CONFIRMATIONFLAG = 0;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
	IF UNIT_DEPOSIT='' THEN
		SET UNIT_DEPOSIT=NULL;
	END IF;
	IF ACCESS_CARD='' THEN 
		SET ACCESS_CARD=NULL;
	END IF;
	IF COMMENTS='' THEN
		SET COMMENTS=NULL;
	END IF;
	IF ROOMTYPE='' OR ROOMTYPE=NULL THEN
		SET ROOMTYPE=NULL;
	END IF;
	IF STAMPDUTYTYPE='' OR STAMPDUTYTYPE=NULL THEN
		SET STAMPDUTYTYPE=NULL;
	END IF;
	SET OLD_DEPOSIT = (SELECT UD_DEPOSIT FROM UNIT_DETAILS WHERE UNIT_ID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO = UNIT_NUMBER));
	SET UNIT_DEPOSIT =(SELECT(IF (OLD_DEPOSIT IS NOT NULL,OLD_DEPOSIT,UNIT_DEPOSIT)));
	IF EXISTS(SELECT UNIT_NO FROM VW_ACTIVE_UNIT WHERE UNIT_NO = UNIT_NUMBER)THEN
		IF (ACCESS_CARD IS NOT NULL OR ROOMTYPE IS NOT NULL OR STAMP_DUTY_DATE IS NOT NULL OR STAMPDUTYTYPE IS NOT NULL 
		OR STAMP_DUTY_AMOUNT IS NOT NULL OR COMMENTS IS NOT NULL OR UNIT_DEPOSIT IS NOT NULL)THEN
			IF (ROOMTYPE IS NOT NULL) THEN
				IF EXISTS(SELECT URTD_ROOM_TYPE FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE) THEN
					SET ROOM_TYPE = (SELECT URTD_ID FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE);
				END IF;
				IF NOT EXISTS(SELECT URTD_ROOM_TYPE FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE) THEN
					INSERT INTO UNIT_ROOM_TYPE_DETAILS (URTD_ROOM_TYPE, ULD_ID) VALUES (ROOMTYPE, USERSTAMP_ID);
					SET CONFIRMATIONFLAG = 1;
					SET ROOM_TYPE = (SELECT URTD_ID FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOMTYPE);
				END IF;
			END IF;
			IF STAMPDUTYTYPE IS NOT NULL THEN
				IF EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
				IF NOT EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					INSERT INTO UNIT_STAMP_DUTY_TYPE (USDT_DATA, ULD_ID) VALUES (STAMPDUTYTYPE, USERSTAMP_ID);
					SET CONFIRMATIONFLAG =1;
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
			END IF;
			IF(ACCESS_CARD IS NULL AND(ROOM_TYPE IS NOT NULL OR STAMP_DUTY_DATE IS NOT NULL OR STAMP_DUTY_TYPE IS NOT NULL OR STAMP_DUTY_AMOUNT IS NOT NULL OR COMMENTS IS NOT NULL))THEN
				INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,UASD_ACCESS_CARD,URTD_ID,UASD_STAMPDUTYDATE,USDT_ID,UASD_STAMPDUTYAMT,ULD_ID,UASD_COMMENTS)
				VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER),ACCESS_CARD,ROOM_TYPE,STAMP_DUTY_DATE,STAMP_DUTY_TYPE,STAMP_DUTY_AMOUNT,USERSTAMP_ID,COMMENTS);
				SET CONFIRMATIONFLAG = 1;
			END IF;
			IF (ACCESS_CARD IS NOT NULL)THEN
				INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,UASD_ACCESS_CARD,URTD_ID,UASD_STAMPDUTYDATE,USDT_ID,UASD_STAMPDUTYAMT,ULD_ID,UASD_COMMENTS,UASD_ACCESS_INVENTORY)
				VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER),ACCESS_CARD,ROOM_TYPE,STAMP_DUTY_DATE,STAMP_DUTY_TYPE,STAMP_DUTY_AMOUNT,USERSTAMP_ID,COMMENTS,'X');
				SET CONFIRMATIONFLAG = 1;
			END IF; 
			UPDATE UNIT_DETAILS SET UD_DEPOSIT = UNIT_DEPOSIT WHERE UNIT_ID =(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER);
			SET CONFIRMATIONFLAG = 1;
		END IF;
	END IF;
	IF EXISTS(SELECT UNIT_NO FROM VW_NON_ACTIVE_UNIT WHERE UNIT_NO = UNIT_NUMBER)THEN
		IF(STAMPDUTYTYPE IS NOT NULL OR STAMP_DUTY_DATE IS NOT NULL OR STAMP_DUTY_AMOUNT IS NOT NULL OR COMMENTS IS NOT NULL)THEN
			IF STAMPDUTYTYPE IS NOT NULL THEN
				IF EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
				IF NOT EXISTS(SELECT USDT_DATA FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE) THEN
					INSERT INTO UNIT_STAMP_DUTY_TYPE (USDT_DATA, ULD_ID) VALUES (STAMPDUTYTYPE, USERSTAMP_ID);
					SET CONFIRMATIONFLAG = 1;
					SET STAMP_DUTY_TYPE = (SELECT USDT_ID FROM UNIT_STAMP_DUTY_TYPE WHERE USDT_DATA=STAMPDUTYTYPE);
				END IF;
			END IF;
			INSERT INTO UNIT_ACCESS_STAMP_DETAILS(UNIT_ID,UASD_STAMPDUTYDATE,USDT_ID,UASD_STAMPDUTYAMT,ULD_ID,UASD_COMMENTS)
			VALUES((SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER),STAMP_DUTY_DATE,STAMP_DUTY_TYPE,STAMP_DUTY_AMOUNT,USERSTAMP_ID,COMMENTS);
			SET CONFIRMATIONFLAG = 1;
		END IF;
	END IF;
COMMIT;
END;
