DROP PROCEDURE IF EXISTS SP_UNIT_CHECK_TRANSACTION;
CREATE PROCEDURE SP_UNIT_CHECK_TRANSACTION(
IN UNITID INTEGER,
IN USERSTAMP VARCHAR(50),
OUT INV_MIN_DATE DATE,
OUT INV_MAX_DATE DATE,
OUT UNIT_CHECK_TRANS TEXT,
OUT CUST_DTLS TEXT,
OUT CUST_LP_DTLS TEXT)
BEGIN
	DECLARE USERSTAMP_ID INTEGER;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE MINID INTEGER;
	DECLARE MAXID INTEGER;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));	
	SET UNIT_CHECK_TRANS = (SELECT CONCAT('TEMP_UNIT_CHECK_TRANS','_',SYSDATEANDULDID));
	SET @UNIT_CHECK_TRANS_CREATEQUERY = (SELECT CONCAT('CREATE TABLE ',UNIT_CHECK_TRANS,'(
	ID INTEGER AUTO_INCREMENT,
	TABLENAME TEXT,
	UNIT_ID INTEGER,
	UNIT_NO SMALLINT(4),
	UD_START_DATE DATE,
	UD_END_DATE DATE,
	MINIMUM_DATE DATE,
	MAXIMUM_DATE DATE,
	PRIMARY KEY(ID))'));
	PREPARE UNIT_CHECK_TRANS_CREATEQUERY_STMT FROM @UNIT_CHECK_TRANS_CREATEQUERY;
	EXECUTE UNIT_CHECK_TRANS_CREATEQUERY_STMT;
	SET CUST_DTLS = (SELECT CONCAT('TEMP_CUST_DTLS','_',SYSDATEANDULDID));
	SET @CREATE_CUST_DTLS = (SELECT CONCAT('CREATE TABLE ',CUST_DTLS,'(
	ID INTEGER AUTO_INCREMENT,
	UNIT_ID INTEGER,
	CUSTOMER_ID INTEGER,
	REC_VER INTEGER,
	PRIMARY KEY(ID))'));
	PREPARE CREATE_CUST_DTLS_STMT FROM @CREATE_CUST_DTLS;
	EXECUTE CREATE_CUST_DTLS_STMT;
	SET CUST_LP_DTLS = (SELECT CONCAT('TEMP_CUST_LP_DTLS','_',SYSDATEANDULDID));
	SET @CREATE_CUST_LP_DTLS = (SELECT CONCAT('CREATE TABLE ',CUST_LP_DTLS,'(
	ID INTEGER AUTO_INCREMENT,
	UNIT_ID INTEGER,
	CUSTOMER_ID INTEGER,
	REC_VER INTEGER,
	STARTDATE DATE,
	ENDDATE DATE,
	PRIMARY KEY(ID))'));
	PREPARE CREATE_CUST_LP_DTLS_STMT FROM @CREATE_CUST_LP_DTLS;
	EXECUTE CREATE_CUST_LP_DTLS_STMT;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_UNIT WHERE UNIT_ID = UNITID) THEN
		SET @UNIT_EXPENSE = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_UNIT",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EU_INVOICE_DATE FROM EXPENSE_UNIT WHERE UNIT_ID = ',UNITID,' ORDER BY EU_INVOICE_DATE ASC LIMIT 1),
		(SELECT EU_INVOICE_DATE FROM EXPENSE_UNIT WHERE UNIT_ID = ',UNITID,' ORDER BY EU_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE UNIT_EXPENSE_STMT FROM @UNIT_EXPENSE;
		EXECUTE UNIT_EXPENSE_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID = UNITID) THEN
		SET @EXP_ELECTRICITY = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_ELECTRICITY",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EE.EE_INVOICE_DATE FROM EXPENSE_ELECTRICITY EE,EXPENSE_DETAIL_ELECTRICITY EDE,UNIT T WHERE EDE.EDE_ID=EE.EDE_ID AND T.UNIT_ID=EDE.UNIT_ID AND T.UNIT_ID = ',UNITID,' ORDER BY EE.EE_INVOICE_DATE ASC LIMIT 1),
		(SELECT EE.EE_INVOICE_DATE FROM EXPENSE_ELECTRICITY EE,EXPENSE_DETAIL_ELECTRICITY EDE,UNIT T WHERE EDE.EDE_ID=EE.EDE_ID AND T.UNIT_ID=EDE.UNIT_ID AND T.UNIT_ID = ',UNITID,' ORDER BY EE.EE_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_ELECTRICITY_STMT FROM @EXP_ELECTRICITY;
		EXECUTE EXP_ELECTRICITY_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_STARHUB WHERE UNIT_ID = UNITID) THEN
	SET @EXP_STARHUB = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_STARHUB",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT ESH.ESH_INVOICE_DATE FROM EXPENSE_STARHUB ESH,EXPENSE_DETAIL_STARHUB EDSH,UNIT T WHERE EDSH.EDSH_ID=ESH.EDSH_ID AND T.UNIT_ID=EDSH.UNIT_ID AND T.UNIT_ID = ',UNITID,' ORDER BY ESH.ESH_INVOICE_DATE ASC LIMIT 1),
		(SELECT ESH.ESH_INVOICE_DATE FROM EXPENSE_STARHUB ESH,EXPENSE_DETAIL_STARHUB EDSH,UNIT T WHERE EDSH.EDSH_ID=ESH.EDSH_ID AND T.UNIT_ID=EDSH.UNIT_ID AND T.UNIT_ID = ',UNITID,' ORDER BY ESH.ESH_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_STARHUB_STMT FROM @EXP_STARHUB;
		EXECUTE EXP_STARHUB_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_DIGITAL_VOICE WHERE UNIT_ID = UNITID) THEN
		SET @EXP_DIGITALVOICE = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_DIGITAL_VOICE",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EDV.EDV_INVOICE_DATE FROM EXPENSE_DIGITAL_VOICE EDV,EXPENSE_DETAIL_DIGITAL_VOICE EDDV,UNIT T WHERE EDDV.EDDV_ID=EDV.EDDV_ID AND T.UNIT_ID=EDDV.UNIT_ID  AND T.UNIT_ID = ',UNITID,' ORDER BY EDV.EDV_INVOICE_DATE ASC LIMIT 1),
		(SELECT EDV.EDV_INVOICE_DATE FROM EXPENSE_DIGITAL_VOICE EDV,EXPENSE_DETAIL_DIGITAL_VOICE EDDV,UNIT T WHERE EDDV.EDDV_ID=EDV.EDDV_ID AND T.UNIT_ID=EDDV.UNIT_ID  AND T.UNIT_ID = ',UNITID,' ORDER BY EDV.EDV_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_DIGITALVOICE_STMT FROM @EXP_DIGITALVOICE;
		EXECUTE EXP_DIGITALVOICE_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_FACILITY_USE WHERE UNIT_ID = UNITID) THEN
		SET @EXP_FACILITY_USE = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_FACILITY_USE",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EFU_INVOICE_DATE FROM EXPENSE_FACILITY_USE WHERE UNIT_ID = ',UNITID,' ORDER BY EFU_INVOICE_DATE ASC LIMIT 1),
		(SELECT EFU_INVOICE_DATE FROM EXPENSE_FACILITY_USE WHERE UNIT_ID = ',UNITID,' ORDER BY EFU_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_FACILITY_USE_STMT FROM @EXP_FACILITY_USE;
		EXECUTE EXP_FACILITY_USE_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_CARPARK WHERE UNIT_ID = UNITID) THEN
		SET @EXP_CARPARK = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_CARPARK",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT ECP.ECP_INVOICE_DATE FROM EXPENSE_CARPARK ECP,EXPENSE_DETAIL_CARPARK EDCP,UNIT T WHERE EDCP.EDCP_ID=ECP.EDCP_ID AND T.UNIT_ID=EDCP.UNIT_ID  AND T.UNIT_ID = ',UNITID,' ORDER BY ECP.ECP_INVOICE_DATE ASC LIMIT 1),
		(SELECT ECP.ECP_INVOICE_DATE FROM EXPENSE_CARPARK ECP,EXPENSE_DETAIL_CARPARK EDCP,UNIT T WHERE EDCP.EDCP_ID=ECP.EDCP_ID AND T.UNIT_ID=EDCP.UNIT_ID  AND T.UNIT_ID = ',UNITID,' ORDER BY ECP.ECP_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_CARPARK_STMT FROM @EXP_CARPARK;
		EXECUTE EXP_CARPARK_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_MOVING_IN_AND_OUT  WHERE UNIT_ID = UNITID) THEN
		SET @EXP_MINOUT = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_MOVING_IN_AND_OUT ",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EMIO_INVOICE_DATE FROM EXPENSE_MOVING_IN_AND_OUT  WHERE UNIT_ID = ',UNITID,' ORDER BY EMIO_INVOICE_DATE ASC LIMIT 1),
		(SELECT EMIO_INVOICE_DATE FROM EXPENSE_MOVING_IN_AND_OUT  WHERE UNIT_ID = ',UNITID,' ORDER BY EMIO_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_MINOUT_STMT FROM @EXP_MINOUT;
		EXECUTE EXP_MINOUT_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_AIRCON_SERVICE WHERE UNIT_ID = UNITID) THEN
		SET @EXP_AIRCON = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_AIRCON_SERVICE",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EAS.EAS_DATE FROM EXPENSE_AIRCON_SERVICE EAS,EXPENSE_DETAIL_AIRCON_SERVICE EDAS,UNIT T WHERE EDAS.EDAS_ID=EAS.EDAS_ID AND T.UNIT_ID=EDAS.UNIT_ID AND T.UNIT_ID = ',UNITID,' ORDER BY EAS.EAS_DATE ASC LIMIT 1),
		(SELECT EAS.EAS_DATE FROM EXPENSE_AIRCON_SERVICE EAS,EXPENSE_DETAIL_AIRCON_SERVICE EDAS,UNIT T WHERE EDAS.EDAS_ID=EAS.EDAS_ID AND T.UNIT_ID=EDAS.UNIT_ID AND T.UNIT_ID = ',UNITID,' ORDER BY EAS.EAS_DATE DESC LIMIT 1))'));
		PREPARE EXP_AIRCON_STMT FROM @EXP_AIRCON;
		EXECUTE EXP_AIRCON_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_PURCHASE_NEW_CARD  WHERE UNIT_ID = UNITID) THEN
		SET @EXP_PURCHASE_CARD = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_PURCHASE_NEW_CARD ",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EPNC_INVOICE_DATE FROM EXPENSE_PURCHASE_NEW_CARD  WHERE UNIT_ID = ',UNITID,' ORDER BY EPNC_INVOICE_DATE ASC LIMIT 1),
		(SELECT EPNC_INVOICE_DATE FROM EXPENSE_PURCHASE_NEW_CARD  WHERE UNIT_ID = ',UNITID,' ORDER BY EPNC_INVOICE_DATE DESC LIMIT 1))'));
		PREPARE EXP_PURCHASE_CARD_STMT FROM @EXP_PURCHASE_CARD;
		EXECUTE EXP_PURCHASE_CARD_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE UNIT_ID = UNITID) THEN
		SET @EXP_HKP = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("EXPENSE_HOUSEKEEPING_PAYMENT ",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT EHKP_FOR_PERIOD FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE UNIT_ID = ',UNITID,' ORDER BY EHKP_FOR_PERIOD ASC LIMIT 1),
		(SELECT EHKP_FOR_PERIOD FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE UNIT_ID = ',UNITID,' ORDER BY EHKP_FOR_PERIOD DESC LIMIT 1))'));
		PREPARE EXP_HKP_STMT FROM @EXP_HKP;
		EXECUTE EXP_HKP_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM PAYMENT_DETAILS  WHERE UNIT_ID = UNITID) THEN
		SET @PAYMENT = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("PAYMENT_DETAILS ",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT PD_FOR_PERIOD FROM PAYMENT_DETAILS  WHERE UNIT_ID = ',UNITID,' ORDER BY PD_FOR_PERIOD ASC LIMIT 1),
		(SELECT PD_FOR_PERIOD FROM PAYMENT_DETAILS  WHERE UNIT_ID = ',UNITID,' ORDER BY PD_FOR_PERIOD DESC LIMIT 1))'));
		PREPARE PAYMENT_STMT FROM @PAYMENT;
		EXECUTE PAYMENT_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM CUSTOMER_ENTRY_DETAILS  WHERE UNIT_ID = UNITID) THEN
		SET @INSERT_CUST_DTLS = (SELECT CONCAT('INSERT INTO ',CUST_DTLS,'(UNIT_ID,CUSTOMER_ID,REC_VER) 
		SELECT UNIT_ID,CUSTOMER_ID,CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID = ',UNITID,''));
		PREPARE INSERT_CUST_DTLS_STMT FROM @INSERT_CUST_DTLS;
		EXECUTE INSERT_CUST_DTLS_STMT;
	END IF;
	SET @MINIMUM_ID =(SELECT CONCAT('SELECT MIN(ID) INTO @MIN_ID FROM ',CUST_DTLS,''));
	PREPARE MINIMUM_ID_STMT FROM @MINIMUM_ID;
	EXECUTE MINIMUM_ID_STMT;
	SET @MAXIMUM_ID = (SELECT CONCAT('SELECT MAX(ID) INTO @MAX_ID FROM ',CUST_DTLS,''));
	PREPARE MAXIMUM_ID_STMT FROM @MAXIMUM_ID;
	EXECUTE MAXIMUM_ID_STMT;
	SET MINID = @MIN_ID;
	SET MAXID = @MAX_ID;
	WHILE (MINID <= MAXID)DO
		SET @INSERT_CUST_LP_DTLS = (SELECT CONCAT('INSERT INTO ',CUST_LP_DTLS,' (UNIT_ID,CUSTOMER_ID,REC_VER,STARTDATE,ENDDATE) 
		SELECT T.UNIT_ID,CLP.CUSTOMER_ID,CLP.CED_REC_VER,CLP.CLP_STARTDATE,CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS CLP,
		',CUST_DTLS,' T WHERE CLP.CUSTOMER_ID = T.CUSTOMER_ID AND T.REC_VER = CLP.CED_REC_VER AND T.ID = ',MINID,''));
		PREPARE INSERT_CUST_LP_DTLS_STMT FROM @INSERT_CUST_LP_DTLS;
		EXECUTE INSERT_CUST_LP_DTLS_STMT;
		SET MINID = MINID+1;
	END WHILE;
	IF EXISTS(SELECT UNIT_ID FROM CUSTOMER_ENTRY_DETAILS  WHERE UNIT_ID = UNITID) THEN
		SET @CUST_SDATE = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("CUSTOMER_SLP_DETAILS",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT STARTDATE FROM ',CUST_LP_DTLS,'  WHERE UNIT_ID = ',UNITID,' ORDER BY STARTDATE ASC LIMIT 1),
		(SELECT STARTDATE FROM ',CUST_LP_DTLS,'  WHERE UNIT_ID = ',UNITID,' ORDER BY STARTDATE DESC LIMIT 1))'));
		PREPARE CUST_SDATE_STMT FROM @CUST_SDATE;
		EXECUTE CUST_SDATE_STMT;
	END IF;
	IF EXISTS(SELECT UNIT_ID FROM CUSTOMER_ENTRY_DETAILS  WHERE UNIT_ID = UNITID) THEN
		SET @CUST_EDATE = (SELECT CONCAT('INSERT INTO ',UNIT_CHECK_TRANS,'(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,MINIMUM_DATE,MAXIMUM_DATE) VALUES
		("CUSTOMER_ELP_DETAILS",',UNITID,',
		(SELECT UNIT_NO FROM UNIT WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID=',UNITID,'),
		(SELECT ENDDATE FROM ',CUST_LP_DTLS,'  WHERE UNIT_ID = ',UNITID,' ORDER BY ENDDATE ASC LIMIT 1),
		(SELECT ENDDATE FROM ',CUST_LP_DTLS,'  WHERE UNIT_ID = ',UNITID,' ORDER BY ENDDATE DESC LIMIT 1))'));
		PREPARE CUST_EDATE_STMT FROM @CUST_EDATE;
		EXECUTE CUST_EDATE_STMT;
	END IF;
	SET @CHECK_TRANSACTION_MINDATE = (SELECT CONCAT('SELECT MIN(MINIMUM_DATE) INTO @TMINDATE FROM ',UNIT_CHECK_TRANS,''));
	PREPARE CHECK_TRANSACTION_MINDATE_STMT FROM @CHECK_TRANSACTION_MINDATE;
	EXECUTE CHECK_TRANSACTION_MINDATE_STMT;
	SET @CHECK_TRANSACTION_MAXDATE = (SELECT CONCAT('SELECT MAX(MAXIMUM_DATE) INTO @TMAXDATE FROM ',UNIT_CHECK_TRANS,''));
	PREPARE CHECK_TRANSACTION_MAXDATE_STMT FROM @CHECK_TRANSACTION_MAXDATE;
	EXECUTE CHECK_TRANSACTION_MAXDATE_STMT;
	SET INV_MIN_DATE = @TMINDATE;
	SET INV_MAX_DATE = @TMAXDATE;
	IF(INV_MIN_DATE IS NULL)THEN
		SET INV_MIN_DATE = (SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID = UNITID);
	END IF;
	IF(INV_MAX_DATE IS NULL)THEN
		SET INV_MAX_DATE = (SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID = UNITID);
	END IF;
END;
