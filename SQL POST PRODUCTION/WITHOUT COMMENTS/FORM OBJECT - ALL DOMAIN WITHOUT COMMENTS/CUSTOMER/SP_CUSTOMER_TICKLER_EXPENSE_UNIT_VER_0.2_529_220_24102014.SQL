DROP PROCEDURE IF EXISTS SP_CUSTOMER_TICKLER_EXPENSE_UNIT;
CREATE PROCEDURE SP_CUSTOMER_TICKLER_EXPENSE_UNIT()
BEGIN
DECLARE FINAL_UNITNO SMALLINT(4) UNSIGNED ZEROFILL;
DECLARE FIRST_NAME_VALUE TEXT;
DECLARE TICKLERVALUE INTEGER;
DECLARE CONFIGDATA TEXT;
DECLARE CONFIGVALUE TEXT;
DECLARE TIMESTAMP_VALUE VARCHAR(50);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
EU_OV_CS_LOOP : LOOP
				CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_OLD_VALUE,@VALUE,@REMAINING_STRING);
				SELECT @REMAINING_STRING INTO @TH_OLD_VALUE;
				CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
				IF UPPER(@COLUMN_NAME) = 'UNIT_ID' THEN
					SELECT UNIT_NO INTO @UNIT_NO FROM UNIT WHERE UNIT_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('UNIT_NO=',@UNIT_NO);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
				IF UPPER(@COLUMN_NAME) = 'ECN_ID' THEN
					SELECT ECN_DATA INTO @OLDECNATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID = @COLUMN_VALUE;
					SET @REPLACE_STRING = CONCAT('ECN_DATA=',@OLDECNATA);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
				END IF;
				LABEL1: BEGIN
					IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
						SET @OLD_TICKLER=(SELECT CONCAT('SELECT TH_OLD_VALUE INTO @OLDTICKLER FROM TICKLER_HISTORY WHERE TH_ID=',@TH_ID));
						PREPARE OLDTICKLER_STMT FROM @OLD_TICKLER;
						EXECUTE OLDTICKLER_STMT;
						SET TICKLERVALUE=(SELECT LOCATE('CUSTOMER_ID=<NULL>',@OLDTICKLER,1));
						IF(TICKLERVALUE=0) THEN
							IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
								SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        					END IF;
        					SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        					PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        					EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        					SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        					IF (FIRST_NAME_VALUE IS NOT NULL) THEN
								SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
								PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        						EXECUTE SELECT_CUSTOMER_NAME_STMT;
        		        	END IF;
							SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
							SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
						ELSE
						LEAVE LABEL1;
						END IF;
					END IF;
				END LABEL1;
				IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
					SELECT ULD_LOGINID INTO @OLDLOGINIDEXPENSE FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  	SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@OLDLOGINIDEXPENSE);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
                END IF;	
    			IF UPPER(@COLUMN_NAME) = 'EU_TIMESTAMP' THEN
     				SET @SELECT_CONFIG_DATA=(SELECT CONCAT('SELECT CCN_DATA INTO @CONFIG_DATA FROM CUSTOMER_CONFIGURATION WHERE CCN_ID = 44'));
					PREPARE SELECT_CONFIG_DATA_STMT FROM @SELECT_CONFIG_DATA;
					EXECUTE SELECT_CONFIG_DATA_STMT;
					SET CONFIGDATA = @CONFIG_DATA;
			     	SET @SELECT_STR_DATA=(SELECT CONCAT('SELECT SUBSTRING_INDEX("',CONFIGDATA,'","+","-1") INTO @STR_DATA'));
					PREPARE SELECT_STR_DATA_STMT FROM @SELECT_STR_DATA;
					EXECUTE SELECT_STR_DATA_STMT;
     				SET CONFIGVALUE = @STR_DATA;
     				SET @SELECT_STR_VALUE=(SELECT CONCAT('SELECT REPLACE("',CONFIGVALUE,'","'"'"'","") INTO @STR_VALUE'));
					PREPARE SELECT_STR_VALUE_STMT FROM @SELECT_STR_VALUE;
					EXECUTE SELECT_STR_VALUE_STMT;
     				SET TIMESTAMP_VALUE = @STR_VALUE;
     				SET @UPDATETIMESTAMP=(SELECT CONCAT('SELECT CONVERT_TZ(@COLUMN_VALUE, "+0:00","+',TIMESTAMP_VALUE,'") INTO @TIMESTAMP_VALUE'));
     				PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
     				EXECUTE UPDATETIMESTAMPSTMT;   
                  	SET @REPLACE_STRING = CONCAT('EU_TIMESTAMP=',@TIMESTAMP_VALUE);
					SELECT REPLACE(@V_TEMP_OLD_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_OLD_VALUE;
     				LEAVE EU_OV_CS_LOOP;
     			END IF;
				IF @TH_OLD_VALUE IS NULL THEN
			        LEAVE  EU_OV_CS_LOOP;
		        END IF;
	        END LOOP;             
           IF @TH_NEW_VALUE IS NOT NULL THEN
				SET @V_TEMP_NEW_VALUE = @TH_NEW_VALUE;
				EU_NV_CS_LOOP : LOOP
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TH_NEW_VALUE,@VALUE,@REMAINING_STRING);
					SELECT @REMAINING_STRING INTO @TH_NEW_VALUE;
					CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('=',@VALUE,@COLUMN_NAME,@COLUMN_VALUE);
					IF UPPER(@COLUMN_NAME) = 'UNIT_ID' THEN
						SELECT UNIT_NO INTO @NEWUNIT_NO FROM UNIT WHERE UNIT_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('UNIT_NO=',@NEWUNIT_NO);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'ECN_ID' THEN
						SELECT ECN_DATA INTO @NEWECNATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID = @COLUMN_VALUE;
						SET @REPLACE_STRING = CONCAT('ECN_DATA=',@NEWECNATA);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'CUSTOMER_ID' THEN
						IF EXISTS (SELECT CUSTOMER_FIRST_NAME FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE) THEN
							SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM CUSTOMER WHERE CUSTOMER_ID = @COLUMN_VALUE;
        				END IF;
       					SET @SELECT_CUSTOMER_FIRST_NAME=(SELECT CONCAT('SELECT CUSTOMER_FIRST_NAME INTO @FIRSTNAMEVALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
        				PREPARE SELECT_CUSTOMER_FIRST_NAME_STMT FROM @SELECT_CUSTOMER_FIRST_NAME;
        				EXECUTE SELECT_CUSTOMER_FIRST_NAME_STMT;
        				SET FIRST_NAME_VALUE=@FIRSTNAMEVALUE;
        				IF (FIRST_NAME_VALUE IS NOT NULL) THEN
							SET @SELECT_CUSTOMER_NAME=(SELECT CONCAT ('SELECT CUSTOMER_FIRST_NAME,CUSTOMER_LAST_NAME INTO @FIRST_NAME_VALUE,@LAST_NAME_VALUE FROM ',TEMP_CUSTOMER,' WHERE CUSTOMER_ID = @COLUMN_VALUE'));
							PREPARE SELECT_CUSTOMER_NAME_STMT FROM @SELECT_CUSTOMER_NAME;
        					EXECUTE SELECT_CUSTOMER_NAME_STMT;
        		        END IF;
						SET @REPLACE_STRING = CONCAT('CUSTOMER_FIRST_NAME=',@FIRST_NAME_VALUE,',CUSTOMER_LAST_NAME=',@LAST_NAME_VALUE);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
					END IF;
					IF UPPER(@COLUMN_NAME) = 'ULD_ID' THEN
						SELECT ULD_LOGINID INTO @NEWLOGINIDEXPENSE FROM USER_LOGIN_DETAILS WHERE ULD_ID = @COLUMN_VALUE;
                  		SET @REPLACE_STRING = CONCAT('ULD_LOGINID=',@NEWLOGINIDEXPENSE);
						SELECT REPLACE(@V_TEMP_NEW_VALUE,@VALUE,@REPLACE_STRING) INTO @V_TEMP_NEW_VALUE;
						LEAVE EU_NV_CS_LOOP;
                	END IF;
					IF @TH_NEW_VALUE IS NULL THEN
			        	LEAVE  EU_NV_CS_LOOP; 
		        	END IF;
	        	END LOOP;  
			ELSE
				SET @V_TEMP_NEW_VALUE = NULL;
			END IF;
COMMIT;
END;
