DROP PROCEDURE IF EXISTS SP_CUSTOMER_MANUAL_TERMINATION_PTDSYSDATE_UPDATE;
CREATE PROCEDURE SP_CUSTOMER_MANUAL_TERMINATION_PTDSYSDATE_UPDATE(
IN CT_CUSTOMER_ID INTEGER,
IN CT_REC_VER INTEGER,
IN MIN_RECVER INTEGER,
IN MAX_RECVER INTEGER,
IN PRETERMINATE_DATE DATE,
IN USERSTAMP_ID INTEGER,
OUT TERMRESULT_FLAG INTEGER)
BEGIN
	DECLARE TERM_UASDID INTEGER DEFAULT NULL;	
	DECLARE GUEST_CARD_COUNT INTEGER;
	DECLARE CARD_ON INTEGER;
	DECLARE TERM_REC_VER INTEGER;
	DECLARE TERM_END_DATE DATE;
	DECLARE TERM_PTD DATE;
	DECLARE TERM_GUEST_CARD_COUNT INTEGER;
	DECLARE TERM_PTD_NULL_COUNT INTEGER;
	DECLARE TERM_NULL_PTD DATE;
	DECLARE TERM_NULL_ENDATE DATE;
	DECLARE TERM_NULL_STARTDATE DATE;
	DECLARE TERM_NULL_NRVSTARTDATE DATE;
	DECLARE TICK_CARD_NO  VARCHAR(7);
	DECLARE TICK_OLD_VALUE  TEXT;
	DECLARE TICK_NEW_VALUE  TEXT;
	DECLARE TICK_GUEST_CARD  VARCHAR(10);
	DECLARE TERM_CUST_COMMTS  TEXT;
	DECLARE TERM_MAX_CUSTRV  INTEGER;
	DECLARE TICK_PTD TEXT;
	DECLARE OLD_ULD_ID INTEGER;
	DECLARE OLD_TIMESTAMP TIMESTAMP;
	DECLARE TERM_NULL_NRVENDATE DATE;
	DECLARE PTDFLAG INTEGER DEFAULT 0;
	DECLARE EDFLAG INTEGER DEFAULT 0;
	DECLARE MIN_CTDID INTEGER DEFAULT 0;
	DECLARE MAX_CTDID INTEGER DEFAULT 0;
	DECLARE CLP_GSTVAL VARCHAR(10);
	DECLARE CLP_UASDIDVAL INTEGER;
	DECLARE TICK_ACS_OLD_VALUE TEXT;
	DECLARE GST_NULL_FLAG INTEGER DEFAULT 0;
	RECVER_LOOP:  LOOP
					SET TERM_UASDID = (SELECT UASD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL ORDER BY CLP_ID DESC LIMIT 1);
					SET TICK_CARD_NO=(SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=TERM_UASDID);		
					IF TERM_UASDID IS NOT NULL THEN
						IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL) THEN
							UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_TERMINATE='X' WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=CT_REC_VER AND CLP_GUEST_CARD IS NULL ORDER BY CTD.CLP_ID;
							SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=TERM_UASDID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL);
							SET OLD_TIMESTAMP=(SELECT CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=TERM_UASDID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL);
							IF(USERSTAMP_ID!=OLD_ULD_ID) THEN
								SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=TERM_UASDID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL),',UASD_ID=',TERM_UASDID,',CACD_GUEST_CARD=null',',CACD_VALID_TILL=null,ACN_ID=null',',ULD_ID=',OLD_ULD_ID,',CACD_TIMESTAMP=',OLD_TIMESTAMP));
							ELSE
								SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE UASD_ID=TERM_UASDID AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL),',UASD_ID=',TERM_UASDID,',CACD_GUEST_CARD=null',',CACD_VALID_TILL=null,ACN_ID=null',',CACD_TIMESTAMP=',OLD_TIMESTAMP));
							END IF;	
							UPDATE CUSTOMER_ACCESS_CARD_DETAILS SET CACD_VALID_TILL=PRETERMINATE_DATE, ACN_ID=4, ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL;
							UPDATE UNIT_ACCESS_STAMP_DETAILS SET UASD_ACCESS_ACTIVE=NULL, UASD_ACCESS_INVENTORY='X' WHERE UASD_ID=TERM_UASDID;							
							SET TICK_NEW_VALUE=(SELECT CONCAT('CACD_VALID_TILL=',PRETERMINATE_DATE,',ACN_ID=4'));
							INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,13,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
							SET TERMRESULT_FLAG=1;
						END IF;						
					ELSE
						UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_TERMINATE='X' WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=CT_REC_VER AND CLP_GUEST_CARD IS NULL ORDER BY CTD.CLP_ID;
						SET TERMRESULT_FLAG=1;
					END IF;
					IF MIN_RECVER>CT_REC_VER THEN					
						SET GUEST_CARD_COUNT=(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND ((CLP_PRETERMINATE_DATE IS NOT NULL AND CLP_PRETERMINATE_DATE>=CURRENT_DATE())OR(CLP_PRETERMINATE_DATE IS NULL AND CLP_ENDDATE>=CURRENT_DATE())));
						GUESTCARD_LOOP:  LOOP
							IF GUEST_CARD_COUNT <= 0 THEN
								LEAVE GUESTCARD_LOOP;
							END IF;
							SET CARD_ON=GUEST_CARD_COUNT-1;
							SET TERM_UASDID = (SELECT UASD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND ((CLP_PRETERMINATE_DATE IS NOT NULL AND CLP_PRETERMINATE_DATE>=CURRENT_DATE())OR(CLP_PRETERMINATE_DATE IS NULL AND CLP_ENDDATE>=CURRENT_DATE())) ORDER BY CLP_ID DESC LIMIT CARD_ON,1);
							SET TICK_PTD=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID ORDER BY CLP_ID DESC LIMIT 1);
							IF TICK_PTD IS NULL THEN 
								SET TICK_PTD='null';
							END IF;							
							IF(SELECT COUNT(UASD_ID) FROM CUSTOMER_LP_DETAILS WHERE UASD_ID=TERM_UASDID AND CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=CT_REC_VER AND CLP_GUEST_CARD IS NOT NULL AND ((CLP_PRETERMINATE_DATE IS NOT NULL AND CLP_PRETERMINATE_DATE>=CURRENT_DATE())OR(CLP_PRETERMINATE_DATE IS NULL AND CLP_ENDDATE>=CURRENT_DATE())))=0 THEN
									SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=',PRETERMINATE_DATE));					
									IF TERM_UASDID IS NOT NULL THEN
									SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
									SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										IF(USERSTAMP_ID!=OLD_ULD_ID) THEN
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND UASD_ID=TERM_UASDID AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										ELSE
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND UASD_ID=TERM_UASDID AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										END IF;	
										INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,14,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
									END IF;
								UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_PRETERMINATE_DATE=PRETERMINATE_DATE, CTD.ULD_ID=USERSTAMP_ID WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=MIN_RECVER AND CTD.CLP_GUEST_CARD IS NOT NULL AND UASD_ID=TERM_UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1;
								UPDATE CUSTOMER_ACCESS_CARD_DETAILS SET CACD_VALID_TILL=PRETERMINATE_DATE, ACN_ID=4, ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL;
								UPDATE UNIT_ACCESS_STAMP_DETAILS SET UASD_ACCESS_ACTIVE=NULL, UASD_ACCESS_INVENTORY='X' WHERE UASD_ID=TERM_UASDID;	
								SET TERMRESULT_FLAG=1;	
							END IF;
							SET GUEST_CARD_COUNT=(GUEST_CARD_COUNT-1);
						END LOOP;
					END IF;
					SET TERM_UASDID = NULL;
					IF MIN_RECVER=MAX_RECVER THEN
						LEAVE RECVER_LOOP;
					END IF;
					SET MIN_RECVER=MIN_RECVER+1;
				END LOOP;
				SET TERM_GUEST_CARD_COUNT=(SELECT COUNT(*) FROM CUSTOMER_ACCESS_CARD_DETAILS CACD WHERE CACD.CUSTOMER_ID=CT_CUSTOMER_ID AND CACD.ACN_ID IS NULL AND CACD.CACD_VALID_TILL IS NULL);
				TERMGUESTCARD_LOOP:  LOOP
					IF TERM_GUEST_CARD_COUNT <= 0 THEN
						LEAVE TERMGUESTCARD_LOOP;
					END IF;					
					SET CARD_ON=TERM_GUEST_CARD_COUNT-1;					
					SET TERM_UASDID = (SELECT UASD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS CACD WHERE CACD.CUSTOMER_ID=CT_CUSTOMER_ID  AND CACD.ACN_ID IS NULL AND CACD.CACD_VALID_TILL IS NULL ORDER BY CACD.CACD_ID DESC LIMIT CARD_ON,1);
					SET TICK_CARD_NO=(SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=TERM_UASDID);
					SET TICK_GUEST_CARD= (SELECT CACD_GUEST_CARD FROM CUSTOMER_ACCESS_CARD_DETAILS CACD WHERE CACD.CUSTOMER_ID=CT_CUSTOMER_ID  AND CACD.ACN_ID IS NULL AND CACD.CACD_VALID_TILL IS NULL ORDER BY CACD.CACD_ID DESC LIMIT CARD_ON,1);
					SET TERM_REC_VER = (SELECT MAX(CTD.CED_REC_VER) FROM CUSTOMER_LP_DETAILS CTD WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID  AND CTD.UASD_ID=TERM_UASDID AND CTD.CLP_STARTDATE<(IF(CTD.CLP_PRETERMINATE_DATE IS NULL,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE)));
					SET TERM_END_DATE = (SELECT CTD.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS CTD WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=TERM_REC_VER AND CTD.UASD_ID=TERM_UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1);
					SET TERM_PTD = (SELECT CTD.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS CTD WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=TERM_REC_VER AND CTD.UASD_ID=TERM_UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1);
					IF TERM_PTD IS NOT NULL THEN
						SET TERM_END_DATE = TERM_PTD;
					END IF;
					IF(TICK_GUEST_CARD IS NULL) THEN
						SET TICK_GUEST_CARD=('null');
					END IF;
					IF (TERM_END_DATE<=CURRENT_DATE() AND TERM_REC_VER<=CT_REC_VER) THEN					
						SET TICK_NEW_VALUE=(SELECT CONCAT('CACD_VALID_TILL=',TERM_END_DATE,',ACN_ID=4'));
						SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL AND ACN_ID IS NULL);
						SET OLD_TIMESTAMP=(SELECT CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL AND ACN_ID IS NULL);
						IF(USERSTAMP_ID!=OLD_ULD_ID) THEN
							SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL AND ACN_ID IS NULL),',UASD_ID=',TERM_UASDID,',CACD_GUEST_CARD=',TICK_GUEST_CARD,',CACD_VALID_TILL=null,ACN_ID=null',',ULD_ID=',OLD_ULD_ID,",CACD_TIMESTAMP",OLD_TIMESTAMP));
						ELSE
							SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL AND ACN_ID IS NULL),',UASD_ID=',TERM_UASDID,',CACD_GUEST_CARD=',TICK_GUEST_CARD,',CACD_VALID_TILL=null,ACN_ID=null',",CACD_TIMESTAMP",OLD_TIMESTAMP));
						END IF;
						INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,13,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
						UPDATE CUSTOMER_ACCESS_CARD_DETAILS SET CACD_VALID_TILL=TERM_END_DATE, ACN_ID=4, ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL;
						UPDATE UNIT_ACCESS_STAMP_DETAILS SET UASD_ACCESS_ACTIVE=NULL, UASD_ACCESS_INVENTORY='X' WHERE UASD_ID=TERM_UASDID;
						SET TERMRESULT_FLAG=1;
					END IF;
					SET TERM_GUEST_CARD_COUNT=(TERM_GUEST_CARD_COUNT-1);
					SET TERM_PTD=NULL;
	END LOOP;
END;
