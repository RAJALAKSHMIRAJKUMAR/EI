DROP PROCEDURE IF EXISTS SP_ACCESS_CARD_UPDATE;
CREATE PROCEDURE SP_ACCESS_CARD_UPDATE(IN CUSTOMERID INTEGER,IN CARDNUMBER INTEGER,IN REASON TEXT,IN COMMENTS TEXT,IN USERSTAMP VARCHAR(50),OUT CARD_UPDATE_FLAG INTEGER)
BEGIN
DECLARE TICK_COMMENTS_OLD_VALUE TEXT;
DECLARE TICK_COMMENTS_NEW_VALUE TEXT;
DECLARE TICK_ACCESS_OLD_VALUE TEXT;
DECLARE TICK_ACCESS_NEW_VALUE TEXT;
DECLARE OLD_COMMENTS TEXT;
DECLARE OLD_ACN_ID INTEGER;
DECLARE USERSTAMP_ID INTEGER(2);
DECLARE NEW_ACN_ID INTEGER;
DECLARE ULDID INTEGER;
DECLARE CPDID INTEGER;
DECLARE CACDID INTEGER;
DECLARE MINRECVER INTEGER;
DECLARE MAXRECVER INTEGER;
DECLARE CACDTIMESTAMP TIMESTAMP;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK; 
SET CARD_UPDATE_FLAG=0;
END; 
SET AUTOCOMMIT=0;
START TRANSACTION;
SET CARD_UPDATE_FLAG=0;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID =(SELECT @ULDID);
SET OLD_COMMENTS=(SELECT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CUSTOMERID);
SET CPDID=(SELECT CPD_ID FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CUSTOMERID);
IF OLD_COMMENTS IS NULL THEN
	SET OLD_COMMENTS='NULL';
END IF;
IF COMMENTS IS NULL THEN
	SET COMMENTS='NULL';
END IF;
IF(OLD_COMMENTS!=COMMENTS)THEN
SET TICK_COMMENTS_OLD_VALUE=(SELECT CONCAT('CPD_ID=',CPDID,',CPD_COMMENTS=',OLD_COMMENTS));
SET TICK_COMMENTS_NEW_VALUE=(SELECT CONCAT('CPD_COMMENTS=',COMMENTS));
INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES((SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='CUSTOMER_PERSONAL_DETAILS'),TICK_COMMENTS_OLD_VALUE,TICK_COMMENTS_NEW_VALUE,USERSTAMP_ID,CUSTOMERID);
SET MINRECVER=(SELECT MIN(CED_REC_VER) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER));
SET MAXRECVER=(SELECT MAX(CED_REC_VER) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER));
IF MINRECVER IS NOT NULL THEN
WHILE(MAXRECVER>=MINRECVER)DO
CALL SP_CUSTOMER_LP_DETAILS_ULD_TS_MAXTIMES(CUSTOMERID,MINRECVER,USERSTAMP_ID);
SET MINRECVER=MINRECVER+1;
END WHILE;
END IF;
END IF;
IF(COMMENTS='NULL')THEN
SET COMMENTS=NULL;
END IF;
UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=COMMENTS WHERE CUSTOMER_ID=CUSTOMERID;
SET CARD_UPDATE_FLAG=1;
SET CACDID=(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID IN (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER) AND  ACN_ID!=4 );
SET ULDID=(SELECT ULD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID IN (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER) AND  ACN_ID!=4 );
SET CACDTIMESTAMP=(SELECT CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID IN (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER) AND  ACN_ID!=4 );
SET OLD_ACN_ID=(SELECT ACN_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID IN (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER) AND  ACN_ID!=4 );
SET NEW_ACN_ID=(SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_DATA=REASON);
IF OLD_ACN_ID!=NEW_ACN_ID THEN
IF ULDID!=USERSTAMP_ID THEN
SET TICK_ACCESS_OLD_VALUE=(SELECT CONCAT('CACD_ID=',CACDID,',UASD_ID=',(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER),',ACN_ID=',(SELECT ACN_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID IN (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER) AND  ACN_ID!=4 ),',ULD_ID=',ULDID,',CACD_TIMESTAMP=',CACDTIMESTAMP));
ELSE
SET TICK_ACCESS_OLD_VALUE=(SELECT CONCAT('CACD_ID=',CACDID,',UASD_ID=',(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER),',ACN_ID=',(SELECT ACN_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND UASD_ID IN (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER) AND  ACN_ID!=4 ),',CACD_TIMESTAMP=',CACDTIMESTAMP));
END IF;
SET TICK_ACCESS_NEW_VALUE=(SELECT CONCAT('ACN_ID=',(SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_DATA=REASON)));
INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES((SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='CUSTOMER_ACCESS_CARD_DETAILS'),TICK_ACCESS_OLD_VALUE,TICK_ACCESS_NEW_VALUE,USERSTAMP_ID,CUSTOMERID);
UPDATE CUSTOMER_ACCESS_CARD_DETAILS SET ACN_ID=(SELECT ACN_ID FROM ACCESS_CONFIGURATION WHERE ACN_DATA=REASON),ULD_ID=USERSTAMP_ID WHERE UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=CARDNUMBER)AND CUSTOMER_ID=CUSTOMERID AND ACN_ID!=4; 
SET CARD_UPDATE_FLAG=1;
END IF;
COMMIT; 
END;
