DROP PROCEDURE IF EXISTS SP_EXPENSE_PERSONAL_AUTO_INCREMENT_SEQUENCE_CHECKING_PART5;
CREATE PROCEDURE SP_EXPENSE_PERSONAL_AUTO_INCREMENT_SEQUENCE_CHECKING_PART5(IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
DECLARE MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE EPID INTEGER;
DECLARE SEQID INTEGER;
DECLARE TABLEID INTEGER;
DECLARE PRIMARY_COLUMN TEXT;
DECLARE MINCHILDID INTEGER;
DECLARE MAXCHILDID INTEGER;
DECLARE MINTICKLERID INTEGER;
DECLARE MAXTICKLERID INTEGER;
DECLARE CHILD_PRI_ID INTEGER;
DECLARE CHILD_TABLE_NAME TEXT;
DECLARE COLNAME TEXT;
DECLARE FID INTEGER;
DECLARE TICKLERID INTEGER;
DECLARE COUNT_TABLE INTEGER;
DECLARE OLDVALUE TEXT;
DECLARE NEWVALUE TEXT;
DECLARE OLD_VAL_POS INTEGER;
DECLARE OLD_VAL_POS1 INTEGER;
DECLARE OLD_VAL_POS2 INTEGER;
DECLARE OLD_SUBSTRING TEXT;
DECLARE OLD_SUB_VALUE TEXT;
DECLARE OLD_NEW_STRING TEXT;
DECLARE REPLACE_STRING TEXT;
DECLARE MINDELID INTEGER;
DECLARE MAXDELID INTEGER;
DECLARE SUCCESS_ECNDATA TEXT;
DECLARE FAILURE_ECNDATA TEXT;
DECLARE SUCCESSECNDATA TEXT;
DECLARE FAILUREECNDATA TEXT;
DECLARE PATCHFILENAME VARCHAR(100);
DECLARE PHSTATUS TINYINT;
DECLARE FAILURE_ECN_DATA TEXT;
DECLARE FAIL_ECNDATA TEXT;
DECLARE USERSTAMP_ID INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
	INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (8,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
	SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
	SET SUCCESS_ECNDATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);	
	SET FAILURE_ECNDATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
		SET MINID=4901;
		SET MAXID=(MINID+(SELECT COUNT(*)FROM EXPENSE_PERSONAL WHERE EP_ID>MINID));
		DROP TABLE IF EXISTS TEMP_TICKLER_DELETION;
		CREATE TABLE TEMP_TICKLER_DELETION(ID INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,THID INTEGER,THOLDVALUE TEXT);
		INSERT INTO TEMP_TICKLER_DELETION(THID,THOLDVALUE)SELECT TH_ID,TH_OLD_VALUE FROM TICKLER_HISTORY WHERE TTIP_ID=TABLEID AND TP_ID=2;
		WHILE MINID<=MAXID DO
			SET TABLEID=(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_PERSONAL');
			SET PRIMARY_COLUMN=(SELECT DISTINCT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='EXPENSE_PERSONAL' AND COLUMN_KEY='PRI');
			SET MINDELID=(SELECT MIN(ID) FROM TEMP_TICKLER_DELETION);
			SET MAXDELID=(SELECT MAX(ID) FROM TEMP_TICKLER_DELETION);
				IF MINDELID IS NOT NULL AND MAXDELID IS NOT NULL THEN
						WHILE MINDELID<=MAXDELID DO
							SET OLDVALUE=(SELECT THOLDVALUE FROM TEMP_TICKLER_DELETION WHERE ID=MINDELID); 
							SET OLD_VAL_POS=(SELECT LOCATE(PRIMARY_COLUMN,OLDVALUE));
							SET OLD_VAL_POS1=(SELECT LOCATE(',',OLDVALUE,OLD_VAL_POS));
							IF OLD_VAL_POS1=0 THEN
								SET OLD_SUBSTRING=(SELECT SUBSTRING(OLDVALUE,OLD_VAL_POS));
							ELSE
								SET OLD_SUBSTRING=(SELECT SUBSTRING(OLDVALUE,OLD_VAL_POS,(OLD_VAL_POS1-OLD_VAL_POS)));
							END IF;
							SET OLD_VAL_POS2=(SELECT LOCATE('=',OLD_SUBSTRING));
							SET OLD_SUB_VALUE=(SELECT SUBSTRING(OLD_SUBSTRING,(OLD_VAL_POS2+1)));
							IF OLD_SUB_VALUE='null' or OLD_SUB_VALUE='NULL' THEN
								SET OLD_SUB_VALUE='null';
							END IF;
							IF OLD_SUB_VALUE=MINID THEN
								SET MINID=MINID+1;
							END IF;
							SET MINDELID=MINDELID+1;
						END WHILE;
				END IF;
			IF NOT EXISTS(SELECT EP_ID FROM EXPENSE_PERSONAL WHERE EP_ID=MINID)THEN
				SET EPID=(SELECT EP_ID FROM EXPENSE_PERSONAL WHERE EP_ID=MINID);
				SET SEQID=(SELECT MIN(EP_ID) FROM EXPENSE_PERSONAL WHERE EP_ID>MINID);
					SET FOREIGN_KEY_CHECKS=0;
					IF EPID IS NULL OR EPID=' ' THEN
						UPDATE EXPENSE_PERSONAL SET EP_ID=MINID,EP_TIMESTAMP=EP_TIMESTAMP WHERE EP_ID=SEQID;
						SET CHILD_TABLE_NAME=(SELECT TTIP_DATA FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_PERSONAL');
						SET @SETTICKLERID=(SELECT CONCAT('SELECT TTIP_ID INTO @TTIPID FROM  TICKLER_TABID_PROFILE WHERE TTIP_DATA=','"',CHILD_TABLE_NAME,'"'));
						PREPARE SETTICKLERID_STMT FROM @SETTICKLERID;
						EXECUTE SETTICKLERID_STMT;
						SET TICKLERID= @TTIPID;
							IF TICKLERID>0 THEN
								DROP TABLE IF EXISTS TEMP_TICKLER_TABLE;
								CREATE TABLE TEMP_TICKLER_TABLE(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,THID INTEGER,THOLDVALUE TEXT,THNEWVALUE TEXT );
								INSERT INTO TEMP_TICKLER_TABLE(THID,THOLDVALUE,THNEWVALUE) SELECT TH_ID,TH_OLD_VALUE,TH_NEW_VALUE FROM TICKLER_HISTORY WHERE TTIP_ID=TICKLERID AND TP_ID=1;
								SET COUNT_TABLE=(SELECT COUNT(*) FROM TEMP_TICKLER_TABLE);
								IF COUNT_TABLE>0 THEN
									SET MINTICKLERID=(SELECT MIN(ID) FROM TEMP_TICKLER_TABLE);
									SET MAXTICKLERID=(SELECT MAX(ID) FROM TEMP_TICKLER_TABLE);
									WHILE MINTICKLERID<=MAXTICKLERID DO
										SET OLDVALUE=(SELECT THOLDVALUE FROM TEMP_TICKLER_TABLE WHERE ID=MINTICKLERID);
										SET OLD_VAL_POS=(SELECT LOCATE(PRIMARY_COLUMN,OLDVALUE));
										IF OLD_VAL_POS>0 THEN
												SET OLD_VAL_POS1=(SELECT LOCATE(',',OLDVALUE,OLD_VAL_POS));
												IF OLD_VAL_POS1=0 THEN
													SET OLD_SUBSTRING=(SELECT SUBSTRING(OLDVALUE,OLD_VAL_POS));
												ELSE
													SET OLD_SUBSTRING=(SELECT SUBSTRING(OLDVALUE,OLD_VAL_POS,(OLD_VAL_POS1-OLD_VAL_POS)));
												END IF;
												SET OLD_VAL_POS2=(SELECT LOCATE('=',OLD_SUBSTRING));
												SET OLD_SUB_VALUE=(SELECT SUBSTRING(OLD_SUBSTRING,(OLD_VAL_POS2+1)));
												IF OLD_SUB_VALUE='null' or OLD_SUB_VALUE='NULL' THEN
													SET OLD_SUB_VALUE='null';
												END IF;
												IF OLD_SUB_VALUE=SEQID THEN
													SET OLD_NEW_STRING=(SELECT REPLACE(OLD_SUBSTRING,OLD_SUB_VALUE,MINID));
													SET REPLACE_STRING=(SELECT REPLACE(OLDVALUE,OLD_SUBSTRING,OLD_NEW_STRING));
													UPDATE TICKLER_HISTORY SET TH_OLD_VALUE=REPLACE_STRING,TH_TIMESTAMP=TH_TIMESTAMP WHERE TH_ID=(SELECT THID FROM TEMP_TICKLER_TABLE WHERE ID=MINTICKLERID);
												END IF;
										END IF;
										SET MINTICKLERID=MINTICKLERID+1;
									END WHILE;
								END IF;
							END IF;
					END IF;
			END IF;
			SET MINID=MINID+1;
		END WHILE;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (8,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
			SET SUCCESS_MESSAGE = SUCCESSECNDATA;
	END IF;
	COMMIT;
END;
CALL SP_EXPENSE_PERSONAL_AUTO_INCREMENT_SEQUENCE_CHECKING_PART5(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);