DROP PROCEDURE IF EXISTS SP_ERROR_MESSAGE_CONFIGURATION_INSERT;
CREATE PROCEDURE SP_ERROR_MESSAGE_CONFIGURATION_INSERT(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
	DECLARE FAILURE_ECN_DATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
    DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (1,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	SET FOREIGN_KEY_CHECKS = 0;
	SET SUCCESS_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=469);
	SET FAILURE_ECNDATA =  (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=470);
	SET FAILURE_ECN_DATA = (SELECT EMC_DATA FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=473);
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,474,'INVOICE_DATE SHOULD LESS THAN OR EQUAL TO TODAY DATE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,475,'INVOICE_DATE SHOULD BETWEEN UNIT STARTDATE AND UNIT ENDDATE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,476,'FROM_PERIOD SHOULD BETWEEN UNIT STARDATE AND UNIT ENDDATE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,477,'TO_PERIOD SHOULD BETWEEN FROM_PERIOD AND UNIT ENDDATE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,478,'FROM_PERIOD SHOULD BETWEEN UNIT STARDATE AND INVOICEDATE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,479,'TO_PERIOD SHOULD BETWEEN FROMPERIOD AND INVOICEDATE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,480,'ECN_ID SHOULD BETWEEN 133 AND 135',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(13,481,'ENTER VALID E-MAIL ID OF SSOMENS.COM',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(13,482,'ENTER VALID E-MAIL ID OF EXPATSINT.COM',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(13,483,'ENTER VALID E-MAIL ID OF GMAIL.COM',2,'2014-04-01 00:00:00');
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (1,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		SET FOREIGN_KEY_CHECKS = 1;
	END IF;
	COMMIT;
END;
CALL SP_ERROR_MESSAGE_CONFIGURATION_INSERT(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);