DROP PROCEDURE IF EXISTS SP_CONFIGURATION_INSERT;
CREATE PROCEDURE SP_CONFIGURATION_INSERT(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
	DECLARE FAILURE_ECN_DATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
    DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (1,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	SET FOREIGN_KEY_CHECKS = 0;
	SET SUCCESS_ECNDATA = 'PATCH FILE [FILENAME] EXECUTED SUCCESSFULLY';	
	SET FAILURE_ECNDATA = 'PATCH FILE [FILENAME] ALREADY EXECUTED.RUN SOME OTHER FILE';	
	SET FAILURE_ECN_DATA = 'PATCH FILE [FILENAME] HAVING ISSUE';
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
		INSERT INTO CONFIGURATION(CNP_ID,CGN_TYPE,CGN_NON_IP_FLAG) VALUES (3,'TIME ZONE','X');
		INSERT INTO CONFIGURATION(CNP_ID,CGN_TYPE,CGN_NON_IP_FLAG) VALUES (9,'DROP TABLE TRIGGER DAYS','X');
		INSERT INTO CUSTOMER_CONFIGURATION(CGN_ID,CCN_DATA,CCN_INITIALIZE_FLAG,ULD_ID,CCN_TIMESTAMP) VALUES
		(84,"'+00:00','+08:00'",'X',2,'2014-04-01 00:00:00');
		INSERT INTO TRIGGER_CONFIGURATION(CGN_ID,TC_DATA,TC_INITIALIZE_FLAG,ULD_ID,TC_TIMESTAMP) VALUES
		(85,'1','X',2,'2014-04-01 00:00:00');
		INSERT INTO TRIGGER_CONFIGURATION(CGN_ID,TC_DATA,TC_INITIALIZE_FLAG,ULD_ID,TC_TIMESTAMP) VALUES
		(31,'DROP TEMP TABLES','X',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(3,469,'PATCH FILE [FILENAME] EXECUTED SUCCESSFULLY',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(3,470,'PATCH FILE [FILENAME] ALREADY EXECUTED.RUN SOME OTHER FILE',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,471,'[AMTTYPE]  WITH UNIT [UNITNO] ALREADY PAID FOR THE MONTH [MONTH]',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(7,472,'AMOUNT FOR THE UNIT [UNITNO] PAID ALREADY FOR THE MONTH [MONTH]',2,'2014-04-01 00:00:00');
		INSERT INTO ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP) VALUES
		(3,473,'PATCH FILE [FILENAME] HAVING ISSUE',2,'2014-04-01 00:00:00');
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (1,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		SET FOREIGN_KEY_CHECKS = 1;
	END IF;
	COMMIT;
END;
CALL SP_CONFIGURATION_INSERT(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);