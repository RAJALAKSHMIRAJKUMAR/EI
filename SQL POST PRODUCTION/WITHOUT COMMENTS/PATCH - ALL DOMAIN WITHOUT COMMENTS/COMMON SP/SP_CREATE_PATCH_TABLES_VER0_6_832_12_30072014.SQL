DROP PROCEDURE IF EXISTS SP_CREATE_PATCH_TABLES;
CREATE PROCEDURE SP_CREATE_PATCH_TABLES(
IN FILENAME TEXT,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_MESSAGE TEXT)
BEGIN
	DECLARE FAILURE_ECN_DATA TEXT;
	DECLARE FAIL_ECNDATA TEXT;
    DECLARE SUCCESS_ECNDATA TEXT;
	DECLARE FAILURE_ECNDATA TEXT;
	DECLARE SUCCESSECNDATA TEXT;
	DECLARE FAILUREECNDATA TEXT;
	DECLARE PATCHFILENAME VARCHAR(100);
	DECLARE PHSTATUS TINYINT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (1,FILENAME,0,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = FAIL_ECNDATA;
	END;
	START TRANSACTION;
	SET FOREIGN_KEY_CHECKS = 0;
	SET SUCCESS_ECNDATA = 'PATCH FILE [FILENAME] EXECUTED SUCCESSFULLY';	
	SET FAILURE_ECNDATA = 'PATCH FILE [FILENAME] ALREADY EXECUTED.RUN SOME OTHER FILE';	
	SET FAILURE_ECN_DATA = 'PATCH FILE [FILENAME] HAVING ISSUE';
	SET SUCCESSECNDATA = (SELECT REPLACE(SUCCESS_ECNDATA,'[FILENAME]',FILENAME));
	SET FAILUREECNDATA = (SELECT REPLACE(FAILURE_ECNDATA,'[FILENAME]',FILENAME));
	SET FAIL_ECNDATA = (SELECT REPLACE(FAILURE_ECN_DATA,'[FILENAME]',FILENAME));
	IF EXISTS(SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 1) THEN
		SET SUCCESS_MESSAGE = FAILUREECNDATA;
	END IF;
	SET PATCHFILENAME = (SELECT PH_FILE_NAME FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME);
	SET PHSTATUS = (SELECT PH_STATUS FROM PATCH_HISTORY WHERE PH_FILE_NAME = FILENAME AND PH_STATUS = 0);
	IF ((PATCHFILENAME IS NOT NULL) AND (PHSTATUS = 0)) OR (PATCHFILENAME IS NULL)THEN
		CREATE OR REPLACE VIEW VW_PATCH_HISTORY AS
		SELECT PO.PO_MODULE_NAME, PH.PH_FILE_NAME,IF(PH.PH_STATUS=1,'SUCCESS','FAILURE')AS PH_STATUS, ULD.ULD_LOGINID, PH.PH_TIMESTAMP
		FROM PATCH_OBJECTS PO, PATCH_HISTORY PH, USER_LOGIN_DETAILS ULD WHERE PO.PO_ID = PH.PO_ID
		AND ULD.ULD_ID = PH.ULD_ID;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (10,'SP_CREATE_PATCH_TABLES_VER_0_3_831_42_23072014.SQL',1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		INSERT INTO PATCH_HISTORY(PO_ID,PH_FILE_NAME,PH_STATUS,ULD_ID) VALUES (10,FILENAME,1,(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP));
		SET SUCCESS_MESSAGE = SUCCESSECNDATA;
		SET FOREIGN_KEY_CHECKS = 1;
	END IF;
	COMMIT;
END;
CALL SP_CREATE_PATCH_TABLES(FILENAME,USERSTAMP,@SUCCESS_MESSAGE);