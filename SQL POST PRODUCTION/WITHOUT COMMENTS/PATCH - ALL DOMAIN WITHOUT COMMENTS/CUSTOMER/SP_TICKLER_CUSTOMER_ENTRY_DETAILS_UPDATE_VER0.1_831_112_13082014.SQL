DROP PROCEDURE IF EXISTS SP_TICKLER_PART_CUSTOMER_ENTRY_DETAILS;
CREATE PROCEDURE SP_TICKLER_PART_CUSTOMER_ENTRY_DETAILS(IN CEDID INTEGER,CEDSDSTIME INTEGER,CEDSDETIME INTEGER,CEDEDSTIME INTEGER,CEDEDETIME INTEGER,USERSTAMP VARCHAR(50))
BEGIN
DECLARE ULDID INTEGER;
DECLARE OLDVALUE TEXT;
DECLARE NEWVALUE TEXT;
DECLARE CUSTOMERID INTEGER;
SET CUSTOMERID=(SELECT CUSTOMER_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID);
SET ULDID=(SELECT ULD_ID FROM USER_LOGIN_DETAILS WHERE ULD_LOGINID=USERSTAMP);
IF CEDSDSTIME IS NOT NULL AND CEDSDETIME IS NOT NULL AND CEDEDSTIME IS NOT NULL AND CEDEDETIME IS NOT NULL THEN
SET OLDVALUE=(SELECT CONCAT('CED_ID=',CEDID,',CED_SD_STIME=',(SELECT CED_SD_STIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID),',CED_SD_ETIME=',(SELECT CED_SD_ETIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID),',CED_ED_STIME=',(SELECT CED_ED_STIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID),',CED_ED_ETIME=',(SELECT CED_ED_ETIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID)));
SET NEWVALUE=(SELECT CONCAT('CED_SD_STIME=',CEDSDSTIME,',CED_SD_ETIME=',CEDSDETIME,',CED_ED_STIME=',CEDEDSTIME,',CED_ED_ETIME=',CEDEDETIME));
ELSEIF CEDSDSTIME IS NOT NULL AND CEDSDETIME IS NOT NULL THEN
SET OLDVALUE=(SELECT CONCAT('CED_ID=',CEDID,',CED_SD_STIME=',(SELECT CED_SD_STIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID),',CED_SD_ETIME=',(SELECT CED_SD_ETIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID)));
SET NEWVALUE=(SELECT CONCAT('CED_SD_STIME=',CEDSDSTIME,',CED_SD_ETIME=',CEDSDETIME));
ELSEIF CEDEDSTIME IS NOT NULL AND CEDEDETIME IS NOT NULL THEN
SET OLDVALUE=(SELECT CONCAT('CED_ID=',CEDID,',CED_ED_STIME=',(SELECT CED_ED_STIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID),',CED_ED_ETIME=',(SELECT CED_ED_ETIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID=CEDID)));
SET NEWVALUE=(SELECT CONCAT('CED_ED_STIME=',CEDEDSTIME,',CED_ED_ETIME=',CEDEDETIME));
END IF;
INSERT INTO TICKLER_HISTORY(TP_ID,CUSTOMER_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID)VALUES(2,CUSTOMERID,10,OLDVALUE,NEWVALUE,ULDID);
END;
