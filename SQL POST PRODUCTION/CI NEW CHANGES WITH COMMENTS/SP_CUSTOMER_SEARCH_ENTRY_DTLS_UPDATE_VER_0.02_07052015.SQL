-- VERSION:0.02 --DATE:08/05/2015 --DESC:ADDED TICKLER PART --DONE BY:RL

DROP PROCEDURE IF EXISTS SP_CUSTOMER_SEARCH_ENTRY_DTLS_UPDATE;
CREATE PROCEDURE SP_CUSTOMER_SEARCH_ENTRY_DTLS_UPDATE(
IN CUST_ID INTEGER,
IN UNIT_NUMBER INTEGER,
IN CUSTOMER_RECORD_VERSION INTEGER,
IN ROOM_TYPE VARCHAR(30),
IN SD_STIME TIME,
IN SD_ETIME TIME,
IN ED_STIME TIME,
IN ED_ETIME TIME,
IN LEASE_PERIOD VARCHAR(30),
IN QUARTERS DECIMAL(5,2),
IN PROCESSING_WAIVED CHAR(1),
IN PRORATED CHAR(1),
IN NOTICE_PERIOD TINYINT(1),
IN NOTICE_START_DATE DATE,
IN USERSTAMP VARCHAR(50),
OUT SUCCESS_FLAG INTEGER)

BEGIN

	DECLARE USERSTAMP_ID INTEGER;
	DECLARE ROOM_TYPE_ID INTEGER;
	DECLARE UNITID INTEGER;
	DECLARE SDSTIME INTEGER;
	DECLARE SDETIME INTEGER;
	DECLARE EDSTIME INTEGER;
	DECLARE EDETIME INTEGER;

	DECLARE OLD_CED_ID TEXT;
	DECLARE OLD_UNIT_ID TEXT;
	DECLARE OLD_UASD_ID TEXT;
	DECLARE OLD_SD_STIME TEXT;
	DECLARE OLD_SD_ETIME TEXT;
	DECLARE OLD_ED_STIME TEXT;
	DECLARE OLD_ED_ETIME TEXT;
	DECLARE OLD_LP TEXT;
	DECLARE OLD_QUARTERS TEXT;
	DECLARE OLD_WAIVED TEXT;
	DECLARE OLD_PRORATED TEXT;
	DECLARE OLD_NOTICE_PERIOD TEXT;
	DECLARE OLD_NOTICE_DATE TEXT;

	DECLARE NEW_CED_ID TEXT;
	DECLARE NEW_UNIT_ID TEXT;
	DECLARE NEW_UASD_ID TEXT;
	DECLARE NEW_SD_STIME TEXT;
	DECLARE NEW_SD_ETIME TEXT;
	DECLARE NEW_ED_STIME TEXT;
	DECLARE NEW_ED_ETIME TEXT;
	DECLARE NEW_LP TEXT;
	DECLARE NEW_QUARTERS TEXT;
	DECLARE NEW_WAIVED TEXT;
	DECLARE NEW_PRORATED TEXT;
	DECLARE NEW_NOTICE_PERIOD TEXT;
	DECLARE NEW_NOTICE_DATE TEXT;

    DECLARE OLD_ENTRYTABLEDETAILS TEXT;
    DECLARE NEW_ENTRYTABLEDETAILS TEXT;
    DECLARE ENTRY_HEADERNAME TEXT;
    DECLARE CED_LENGTH INTEGER;
    DECLARE OLDENTRYPOSITION INTEGER;
    DECLARE OLD_ENTRYS TEXT;
    DECLARE NEWENTRYPOSITION INTEGER;
    DECLARE NEW_ENTRYS TEXT;
    DECLARE ENTRYHEADPOSITION INTEGER;
    DECLARE ENTRYHEADNAME TEXT;
    DECLARE NEWENTRYRECORDS TEXT ;
    DECLARE NEWCOMPANYRECORDS TEXT ;
    DECLARE ENTRYHEADERNAMES TEXT;
    DECLARE CUSTENTRY_ID VARCHAR(30);
    DECLARE OLD_ENTRYDTL TEXT;
    DECLARE NEW_ENTRYDTL TEXT;
    DECLARE CUSTENTRYHEADERNAME TEXT;
    DECLARE ENTRY_LOCATION INTEGER;	
	DECLARE CED INTEGER;
    DECLARE THID INTEGER;	

	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);	

	IF PROCESSING_WAIVED='' THEN
		SET PROCESSING_WAIVED=NULL;
	END IF;

	IF PRORATED='' THEN
		SET PRORATED=NULL;
	END IF;

	IF NOTICE_PERIOD='' THEN
		SET NOTICE_PERIOD=NULL;
	END IF;

	IF NOTICE_START_DATE='' OR NOTICE_START_DATE='0000-00-00' THEN
		SET NOTICE_START_DATE=NULL;
	END IF;

	SET ROOM_TYPE_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE URTD_ID=(SELECT URTD_ID FROM UNIT_ROOM_TYPE_DETAILS WHERE URTD_ROOM_TYPE=ROOM_TYPE) AND UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER));
	SET UNITID = (SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNIT_NUMBER);
	SET SDSTIME = (SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=SD_STIME);
	SET SDETIME = (SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=SD_ETIME);
	SET EDSTIME = (SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=ED_STIME);
	SET EDETIME = (SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=ED_ETIME);

	SET CUSTENTRY_ID = '';	   
	SET OLD_CED_ID = (SELECT CED_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID = CUST_ID AND CED_REC_VER = CUSTOMER_RECORD_VERSION);	   
	
	SET OLD_UNIT_ID = (SELECT UNIT_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	SET OLD_UASD_ID = (SELECT UASD_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	SET OLD_SD_STIME = (SELECT CED_SD_STIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	SET OLD_SD_ETIME = (SELECT CED_SD_ETIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	SET OLD_ED_STIME = (SELECT CED_ED_STIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	SET OLD_ED_ETIME = (SELECT CED_ED_ETIME FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	
	SET OLD_LP = (SELECT CED_LEASE_PERIOD FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	IF(OLD_LP IS NULL) THEN
		SET OLD_LP = 'NULL';
	END IF;
	
	SET OLD_QUARTERS = (SELECT CED_QUARTERS FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	IF(OLD_QUARTERS IS NULL) THEN
		SET OLD_QUARTERS = 'NULL';
	END IF;
	
	SET OLD_WAIVED = (SELECT CED_PROCESSING_WAIVED  FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	IF(OLD_WAIVED IS NULL) THEN
		SET OLD_WAIVED = 'NULL';
	END IF;

	SET OLD_PRORATED= (SELECT CED_PRORATED  FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	IF(OLD_PRORATED IS NULL) THEN
		SET OLD_PRORATED = 'NULL';
	END IF;
	
	SET OLD_NOTICE_PERIOD = (SELECT CED_NOTICE_PERIOD FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	IF(OLD_NOTICE_PERIOD IS NULL) THEN
		SET OLD_NOTICE_PERIOD = 'NULL';
	END IF;
	
	SET OLD_NOTICE_DATE = (SELECT CED_NOTICE_START_DATE FROM CUSTOMER_ENTRY_DETAILS WHERE CED_ID = OLD_CED_ID);
	IF(OLD_NOTICE_DATE IS NULL OR OLD_NOTICE_DATE='0000-00-00') THEN
		SET OLD_NOTICE_DATE = 'NULL';
	END IF;

	SET NEW_UNIT_ID = UNITID;
	SET NEW_UASD_ID = ROOM_TYPE_ID;
	SET NEW_SD_STIME = SDSTIME;
	SET NEW_SD_ETIME = SDETIME;
	SET NEW_ED_STIME = EDSTIME;
	SET NEW_ED_ETIME = EDETIME;
	
	SET NEW_LP = LEASE_PERIOD;
	IF(NEW_LP='' OR NEW_LP IS NULL) THEN
		SET NEW_LP ='NULL';
	END IF;
	
	SET NEW_QUARTERS = QUARTERS;
	IF(NEW_QUARTERS='' OR NEW_QUARTERS IS NULL) THEN
		SET NEW_QUARTERS = 'NULL';
	END IF;

	SET NEW_WAIVED = PROCESSING_WAIVED;
	IF(NEW_WAIVED='' OR NEW_WAIVED IS NULL) THEN
		SET NEW_WAIVED='NULL';
	END IF;

	SET NEW_PRORATED = PRORATED;
	IF(NEW_PRORATED='' OR NEW_PRORATED IS NULL) THEN
		SET NEW_PRORATED='NULL';
	END IF;

	SET NEW_NOTICE_PERIOD = NOTICE_PERIOD;
	IF(NEW_NOTICE_PERIOD='' OR NEW_NOTICE_PERIOD IS NULL) THEN
		SET NEW_NOTICE_PERIOD='NULL';
	END IF;

	SET NEW_NOTICE_DATE = NOTICE_START_DATE;
	IF(NEW_NOTICE_DATE='' OR NEW_NOTICE_DATE IS NULL OR NEW_NOTICE_DATE='0000-00-00') THEN
		SET NEW_NOTICE_DATE='NULL';
	END IF;
	
	SET ENTRYHEADERNAMES = 'CED_ID,UNIT_ID,UASD_ID,CED_REC_VER,CED_SD_STIME,CED_SD_ETIME,CED_ED_STIME,CED_ED_ETIME,CED_LEASE_PERIOD,CED_QUARTERS,CED_PROCESSING_WAIVED,CED_PRORATED,CED_NOTICE_PERIOD,CED_NOTICE_START_DATE';
	SET OLD_ENTRYTABLEDETAILS = (SELECT CONCAT(OLD_CED_ID,'^','^',OLD_UNIT_ID,'^','^',OLD_UASD_ID,'^','^',CUSTOMER_RECORD_VERSION,'^','^',OLD_SD_STIME,'^','^',OLD_SD_ETIME,'^','^',OLD_ED_STIME,'^','^',OLD_ED_ETIME,'^','^',OLD_LP,'^','^',OLD_QUARTERS,'^','^',OLD_WAIVED,'^','^',OLD_PRORATED,'^','^',OLD_NOTICE_PERIOD,'^','^',OLD_NOTICE_DATE));
	SET NEW_ENTRYTABLEDETAILS = (SELECT CONCAT(OLD_CED_ID,'^','^',NEW_UNIT_ID,'^','^',NEW_UASD_ID,'^','^',CUSTOMER_RECORD_VERSION,'^','^',NEW_SD_STIME,'^','^',NEW_SD_ETIME,'^','^',OLD_ED_STIME,'^','^',OLD_ED_ETIME,'^','^',NEW_LP,'^','^',NEW_QUARTERS,'^','^',NEW_WAIVED,'^','^',NEW_PRORATED,'^','^',NEW_NOTICE_PERIOD,'^','^',NEW_NOTICE_DATE));
	
	IF(OLD_ENTRYTABLEDETAILS != NEW_ENTRYTABLEDETAILS)THEN	

		SET NEWCOMPANYRECORDS = OLD_ENTRYTABLEDETAILS;
		SET NEWENTRYRECORDS = NEW_ENTRYTABLEDETAILS;
		SET ENTRYHEADNAME = ENTRYHEADERNAMES;
		SET OLD_ENTRYS = (SELECT CONCAT('CED_ID=',OLD_CED_ID,',','CED_REC_VER=',CUSTOMER_RECORD_VERSION));
		SET NEW_ENTRYS = '';
		SET CED_LENGTH = 1;			
		
		loop_label : LOOP	

			SET OLDENTRYPOSITION = (SELECT LOCATE('^^',NEWCOMPANYRECORDS,CED_LENGTH));
			IF (OLDENTRYPOSITION=0) THEN
				SET OLD_ENTRYDTL = NEWCOMPANYRECORDS;
			ELSE
				SET OLD_ENTRYDTL =(SELECT SUBSTRING(NEWCOMPANYRECORDS,CED_LENGTH,OLDENTRYPOSITION-1));
				SET NEWCOMPANYRECORDS=(SELECT SUBSTRING(NEWCOMPANYRECORDS,OLDENTRYPOSITION+2));
			END IF;		

			SET NEWENTRYPOSITION = (SELECT LOCATE('^^',NEWENTRYRECORDS,CED_LENGTH));
			IF (NEWENTRYPOSITION=0) THEN
				SET NEW_ENTRYDTL = NEWENTRYRECORDS;
			ELSE
				SET NEW_ENTRYDTL=(SELECT SUBSTRING(NEWENTRYRECORDS,CED_LENGTH,NEWENTRYPOSITION-1));
				SET NEWENTRYRECORDS=(SELECT SUBSTRING(NEWENTRYRECORDS,NEWENTRYPOSITION+2));
			END IF;	

			SET ENTRYHEADPOSITION = (SELECT LOCATE(',',ENTRYHEADNAME,CED_LENGTH));
			IF (ENTRYHEADPOSITION=0) THEN
				SET CUSTENTRYHEADERNAME = ENTRYHEADNAME;
			ELSE
				SET CUSTENTRYHEADERNAME=(SELECT SUBSTRING(ENTRYHEADNAME,CED_LENGTH,ENTRYHEADPOSITION-1));
				SET ENTRYHEADNAME=(SELECT SUBSTRING(ENTRYHEADNAME,ENTRYHEADPOSITION+1));
			END IF;	

			IF(OLD_ENTRYDTL != NEW_ENTRYDTL)THEN
				SET OLD_ENTRYDTL=(SELECT CONCAT(CUSTENTRYHEADERNAME, '=', OLD_ENTRYDTL));
				SET NEW_ENTRYDTL=(SELECT CONCAT(CUSTENTRYHEADERNAME, '=' ,NEW_ENTRYDTL));
				SET NEW_ENTRYS=(SELECT CONCAT(NEW_ENTRYS,',',NEW_ENTRYDTL));
				SET OLD_ENTRYS=(SELECT CONCAT(OLD_ENTRYS,',',OLD_ENTRYDTL));
			END IF; 

			IF (ENTRYHEADPOSITION<=0) THEN
				LEAVE  loop_label;
			END IF;	

		END LOOP;		  
		
		SET ENTRY_LOCATION=(SELECT LOCATE(',', NEW_ENTRYS,1));
		SET NEW_ENTRYS=(SELECT SUBSTRING(NEW_ENTRYS,ENTRY_LOCATION+1));	

-- UPDATE QUERY FOR CUSTOMER_ENTRY_DETAILS
		IF(ROOM_TYPE IS NOT NULL AND SD_STIME IS NOT NULL AND SD_ETIME IS NOT NULL AND ED_STIME IS NOT NULL AND ED_ETIME IS NOT NULL AND LEASE_PERIOD IS NOT NULL AND QUARTERS IS NOT NULL) THEN
			
			INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES
			((SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
			(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='CUSTOMER_ENTRY_DETAILS'),
			OLD_ENTRYS,NEW_ENTRYS,USERSTAMP_ID,CUST_ID);

			UPDATE CUSTOMER_ENTRY_DETAILS SET UNIT_ID=UNITID,UASD_ID=ROOM_TYPE_ID,CED_SD_STIME=SDSTIME,CED_SD_ETIME=SDETIME,
			CED_ED_STIME=EDSTIME,CED_ED_ETIME=EDETIME,CED_LEASE_PERIOD=LEASE_PERIOD,CED_QUARTERS=QUARTERS,CED_PROCESSING_WAIVED=PROCESSING_WAIVED,
			CED_PRORATED=PRORATED,CED_NOTICE_PERIOD = NOTICE_PERIOD,CED_NOTICE_START_DATE=NOTICE_START_DATE WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=CUSTOMER_RECORD_VERSION;
			
			SET SUCCESS_FLAG = 1;	

		END IF;			   
	
	END IF;	

END;
