-- version:1.2 -- sdate:12/06/2014 -- edate:12/06/2014 -- issue:598 --commentno#63 --desc:removed left join queries  --done by:RL & dhivya
-- version:1.1 -- sdate:09/06/2014 -- edate:09/06/2014 -- issue:566 --comment no#12 --desc:IMPLEMENTED ROLLBACK AND COMMIT --done by:DHIVYA
-- version:1.0 -- sdate:19/04/2014 -- edate:19/04/2014 -- issue:765 --desc:REMOVE THE VALUE CGNID 48 IN DEPOSIT_DEDUCTION_CONFIGURATION--done by:BHAVANI.R
-- version:0.9 -- sdate:10/04/2014 -- edate:10/04/2014 -- issue:765 --desc:added SCDB  1/4/2014 TIME STAMP FOR ALL SS RECORDS --done by:RL
-- version:0.8 --sdate:01/04/2014 --edate:01/04/2014 --issue:765 --commentno#53 --desc:SPLIT THE CONFIG MIG  SP INTO 4 PART. --dONEBY:RL
-- version:0.7 --sdate:28/03/2013 --edate:28/03/2014 --issue:783 --desc:changed ALL FOREIGN KEY REFERENCES TABLE SHOULD IN DESTINATION SCHEMA --doneby:RL
--VER:0.6 STARTDATE:28/03/2014 ENDDATE:28/03/2014 ISSUENO:783 DESC:CHANGED THE SP:SP_MIG_CONFIG_INSERT  REMOVED THE DESTINATION SCHEMA IN POST_AUDIT_HISTORY DONE BY:LALITHA
--VER:0.5 STARTDATE:25/03/2014 ENDDATE:25/03/2014 ISSUENO:765 COMMENTNO:#8 DESC:CHANGED THE SP:SP_MIG_CONFIG_INSERT CHANGED THE SCHEMA FOR INSERTION IN POST AUDIT HISTORY AND UPDATION IN PRE AUDIT SUB PROFILE  DONE BY:LALITHA
-- version:0.4 -- sdate:20/03/2014 -- edate:22/03/2014 -- issue:765 -- desc:Changed the SP:SP_MIG_CONFIG_INSERT As prepared stmt for dynamic running purpose --Doneby:Lalitha
-- version:0.3 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 -- desc:droped temp table -- doneby:RL
-- version:0.2 -- sdate:25/02/2014 -- edate:25/02/2014 -- issue:750 -- desc:getting userstamp n time stamp from db & userstamp changed as uld_id -- doneby:RL
-- version:0.1 -- sdate:20/02/2014 -- edate:21/02/2014 -- issue:750 -- desc:Implementing audit table insert -- doneby:RL
DROP PROCEDURE IF EXISTS SP_MIG_CONFIG_INSERT2;
CREATE PROCEDURE SP_MIG_CONFIG_INSERT2(IN SOURCESCHEMA  VARCHAR(40),IN DESTINATIONSCHEMA  VARCHAR(40),IN MIGUSERSTAMP VARCHAR(50))
BEGIN
    DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE MIN_DDC_ID INTEGER;
	DECLARE MAX_DDC_ID INTEGER;
	DECLARE DCFDATA TEXT;
	DECLARE DCNUSERSTAMP VARCHAR(50);
	DECLARE DCNTIMESTAMP VARCHAR(50);
	DECLARE MIN_EMC_ID INTEGER;
	DECLARE MAX_EMC_ID INTEGER;
	DECLARE ERROR_DATA TEXT;
	DECLARE EMCCFDATA TEXT;
	DECLARE ECNUSERSTAMP VARCHAR(50);
	DECLARE ECNTIMESTAMP VARCHAR(50);
	DECLARE MIN_TC_ID INTEGER;
	DECLARE MAX_TC_ID INTEGER;
	DECLARE TCN_DATA TEXT;
	DECLARE TCFDATA TEXT;
	DECLARE TCUSERSTAMP VARCHAR(50);
	DECLARE TTIMESTAMP VARCHAR(50);
	DECLARE MIN_NC_ID INTEGER;
	DECLARE MAX_NC_ID INTEGER;
	DECLARE NCDATA TEXT;
	DECLARE CFDATA TEXT;
	DECLARE NCUSERSTAMP VARCHAR(50);
	DECLARE NCTIMESTAMP VARCHAR(50);
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
	END;
	START TRANSACTION;
	SET FOREIGN_KEY_CHECKS=0;
    SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
    PREPARE LOGINID FROM @LOGIN_ID;
    EXECUTE LOGINID;
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE DROP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @DROP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE DROP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;
	SET @CREATE_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION(
	DDC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	DDC_DATA TEXT NOT NULL,
	DDC_SUB_DATA TEXT NULL,
	DDC_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	DDC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(DDC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @CREATE_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE CREATE_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;
	SET @INSERT_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION(CGN_ID,DDC_DATA,DDC_SUB_DATA,DDC_INITIALIZE_FLAG,ULD_ID,DDC_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.SUB_DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=CSQL.USER_STAMP AND CSQL.CGN_ID IN(30,42) AND CSQL.DATA IS NOT NULL ORDER BY CSQL.ID)'));
	PREPARE INSERT_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @INSERT_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE INSERT_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;
	SET @MINDDC_ID = (SELECT CONCAT('SELECT MIN(DDC_ID) INTO @MINDCNID FROM ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE MINDDC_ID_STMT FROM @MINDDC_ID;
	EXECUTE MINDDC_ID_STMT;
	SET @MAXDDC_ID = (SELECT CONCAT('SELECT MAX(DDC_ID) INTO @MAXDCNID FROM ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE MAXDDC_ID_STMT FROM @MAXDDC_ID;
	EXECUTE MAXDDC_ID_STMT;
	SET MIN_DDC_ID = @MINDCNID;
	SET MAX_DDC_ID = @MAXDCNID;
	SET @DD_DATA=NULL;
	SET @DDCN_DATA=NULL;
	WHILE(MIN_DDC_ID  <= MAX_DDC_ID)DO
		SET @DDDATA = (SELECT CONCAT('SELECT DDC_DATA INTO @DD_DATA FROM ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION WHERE DDC_ID=',MIN_DDC_ID));
		PREPARE DDDATA_STMT FROM @DDDATA;
		EXECUTE DDDATA_STMT;
		SET @SETDDDATA = (SELECT CONCAT('SELECT CF_DATA INTO @DDCN_DATA FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA=@DD_DATA'));
		PREPARE SETDDDATA_STMT FROM @SETDDDATA;
		EXECUTE SETDDDATA_STMT;
		SET DCFDATA = @DDCN_DATA;
		IF(DCFDATA IS NOT NULL)THEN
			SET @DUSERSTAMP = (SELECT CONCAT('SELECT USERSTAMP INTO @DD_USERSTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = @DD_DATA'));
			PREPARE DUSERSTAMP_STMT FROM @DUSERSTAMP;
			EXECUTE DUSERSTAMP_STMT;
			SET DCNUSERSTAMP = @DD_USERSTAMP ;
			SET @DTIME_STAMP = (SELECT CONCAT('SELECT TIMESTAMP INTO @DD_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = @DD_DATA'));
			PREPARE DTIME_STAMP_STMT FROM @DTIME_STAMP;
			EXECUTE DTIME_STAMP_STMT;
			SET DCNTIMESTAMP = @DD_TIMESTAMP;
			SET @DUPDATE_TIMESTAMP = (SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION SET ULD_ID=(SELECT ULD_ID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',DCNUSERSTAMP,'"',')',',DDC_TIMESTAMP=','"',DCNTIMESTAMP,'"',' WHERE DDC_ID=',MIN_DDC_ID));
			PREPARE DUPDATE_TIMESTAMP_STMT FROM @DUPDATE_TIMESTAMP;
			EXECUTE DUPDATE_TIMESTAMP_STMT;
		END IF;
		SET @DD_DATA=NULL;
		SET @DDCN_DATA =NULL;
		SET @DD_USERSTAMP=NULL;
		SET @DD_TIMESTAMP =NULL;
		SET MIN_DDC_ID = MIN_DDC_ID+1;
	END WHILE;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(DATA) INTO @COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN(30,42)'));
	PREPARE COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT_STMT FROM @COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT;
    EXECUTE COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT_STMT;
    SET @COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION_STMT FROM @COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION;
    EXECUTE COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION);
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION');
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION');
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	SET @DUR=DURATION;
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);     	   		
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION'));
	PREPARE DROP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @DROP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE DROP_ERROR_MESSAGE_CONFIGURATION_STMT;
	SET @CREATE_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION(
	EMC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	EMC_CODE INTEGER NOT NULL,
	EMC_DATA TEXT NOT NULL,
	ULD_ID INTEGER(2) NOT NULL,
	EMC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EMC_ID),
	FOREIGN KEY(CNP_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION_PROFILE(CNP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_ERROR_MESSAGE_CONFIGURATION_STMT FROM @CREATE_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE CREATE_ERROR_MESSAGE_CONFIGURATION_STMT;
	SET @INSERT_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP)
	(SELECT CSQL.CNP_ID,CSQL.EMC_CODE,CSQL.EMC_DATA,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=CSQL.USER_STAMP AND CSQL.EMC_DATA IS NOT NULL ORDER BY CSQL.ID)'));
	PREPARE INSERT_ERROR_MESSAGE_CONFIGURATION_STMT FROM @INSERT_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE INSERT_ERROR_MESSAGE_CONFIGURATION_STMT;
	SET @MINEMC_ID = (SELECT CONCAT('SELECT MIN(EMC_ID) INTO @MINEMCID FROM ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION'));
	PREPARE MINEMC_ID_STMT FROM @MINEMC_ID;
	EXECUTE MINEMC_ID_STMT;
	SET @MAXEMC_ID = (SELECT CONCAT('SELECT MAX(EMC_ID) INTO @MAXEMCID FROM ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION'));
	PREPARE MAXEMC_ID_STMT FROM @MAXEMC_ID;
	EXECUTE MAXEMC_ID_STMT;
	SET MIN_EMC_ID = @MINEMCID;
	SET MAX_EMC_ID = @MAXEMCID;
	SET @EMCDATA = NULL;
	SET @ECNDATA = NULL;
	WHILE(MIN_EMC_ID  <= MAX_EMC_ID)DO
		SET @SETEMCDATA = (SELECT CONCAT('SELECT EMC_DATA INTO @EMCDATA FROM ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=',MIN_EMC_ID,''));
		PREPARE SETEMCDATA_STMT FROM @SETEMCDATA;
		EXECUTE SETEMCDATA_STMT;
		SET ERROR_DATA = @EMCDATA;
		SET @SETPERRORDATA = (SELECT CONCAT('SELECT CF_DATA INTO @ECNDATA FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA=','"',ERROR_DATA,'"'));
		PREPARE SETPERRORDATA_STMT FROM @SETPERRORDATA;
		EXECUTE SETPERRORDATA_STMT;
		SET EMCCFDATA = @ECNDATA;
		IF(EMCCFDATA IS NOT NULL)THEN
			SET @EUSERSTAMP = (SELECT CONCAT('SELECT USERSTAMP INTO @ECN_USER_STAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = ','"',ERROR_DATA,'"'));
			PREPARE EUSERSTAMP_STMT FROM @EUSERSTAMP;
			EXECUTE EUSERSTAMP_STMT;
			SET ECNUSERSTAMP = @ECN_USER_STAMP;
			SET @ETIME_STAMP = (SELECT CONCAT('SELECT TIMESTAMP INTO @ECN_TIME_STAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = ','"',ERROR_DATA,'"'));
			PREPARE ETIME_STAMP_STMT FROM @ETIME_STAMP;
			EXECUTE ETIME_STAMP_STMT;
			SET ECNTIMESTAMP = @ECN_TIME_STAMP;
			SET @UPDATE_ETIMESTAMP = (SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION SET ULD_ID=(SELECT ULD_ID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',ECNUSERSTAMP,'"',')',',EMC_TIMESTAMP=','"',ECNTIMESTAMP,'"',' WHERE EMC_ID=',MIN_EMC_ID));
			PREPARE UPDATE_ETIMESTAMP_STMT FROM @UPDATE_ETIMESTAMP;
			EXECUTE UPDATE_ETIMESTAMP_STMT;
		END IF;
		SET @EMCDATA=NULL;
		SET @ECNDATA=NULL;
		SET @ECN_USER_STAMP=NULL;
		SET @ECN_TIME_STAMP=NULL;
		SET MIN_EMC_ID = MIN_EMC_ID+1;
	END WHILE;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(EMC_DATA) INTO @COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  WHERE CSQL.EMC_DATA IS NOT NULL'));
	PREPARE COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT_STMT FROM @COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT;
    EXECUTE COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT_STMT;
    SET @COUNT_SPLITING_ERRORMESSAGECONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION'));
	PREPARE COUNT_SPLITING_ERRORMESSAGECONFIGURATION_STMT FROM @COUNT_SPLITING_ERRORMESSAGECONFIGURATION;
    EXECUTE COUNT_SPLITING_ERRORMESSAGECONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION);
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERROR_MESSAGE_CONFIGURATION');
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERROR_MESSAGE_CONFIGURATION');
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	SET @DUR=DURATION;
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ERROR_MESSAGE_CONFIGURATION';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);   	
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_TRIGGER_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION'));
	PREPARE DROP_TRIGGER_CONFIGURATION_STMT FROM @DROP_TRIGGER_CONFIGURATION;
    EXECUTE DROP_TRIGGER_CONFIGURATION_STMT;
	SET @CREATE_TRIGGER_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION(
	TC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TC_DATA	TEXT NOT NULL,
	TC_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	TC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_TRIGGER_CONFIGURATION_STMT FROM @CREATE_TRIGGER_CONFIGURATION;
    EXECUTE CREATE_TRIGGER_CONFIGURATION_STMT;
	SET @INSERT_TRIGGER_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION(CGN_ID,TC_DATA,TC_INITIALIZE_FLAG,ULD_ID,TC_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL ,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN(31,74) AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID = CSQL.USER_STAMP ORDER BY CSQL.ID)'));
    PREPARE INSERT_TRIGGER_CONFIGURATION_STMT FROM @INSERT_TRIGGER_CONFIGURATION;
    EXECUTE INSERT_TRIGGER_CONFIGURATION_STMT;
	SET @MINTC_ID = (SELECT CONCAT('SELECT MIN(TC_ID) INTO @MINTCID FROM ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION'));
	PREPARE MINTC_ID_STMT FROM @MINTC_ID;
	EXECUTE MINTC_ID_STMT;
	SET @MAXTC_ID = (SELECT CONCAT('SELECT MAX(TC_ID) INTO @MAXTCID FROM ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION'));
	PREPARE MAXTC_ID_STMT FROM @MAXTC_ID;
	EXECUTE MAXTC_ID_STMT;
	SET MIN_TC_ID = @MINTCID;
	SET MAX_TC_ID = @MAXTCID;
	SET @TCDATA = NULL;
	SET @TCNDATA = NULL;
	WHILE(MIN_TC_ID  <= MAX_TC_ID)DO
		SET @SETTCDATA = (SELECT CONCAT('SELECT TC_DATA INTO @TCDATA FROM ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION WHERE TC_ID=',MIN_TC_ID,''));
		PREPARE SETTCDATA_STMT FROM @SETTCDATA;
		EXECUTE SETTCDATA_STMT;
		SET TCN_DATA = @TCDATA;
		SET @SETTCNDATA = (SELECT CONCAT('SELECT CF_DATA INTO @TCNDATA FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA=','"',TCN_DATA,'"'));
		PREPARE SETTCNDATA_STMT FROM @SETTCNDATA;
		EXECUTE SETTCNDATA_STMT;
		SET TCFDATA = @TCNDATA;
		IF(TCFDATA IS NOT NULL)THEN
			SET @TUSERSTAMP = (SELECT CONCAT('SELECT USERSTAMP INTO @TCN_USER_STAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = ','"',TCN_DATA,'"'));
			PREPARE TUSERSTAMP_STMT FROM @TUSERSTAMP;
			EXECUTE TUSERSTAMP_STMT;
			SET TCUSERSTAMP = @TCN_USER_STAMP;
			SET @TTIME_STAMP = (SELECT CONCAT('SELECT TIMESTAMP INTO @TCN_TIME_STAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = ','"',TCN_DATA,'"'));
			PREPARE TTIME_STAMP_STMT FROM @TTIME_STAMP;
			EXECUTE TTIME_STAMP_STMT;
			SET TTIMESTAMP = @TCN_TIME_STAMP;
			SET @UPDATE_ETIMESTAMP = (SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION SET ULD_ID=(SELECT ULD_ID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',TCUSERSTAMP,'"',')',',TC_TIMESTAMP=','"',TTIMESTAMP,'"',' WHERE TC_ID=',MIN_TC_ID));
			PREPARE UPDATE_ETIMESTAMP_STMT FROM @UPDATE_ETIMESTAMP;
			EXECUTE UPDATE_ETIMESTAMP_STMT;
		END IF;
		SET @TCDATA=NULL;
		SET @TCNDATA=NULL;
		SET @TCN_USER_STAMP=NULL;
		SET @TCN_TIME_STAMP=NULL;
		SET MIN_TC_ID = MIN_TC_ID+1;
	END WHILE;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_TRIGGERCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(CSQL.DATA) INTO @COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL WHERE CSQL.CGN_ID IN(31,74) AND CSQL.DATA IS NOT NULL'));
	PREPARE COUNT_TRIGGERCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_TRIGGERCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_TRIGGERCONFIGURATIONSQLFORMAT_STMT;
	SET @COUNT_SPLITING_TRIGGERCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_TRIGGER_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION'));
	PREPARE COUNT_SPLITING_TRIGGERCONFIGURATION_STMT FROM @COUNT_SPLITING_TRIGGERCONFIGURATION;
    EXECUTE COUNT_SPLITING_TRIGGERCONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_TRIGGER_CONFIGURATION);
	SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='TRIGGER_CONFIGURATION');
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='TRIGGER_CONFIGURATION');
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	SET @DUR=DURATION;
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='TRIGGER_CONFIGURATION';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_TRIGGER_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION'));
	PREPARE DROP_NATIONALITY_CONFIGURATION_STMT FROM @DROP_NATIONALITY_CONFIGURATION;
	EXECUTE DROP_NATIONALITY_CONFIGURATION_STMT;    
	SET @CREATE_NATIONALITY_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION(
	NC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	NC_DATA    TEXT NOT NULL,
	NC_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	NC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(NC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_NATIONALITY_CONFIGURATION_STMT FROM @CREATE_NATIONALITY_CONFIGURATION;
	EXECUTE CREATE_NATIONALITY_CONFIGURATION_STMT;
	SET @INSERT_NATIONALITY_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION(NC_DATA,CGN_ID,NC_INITIALIZE_FLAG,ULD_ID,NC_TIMESTAMP)
	SELECT CSQL.DATA,CSQL.CGN_ID,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD
	WHERE CSQL.DATA IS NOT NULL AND CSQL.CGN_ID=15 AND ULD.ULD_LOGINID = CSQL.USER_STAMP ORDER BY CSQL.ID'));
	PREPARE INSERT_TEMP_NATIONALITY_CONFIGURATION_STMT FROM @INSERT_NATIONALITY_CONFIGURATION;
	EXECUTE INSERT_TEMP_NATIONALITY_CONFIGURATION_STMT;  
	SET @MINNC_ID = (SELECT CONCAT('SELECT MIN(NC_ID) INTO @MINNCID FROM ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION'));
	PREPARE MINNC_ID_STMT FROM @MINNC_ID;
	EXECUTE MINNC_ID_STMT;
	SET @MAXNC_ID = (SELECT CONCAT('SELECT MAX(NC_ID) INTO @MAXNCID FROM ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION'));
	PREPARE MAXNC_ID_STMT FROM @MAXNC_ID;
	EXECUTE MAXNC_ID_STMT;
	SET MIN_NC_ID = @MINNCID;
	SET MAX_NC_ID = @MAXNCID;
	SET @CDATA = NULL;
	SET @NDATA = NULL;
	WHILE(MIN_NC_ID  <= MAX_NC_ID)DO
		SET @SETNCDATA = (SELECT CONCAT('SELECT NC_DATA INTO @NDATA FROM ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION WHERE NC_ID=',MIN_NC_ID));
		PREPARE SETNCDATA_STMT FROM @SETNCDATA;
		EXECUTE SETNCDATA_STMT;
		SET NCDATA=@NDATA;
		SET @SETCFDATA = (SELECT CONCAT('SELECT CF_DATA INTO @CDATA FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA=','"',NCDATA,'"'));
		PREPARE SETCFDATA_STMT FROM @SETCFDATA;
		EXECUTE SETCFDATA_STMT;
		SET CFDATA = @CDATA ;
		IF(CFDATA IS NOT NULL)THEN
			SET @NUSERSTAMP = (SELECT CONCAT('SELECT USERSTAMP INTO @NATION_USERSTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = ','"',NCDATA,'"'));
			PREPARE NUSERSTAMP_STMT FROM @NUSERSTAMP;
			EXECUTE NUSERSTAMP_STMT;
			SET NCUSERSTAMP = @NATION_USERSTAMP;
			SET @NTIME_STAMP = (SELECT CONCAT('SELECT TIMESTAMP INTO @NATION_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT WHERE CF_DATA = ','"',NCDATA,'"'));
			PREPARE NTIMESTAMP_STMT FROM @NTIME_STAMP;
			EXECUTE NTIMESTAMP_STMT;
			SET NCTIMESTAMP = @NATION_TIMESTAMP;
			SET @UPDATE_NATION = (SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION SET ULD_ID=(SELECT ULD_ID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',NCUSERSTAMP,'"',')',',NC_TIMESTAMP=','"',NCTIMESTAMP,'"',' WHERE NC_ID=',MIN_NC_ID));
			PREPARE UPDATE_NATION_STMT FROM @UPDATE_NATION;
			EXECUTE UPDATE_NATION_STMT;
		END IF;
		SET @NDATA =NULL;
		SET @CDATA=NULL;
		SET @EXPENSE_USERSTAMP=NULL;
		SET @NATION_TIMESTAMP =NULL;
		SET MIN_NC_ID = MIN_NC_ID+1;
	END WHILE;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_NATIONALITYCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(CSQL.DATA) INTO @COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL WHERE CSQL.CGN_ID=15 AND CSQL.DATA IS NOT NULL'));
	PREPARE COUNT_NATIONALITYCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_NATIONALITYCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_NATIONALITYCONFIGURATIONSQLFORMAT_STMT;
	SET @COUNT_SPLITING_NATIONALITYCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_NATIONALITY_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION'));
	PREPARE COUNT_SPLITING_NATIONALITYCONFIGURATION_STMT FROM @COUNT_SPLITING_NATIONALITYCONFIGURATION;
    EXECUTE COUNT_SPLITING_NATIONALITYCONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_NATIONALITY_CONFIGURATION);
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='NATIONALITY_CONFIGURATION');
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='NATIONALITY_CONFIGURATION');
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	SET @DUR=DURATION;
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='NATIONALITY_CONFIGURATION';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_NATIONALITY_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_ERM_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION'));
	PREPARE DROP_ERM_CONFIGURATION_STMT FROM @DROP_ERM_CONFIGURATION;
    EXECUTE DROP_ERM_CONFIGURATION_STMT;
	SET @CREATE_ERM_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION(
	ERMCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	ERMCN_DATA TEXT NOT NULL,
	ERMCN_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	ERMCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ERMCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_ERM_CONFIGURATION_STMT FROM @CREATE_ERM_CONFIGURATION;
    EXECUTE CREATE_ERM_CONFIGURATION_STMT;
	SET @INSERT_ERM_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION(CGN_ID,ERMCN_DATA,ERMCN_INITIALIZE_FLAG,ULD_ID,ERMCN_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID=55 AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP)'));
	PREPARE INSERT_ERM_CONFIGURATION_STMT FROM @INSERT_ERM_CONFIGURATION;
    EXECUTE INSERT_ERM_CONFIGURATION_STMT;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_ERMCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(DATA) INTO @COUNT_ERM_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID=55 AND DATA IS NOT NULL'));
	PREPARE COUNT_ERMCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_ERMCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_ERMCONFIGURATIONSQLFORMAT_STMT;
	SET @COUNT_SPLITING_ERMCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_ERM_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION'));
	PREPARE COUNT_SPLITING_ERMCONFIGURATION_STMT FROM @COUNT_SPLITING_ERMCONFIGURATION;
    EXECUTE COUNT_SPLITING_ERMCONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_ERM_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ERM_CONFIGURATION);
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERM_CONFIGURATION');
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERM_CONFIGURATION');
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	SET @DUR=DURATION;
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_ERM_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ERM_CONFIGURATION';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_ERM_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID); 
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_BANKTT_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION'));
	PREPARE DROP_BANKTT_CONFIGURATION_STMT FROM @DROP_BANKTT_CONFIGURATION;
    EXECUTE DROP_BANKTT_CONFIGURATION_STMT;
	SET @CREATE_BANKTT_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION(
	BCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	BCN_DATA TEXT NOT NULL,
	BCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	BCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(BCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_BANKTT_CONFIGURATION_STMT FROM @CREATE_BANKTT_CONFIGURATION;
    EXECUTE CREATE_BANKTT_CONFIGURATION_STMT;
	SET @INSERT_BANKTT_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION(CGN_ID,BCN_DATA,BCN_INITIALIZE_FLAG,ULD_ID,BCN_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN (56,69,70,71,72) AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP)'));
	PREPARE INSERT_BANKTT_CONFIGURATION_STMT FROM @INSERT_BANKTT_CONFIGURATION;
    EXECUTE INSERT_BANKTT_CONFIGURATION_STMT;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	SET @COUNT_BANKTTCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(DATA) INTO @COUNT_BANKTT_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID IN (56,69,70,71,72) AND DATA IS NOT NULL'));
	PREPARE COUNT_BANKTTCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_BANKTTCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_BANKTTCONFIGURATIONSQLFORMAT_STMT;
	SET @COUNT_SPLITING_BANKTTCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_BANKTT_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION'));
	PREPARE COUNT_SPLITING_BANKTTCONFIGURATION_STMT FROM @COUNT_SPLITING_BANKTTCONFIGURATION;
    EXECUTE COUNT_SPLITING_BANKTTCONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_BANKTT_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_BANKTT_CONFIGURATION);
	SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='BANKTT_CONFIGURATION');
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='BANKTT_CONFIGURATION');
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	SET @DUR=DURATION;
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_BANKTT_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='BANKTT_CONFIGURATION';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_BANKTT_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);     	   	
	SET FOREIGN_KEY_CHECKS=1;
	COMMIT;
END;
CALL SP_MIG_CONFIG_INSERT2(SOURCESCHEMA,DESTINATIONSCHEMA,MIGUSERSTAMP);