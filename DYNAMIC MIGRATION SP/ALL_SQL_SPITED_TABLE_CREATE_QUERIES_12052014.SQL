SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS CONFIGURATION_PROFILE;
CREATE TABLE CONFIGURATION_PROFILE(
CNP_ID INTEGER NOT NULL AUTO_INCREMENT,
CNP_DATA VARCHAR(25) UNIQUE NOT NULL,
PRIMARY KEY(CNP_ID));

DROP TABLE IF EXISTS CONFIGURATION;
CREATE TABLE CONFIGURATION(
CGN_ID INTEGER NOT NULL AUTO_INCREMENT,
CNP_ID INTEGER NOT NULL,
CGN_TYPE VARCHAR(50) UNIQUE NOT NULL,
CGN_NON_IP_FLAG CHAR(2) NULL,
PRIMARY KEY(CGN_ID),
FOREIGN KEY(CNP_ID) REFERENCES CONFIGURATION_PROFILE(CNP_ID));

DROP TABLE IF EXISTS CUSTOMER_CONFIGURATION;
CREATE TABLE CUSTOMER_CONFIGURATION(
CCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
CCN_DATA TEXT NOT NULL,
CCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
CCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(CCN_ID),FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS UNIT_CONFIGURATION;
CREATE TABLE UNIT_CONFIGURATION(
UCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
UCN_DATA TEXT NOT NULL,
UCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
UCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(UCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS PAYMENT_CONFIGURATION;
CREATE TABLE PAYMENT_CONFIGURATION(
PCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
PCN_DATA TEXT NOT NULL,
PCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
PCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(PCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS ACCESS_CONFIGURATION;
CREATE TABLE ACCESS_CONFIGURATION(
ACN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
ACN_DATA TEXT NOT NULL,
ACN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
ACN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ACN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS OCBC_CONFIGURATION;
CREATE TABLE OCBC_CONFIGURATION(
OCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
OCN_DATA TEXT NOT NULL,
OCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
OCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(OCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EXPENSE_CONFIGURATION;
CREATE TABLE EXPENSE_CONFIGURATION(
ECN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
ECN_DATA TEXT NOT NULL,
ECN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
ECN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ECN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS DEPOSIT_DEDUCTION_CONFIGURATION;
CREATE TABLE DEPOSIT_DEDUCTION_CONFIGURATION(
DDC_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
DDC_DATA TEXT NOT NULL,
DDC_SUB_DATA TEXT NULL,
DDC_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
DDC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(DDC_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS ERROR_MESSAGE_CONFIGURATION;
CREATE TABLE ERROR_MESSAGE_CONFIGURATION(
EMC_ID INTEGER NOT NULL AUTO_INCREMENT,
CNP_ID INTEGER NOT NULL,
EMC_CODE INTEGER NOT NULL,
EMC_DATA TEXT NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
EMC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EMC_ID),
FOREIGN KEY(CNP_ID) REFERENCES CONFIGURATION_PROFILE(CNP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS TRIGGER_CONFIGURATION;
CREATE TABLE TRIGGER_CONFIGURATION(
TC_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
TC_DATA TEXT NOT NULL,
TC_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
TC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(TC_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS NATIONALITY_CONFIGURATION;
CREATE TABLE NATIONALITY_CONFIGURATION(
NC_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
NC_DATA TEXT NOT NULL,
NC_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
NC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(NC_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS USER_RIGHTS_CONFIGURATION;
CREATE TABLE USER_RIGHTS_CONFIGURATION(
URC_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
URC_DATA TEXT NOT NULL,
URC_INITIALIZE_FLAG CHAR(1) NULL,
URC_USERSTAMP VARCHAR(50) NOT NULL,
URC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(URC_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));

DROP TABLE IF EXISTS ERM_CONFIGURATION;
CREATE TABLE ERM_CONFIGURATION(
ERMCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
ERMCN_DATA TEXT NOT NULL,
ERMCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
ERMCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ERMCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS BANKTT_CONFIGURATION;
CREATE TABLE BANKTT_CONFIGURATION(
BCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
BCN_DATA TEXT NOT NULL,
BCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
BCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(BCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS CHEQUE_CONFIGURATION;
CREATE TABLE CHEQUE_CONFIGURATION(
CQCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
CQCN_DATA TEXT NOT NULL,
CQCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
CQCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(CQCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS REPORT_CONFIGURATION;
CREATE TABLE REPORT_CONFIGURATION(
RCN_ID INTEGER NOT NULL AUTO_INCREMENT,
CGN_ID INTEGER NOT NULL,
RCN_DATA TEXT NOT NULL,
RCN_INITIALIZE_FLAG CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
RCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(RCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EMAIL_TEMPLATE;
CREATE TABLE EMAIL_TEMPLATE(
ET_ID INTEGER NOT NULL AUTO_INCREMENT,
ET_EMAIL_SCRIPT VARCHAR(100) UNIQUE NOT NULL,
PRIMARY KEY(ET_ID));

DROP TABLE IF EXISTS EMAIL_TEMPLATE_DETAILS;
CREATE TABLE EMAIL_TEMPLATE_DETAILS(
ETD_ID INTEGER NOT NULL AUTO_INCREMENT,
ET_ID INTEGER NOT NULL,
ETD_EMAIL_SUBJECT VARCHAR(1000) NOT NULL,
ETD_EMAIL_BODY VARCHAR(1000) NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
ETD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ETD_ID),
FOREIGN KEY(ET_ID) REFERENCES EMAIL_TEMPLATE(ET_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EMAIL_PROFILE;
CREATE TABLE EMAIL_PROFILE(
EP_ID INTEGER NOT NULL AUTO_INCREMENT,
EP_EMAIL_DOMAIN VARCHAR(50) UNIQUE NOT NULL,
EP_NON_IP_FLAG CHAR(2) NULL,
PRIMARY KEY(EP_ID));

DROP TABLE IF EXISTS EMAIL_LIST;
CREATE TABLE EMAIL_LIST(
EL_ID INTEGER NOT NULL AUTO_INCREMENT,
EP_ID INTEGER NOT NULL,
EL_EMAIL_ID VARCHAR(50) NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
EL_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EL_ID),FOREIGN KEY(EP_ID) REFERENCES EMAIL_PROFILE(EP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS MENU_PROFILE;
CREATE TABLE MENU_PROFILE(
MP_ID INTEGER(2) NOT NULL AUTO_INCREMENT, 
EP_ID INTEGER NULL, 
FP_ID VARCHAR(10) NULL, 
MP_MNAME VARCHAR(25) NOT NULL, 
MP_MSUB VARCHAR(35) NULL, 
MP_MSUBMENU VARCHAR(35) NULL, 
MP_MFILENAME VARCHAR(100) NOT NULL, 
MP_SCRIPT_FLAG CHAR(1) NULL, 
PRIMARY KEY(MP_ID));

DROP TABLE IF EXISTS ROLE_CREATION;
CREATE TABLE ROLE_CREATION(
RC_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
URC_ID INTEGER(2) NOT NULL,
RC_NAME    VARCHAR(15)    UNIQUE NOT NULL,
RC_USERSTAMP VARCHAR(50) NOT NULL,
RC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(RC_ID),
FOREIGN KEY(URC_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID));

DROP TABLE IF EXISTS FILE_PROFILE;
CREATE TABLE  FILE_PROFILE(
FP_ID INTEGER(2) NOT NULL AUTO_INCREMENT, 
FP_FOLDER_ID TEXT NOT NULL, 
FP_FILE_ID TEXT, 
FP_FILE_FLAG TEXT, 
PRIMARY KEY(FP_ID));

DROP TABLE IF EXISTS USER_LOGIN_DETAILS;
CREATE TABLE USER_LOGIN_DETAILS(
ULD_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
ULD_LOGINID VARCHAR(40) UNIQUE NOT NULL,
ULD_USERSTAMP VARCHAR(50) NOT NULL,
ULD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ULD_ID));

DROP TABLE IF EXISTS USER_ACCESS;
CREATE TABLE USER_ACCESS(
UA_ID INTEGER NOT NULL AUTO_INCREMENT,
RC_ID INTEGER(2) NOT NULL,
ULD_ID INTEGER(2) NOT NULL, 
UA_REC_VER INTEGER NOT NULL,
UA_JOIN_DATE DATE NOT NULL,
UA_JOIN CHAR(1) NULL,
UA_END_DATE DATE NULL,
UA_TERMINATE CHAR(1) NULL,
UA_REASON TEXT NULL,
UA_USERSTAMP VARCHAR(50) NOT NULL,
UA_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(UA_ID),
FOREIGN KEY(RC_ID) REFERENCES ROLE_CREATION (RC_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS USER_MENU_DETAILS;
CREATE TABLE USER_MENU_DETAILS( 
MD_ID INTEGER NOT NULL AUTO_INCREMENT, 
MP_ID INTEGER(2) NOT NULL, 
RC_ID INTEGER(2) NOT NULL, 
ULD_ID INT(2) NOT NULL, 
MD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
PRIMARY KEY(MD_ID), 
FOREIGN KEY(MP_ID) REFERENCES MENU_PROFILE (MP_ID), 
FOREIGN KEY(RC_ID) REFERENCES ROLE_CREATION (RC_ID), 
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS USER_FILE_DETAILS;
CREATE TABLE USER_FILE_DETAILS(
UFD_ID INTEGER NOT NULL AUTO_INCREMENT, 
RC_ID INTEGER(2) NOT NULL, 
FP_ID INTEGER(2) NOT NULL,
ULD_ID INT(2) NOT NULL,
UFD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
PRIMARY KEY(UFD_ID), 
FOREIGN KEY(RC_ID) REFERENCES ROLE_CREATION (RC_ID), 
FOREIGN KEY(FP_ID) REFERENCES FILE_PROFILE (FP_ID), 
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS BASIC_ROLE_PROFILE;
CREATE TABLE  BASIC_ROLE_PROFILE(
BRP_ID INTEGER NOT NULL AUTO_INCREMENT, 
URC_ID INTEGER(2) NOT NULL, 
BRP_BR_ID INTEGER NOT NULL, 
ULD_ID INT(2) NOT NULL,
BRP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
PRIMARY KEY(BRP_ID),
FOREIGN KEY(URC_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID), 
FOREIGN KEY(BRP_BR_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID), 
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS BASIC_MENU_PROFILE;
CREATE TABLE  BASIC_MENU_PROFILE(
BMP_ID INTEGER NOT NULL AUTO_INCREMENT, 
URC_ID INTEGER(2) NOT NULL, 
MP_ID INTEGER(2) NOT NULL, 
ULD_ID INT(2) NOT NULL,
BMP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY(BMP_ID),
FOREIGN KEY(URC_ID) REFERENCES USER_RIGHTS_CONFIGURATION (URC_ID),
FOREIGN KEY(MP_ID) REFERENCES MENU_PROFILE (MP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS PUBLIC_HOLIDAY;
CREATE TABLE  PUBLIC_HOLIDAY(
PH_ID INTEGER(2) NOT NULL AUTO_INCREMENT,
PH_DESCRIPTION VARCHAR(20) NOT NULL,
PH_DATE DATE NOT NULL,
PRIMARY KEY(PH_ID));

DROP TABLE IF EXISTS STORED_PROCEDURE_PROFILE;
CREATE TABLE  STORED_PROCEDURE_PROFILE(
SPP_ID INTEGER NOT NULL AUTO_INCREMENT, 
SPP_NAME VARCHAR(100) NOT NULL,
PRIMARY KEY(SPP_ID));

DROP TABLE IF EXISTS VIEW_PROFILE;
CREATE TABLE  VIEW_PROFILE(
VP_ID INTEGER NOT NULL AUTO_INCREMENT,
VP_NAME VARCHAR(100) NOT NULL,
PRIMARY KEY(VP_ID));

DROP TABLE IF EXISTS PLATFORM_MANAGEMENT;
CREATE TABLE  PLATFORM_MANAGEMENT(
PM_ID INTEGER NOT NULL AUTO_INCREMENT,
MP_ID INTEGER(2) NOT NULL,
POSTAP_ID INTEGER,
SPP_ID INTEGER,
VP_ID INTEGER,
PRIMARY KEY(PM_ID),
FOREIGN KEY(MP_ID) REFERENCES MENU_PROFILE (MP_ID));

DROP TABLE IF EXISTS UNIT;
CREATE TABLE UNIT(
UNIT_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_NO SMALLINT(4) UNSIGNED ZEROFILL UNIQUE NOT NULL,
PRIMARY KEY(UNIT_ID));

DROP TABLE IF EXISTS UNIT_ROOM_TYPE_DETAILS;
CREATE TABLE UNIT_ROOM_TYPE_DETAILS(
URTD_ID INTEGER NOT NULL AUTO_INCREMENT,
URTD_ROOM_TYPE VARCHAR(30) UNIQUE NOT NULL,   
ULD_ID INTEGER(2) NOT NULL,   
URTD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(URTD_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS UNIT_STAMP_DUTY_TYPE;
CREATE TABLE UNIT_STAMP_DUTY_TYPE(
USDT_ID    INTEGER NOT NULL AUTO_INCREMENT,
USDT_DATA CHAR(12) UNIQUE NOT NULL,   
ULD_ID INTEGER(2) NOT NULL,   
USDT_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(USDT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS UNIT_DETAILS;
CREATE TABLE UNIT_DETAILS(
UD_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID    INTEGER NOT NULL,
UD_START_DATE DATE NOT NULL,
UD_END_DATE    DATE NOT NULL,   
UD_PAYMENT SMALLINT(4) NOT NULL,   
UD_DEPOSIT INTEGER(5) NULL,   
UD_OBSOLETE CHAR(1) NULL,    
UD_NON_EI CHAR(1) NULL,   
UD_COMMENTS    TEXT NULL,   
ULD_ID INTEGER(2) NOT NULL,   
UD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
PRIMARY KEY(UD_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS UNIT_ACCESS_STAMP_DETAILS;
CREATE TABLE UNIT_ACCESS_STAMP_DETAILS(
UASD_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
USDT_ID INTEGER NULL,
UASD_STAMPDUTYDATE DATE NULL,   
UASD_STAMPDUTYAMT DECIMAL(6,2) NULL,   
UASD_ACCESS_CARD INTEGER(7) UNIQUE NULL,   
UASD_ACCESS_ACTIVE CHAR(1) NULL,   
UASD_ACCESS_INVENTORY CHAR(1) NULL,   
UASD_ACCESS_LOST CHAR(1) NULL,   
URTD_ID INTEGER NULL,
UASD_COMMENTS TEXT NULL,   
ULD_ID INTEGER(2) NOT NULL,   
UASD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(UASD_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS UNIT_LOGIN_DETAILS;
CREATE TABLE UNIT_LOGIN_DETAILS(
ULDTL_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
ULDTL_DOORCODE VARCHAR(10) NULL,   
ULDTL_WEBLOGIN VARCHAR(20) NULL,   
ULDTL_WEBPWD VARCHAR(6) NULL,   
ULD_ID INTEGER(2) NOT NULL,   
ULDTL_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ULDTL_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS UNIT_ACCOUNT_DETAILS;
CREATE TABLE UNIT_ACCOUNT_DETAILS(
UACD_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
UACD_ACC_NO VARCHAR(15) NULL,   
UACD_ACC_NAME VARCHAR(25) NULL,   
UACD_BANK_CODE VARCHAR(5) NULL,   
UACD_BRANCH_CODE VARCHAR(5) NULL,   
UACD_BANK_ADDRESS VARCHAR(250) NULL,
PRIMARY KEY(UACD_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID));

DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER(
CUSTOMER_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_FIRST_NAME CHAR(30) NOT NULL,
CUSTOMER_LAST_NAME CHAR(30) NOT NULL,
PRIMARY KEY(CUSTOMER_ID));

DROP TABLE IF EXISTS CUSTOMER_COMPANY_DETAILS;
CREATE TABLE CUSTOMER_COMPANY_DETAILS(
CCD_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
CCD_COMPANY_NAME VARCHAR(50) NULL,
CCD_COMPANY_ADDR VARCHAR(50) NULL,
CCD_POSTAL_CODE VARCHAR(6) NULL,
CCD_OFFICE_NO VARCHAR(8) NULL,
PRIMARY KEY(CCD_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID));

DROP TABLE IF EXISTS CUSTOMER_ENTRY_DETAILS;
CREATE TABLE CUSTOMER_ENTRY_DETAILS(
CED_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
UNIT_ID INTEGER NOT NULL,
UASD_ID INTEGER NOT NULL, 
CED_REC_VER INTEGER NOT NULL,
CED_SD_STIME INTEGER NOT NULL,
CED_SD_ETIME INTEGER NOT NULL,
CED_ED_STIME INTEGER NOT NULL,
CED_ED_ETIME INTEGER NOT NULL,
CED_LEASE_PERIOD VARCHAR(30) NULL,
CED_QUARTERS DECIMAL(5,2) NULL,
CED_RECHECKIN CHAR(1) NULL,
CED_EXTENSION CHAR(1) NULL,
CED_PRETERMINATE CHAR(1) NULL,
CED_PROCESSING_WAIVED CHAR(1) NULL,
CED_PRORATED CHAR(1) NULL,
CED_NOTICE_PERIOD TINYINT(1) NULL,
CED_NOTICE_START_DATE DATE NULL,
CED_CANCEL_DATE DATE NULL,
PRIMARY KEY(CED_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
FOREIGN KEY(UASD_ID) REFERENCES UNIT_ACCESS_STAMP_DETAILS(UASD_ID),
FOREIGN KEY(CED_SD_STIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID),
FOREIGN KEY(CED_SD_ETIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID),
FOREIGN KEY(CED_ED_STIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID),
FOREIGN KEY(CED_ED_ETIME)REFERENCES CUSTOMER_TIME_PROFILE(CTP_ID))ENGINE=MYISAM;

DROP TABLE IF EXISTS CUSTOMER_PAYMENT_PROFILE;
CREATE TABLE CUSTOMER_PAYMENT_PROFILE(
CPP_ID INTEGER NOT NULL AUTO_INCREMENT,
CPP_DATA VARCHAR(50) NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
CPP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(CPP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS CUSTOMER_FEE_DETAILS;
CREATE TABLE CUSTOMER_FEE_DETAILS(
CFD_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
CED_REC_VER INTEGER NOT NULL,
CPP_ID INTEGER NOT NULL,
CFD_AMOUNT DECIMAL(7,2) NOT NULL,
PRIMARY KEY(CFD_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(CPP_ID) REFERENCES CUSTOMER_PAYMENT_PROFILE(CPP_ID));

DROP TABLE IF EXISTS CUSTOMER_ACCESS_CARD_DETAILS;
CREATE TABLE CUSTOMER_ACCESS_CARD_DETAILS(
CACD_ID    INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
UASD_ID INTEGER NOT NULL,
ACN_ID INTEGER NULL,
CACD_VALID_FROM DATE NOT NULL,
CACD_VALID_TILL DATE NULL,
CACD_GUEST_CARD CHAR(1) NULL,
ULD_ID INT(2) NOT NULL,
CACD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(CACD_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(UASD_ID) REFERENCES UNIT_ACCESS_STAMP_DETAILS(UASD_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS CUSTOMER_LP_DETAILS;
CREATE TABLE CUSTOMER_LP_DETAILS(
CLP_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
CED_REC_VER INTEGER NOT NULL,
UASD_ID INTEGER NULL,
CLP_STARTDATE DATE NOT NULL,
CLP_ENDDATE DATE NOT NULL,
CLP_TERMINATE CHAR(1) NULL,
CLP_PRETERMINATE_DATE DATE NULL,
CLP_GUEST_CARD CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
CLP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(CLP_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS CUSTOMER_PERSONAL_DETAILS;
CREATE TABLE CUSTOMER_PERSONAL_DETAILS(
CPD_ID INTEGER NOT NULL AUTO_INCREMENT,
CUSTOMER_ID INTEGER NOT NULL,
NC_ID INTEGER NOT NULL,
CPD_MOBILE VARCHAR(8) NULL,
CPD_INTL_MOBILE VARCHAR(20) NULL,
CPD_EMAIL VARCHAR(40) NOT NULL,
CPD_PASSPORT_NO VARCHAR(15) NULL,
CPD_PASSPORT_DATE DATE NULL,
CPD_DOB DATE NULL,
CPD_EP_NO VARCHAR(15) NULL,
CPD_EP_DATE DATE NULL,
CPD_COMMENTS TEXT NULL,
PRIMARY KEY(CPD_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(NC_ID) REFERENCES NATIONALITY_CONFIGURATION(NC_ID));

DROP TABLE IF EXISTS CUSTOMER_TIME_PROFILE;
CREATE TABLE CUSTOMER_TIME_PROFILE(
CTP_ID INTEGER NOT NULL AUTO_INCREMENT,
CTP_DATA TIME NOT NULL,
PRIMARY KEY(CTP_ID));

DROP TABLE IF EXISTS PAYMENT_PROFILE;
CREATE TABLE PAYMENT_PROFILE(
PP_ID INTEGER NOT NULL AUTO_INCREMENT,
PP_DATA VARCHAR(50) NOT NULL,
PRIMARY KEY(PP_ID));

DROP TABLE IF EXISTS PAYMENT_DETAILS;
CREATE TABLE PAYMENT_DETAILS(
PD_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
CUSTOMER_ID INTEGER NOT NULL,
PP_ID INTEGER NOT NULL,
CED_REC_VER INTEGER NOT NULL,
PD_AMOUNT DECIMAL(7,2) NOT NULL,
PD_FOR_PERIOD DATE NOT NULL,
PD_PAID_DATE DATE NOT NULL,
PD_HIGHLIGHT_FLAG CHAR(1)NULL,
PD_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
PD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(PD_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT(UNIT_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
FOREIGN KEY(PP_ID) REFERENCES PAYMENT_PROFILE(PP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EMPLOYEE_DETAILS;
CREATE TABLE EMPLOYEE_DETAILS(
EMP_ID INTEGER NOT NULL AUTO_INCREMENT,
EMP_FIRST_NAME CHAR(30) NOT NULL,
EMP_LAST_NAME CHAR(30) NOT NULL,
ECN_ID INTEGER NOT NULL,
EMP_MOBILE VARCHAR(10) NOT NULL,
EMP_EMAIL VARCHAR(40) NULL,
EMP_COMMENTS TEXT NULL,
ULD_ID INT(2) NOT NULL,
EMP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EMP_ID),
FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EMPLOYEE_CARD_DETAILS;
CREATE TABLE EMPLOYEE_CARD_DETAILS(
ECD_ID INTEGER NOT NULL AUTO_INCREMENT,
EMP_ID  INTEGER NOT NULL,
UASD_ID  INTEGER NOT NULL,
PRIMARY KEY(ECD_ID),
FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE_DETAILS (EMP_ID),
FOREIGN KEY(UASD_ID) REFERENCES UNIT_ACCESS_STAMP_DETAILS(UASD_ID));

DROP TABLE IF EXISTS EXPENSE_DETAIL_STAFF_SALARY;
CREATE TABLE EXPENSE_DETAIL_STAFF_SALARY(
EDSS_ID INTEGER NOT NULL AUTO_INCREMENT,
EMP_ID INTEGER NOT NULL,
EDSS_CPF_NUMBER VARCHAR(9) UNIQUE NULL,
EDSS_CPF_AMOUNT DECIMAL(7,2) NULL,
EDSS_LEVY_AMOUNT DECIMAL(7,2) NULL,
EDSS_SALARY_AMOUNT DECIMAL(7,2) NOT NULL,
EDSS_COMMENTS TEXT NULL,
ULD_ID INT(2)NOT NULL,
EDSS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDSS_ID),
FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE_DETAILS (EMP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));

DROP TABLE IF EXISTS EXPENSE_STAFF_SALARY;
CREATE TABLE EXPENSE_STAFF_SALARY(
ESS_ID INTEGER NOT NULL AUTO_INCREMENT,
EDSS_ID INTEGER NOT NULL,
ESS_INVOICE_DATE DATE NOT NULL,
ESS_FROM_PERIOD DATE NOT NULL,
ESS_TO_PERIOD DATE NOT NULL,
ESS_CPF_AMOUNT DECIMAL(7,2) NULL,
ESS_LEVY_AMOUNT DECIMAL(7,2) NULL,
ESS_SALARY_AMOUNT DECIMAL(7,2) NOT NULL,
ESS_SALARY_COMMENTS TEXT NULL,
ULD_ID INT(2) NOT NULL,
ESS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ESS_ID),
FOREIGN KEY(EDSS_ID) REFERENCES EXPENSE_DETAIL_STAFF_SALARY (EDSS_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));

DROP TABLE IF EXISTS EXPENSE_STAFF;
CREATE TABLE EXPENSE_STAFF(
ES_ID INTEGER NOT NULL AUTO_INCREMENT,
ECN_ID INTEGER NOT NULL,
ES_INVOICE_DATE DATE NOT NULL,
ES_INVOICE_AMOUNT DECIMAL(7,2) NOT NULL,
ES_INVOICE_ITEMS TEXT NOT NULL,
ES_INVOICE_FROM VARCHAR(200) NOT NULL,
ES_COMMENTS TEXT NULL,
ULD_ID INT(2) NOT NULL,
ES_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ES_ID),
FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));

DROP TABLE IF EXISTS EXPENSE_AGENT;
CREATE TABLE EXPENSE_AGENT(
EA_ID INTEGER NOT NULL AUTO_INCREMENT,
EA_DATE DATE NOT NULL,
EA_COMM_AMOUNT DECIMAL(7,2) NOT NULL,
EA_COMMENTS TEXT NULL,
ULD_ID INT(2) NOT NULL NOT NULL,
EA_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EA_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID ));

DROP TABLE IF EXISTS EXPENSE_AIRCON_SERVICE_BY;
CREATE TABLE EXPENSE_AIRCON_SERVICE_BY(
EASB_ID INTEGER NOT NULL,
EASB_DATA CHAR(50) UNIQUE NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
EASB_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EASB_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_DETAIL_STARHUB;
CREATE TABLE EXPENSE_DETAIL_STARHUB(
EDSH_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
ECN_ID INTEGER NULL,
EDSH_REC_VER INTEGER NOT NULL,
EDSH_ACCOUNT_NO VARCHAR(11) NOT NULL,
EDSH_APPL_DATE DATE NULL,
EDSH_CABLE_START_DATE DATE NULL,
EDSH_CABLE_END_DATE DATE NULL,
EDSH_INTERNET_START_DATE DATE NULL,
EDSH_INTERNET_END_DATE DATE NULL,
EDSH_SSID VARCHAR(25) NULL,
EDSH_PWD VARCHAR(25) NULL,
EDSH_CABLE_BOX_SERIAL_NO VARCHAR(50) NULL,
EDSH_MODEM_SERIAL_NO VARCHAR(50) NULL,
EDSH_BASIC_GROUP TEXT NULL,
EDSH_ADDTNL_CH TEXT NULL,
EDSH_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EDSH_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDSH_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_DETAIL_ELECTRICITY;
CREATE TABLE EXPENSE_DETAIL_ELECTRICITY(
EDE_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
ECN_ID INTEGER NOT NULL,
EDE_REC_VER INTEGER NOT NULL,
EDE_COMMENTS TEXT NULL,
ULD_ID INTEGER NOT NULL,
EDE_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDE_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_DETAIL_DIGITAL_VOICE;
CREATE TABLE EXPENSE_DETAIL_DIGITAL_VOICE(
EDDV_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
ECN_ID INTEGER NULL,
EDDV_REC_VER INTEGER NOT NULL,
EDDV_DIGITAL_VOICE_NO INTEGER(8) NOT NULL,
EDDV_DIGITAL_ACCOUNT_NO VARCHAR(11) NOT NULL,
EDDV_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EDDV_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDDV_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_DETAIL_AIRCON_SERVICE;
CREATE TABLE EXPENSE_DETAIL_AIRCON_SERVICE(
EDAS_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
EASB_ID INTEGER NOT NULL,
EDAS_REC_VER INTEGER NOT NULL,
EDAS_COMMENTS TEXT NULL,
ULD_ID INTEGER NOT NULL,
EDAS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDAS_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(EASB_ID) REFERENCES EXPENSE_AIRCON_SERVICE_BY (EASB_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_DETAIL_CARPARK;
CREATE TABLE EXPENSE_DETAIL_CARPARK(
EDCP_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
EDCP_REC_VER INTEGER NOT NULL,
EDCP_CAR_NO VARCHAR(9) NOT NULL,
EDCP_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EDCP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDCP_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_UNIT;
CREATE TABLE EXPENSE_UNIT(
EU_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
ECN_ID INTEGER NOT NULL,
CUSTOMER_ID INTEGER NULL,
EU_INVOICE_DATE DATE NOT NULL,
EU_AMOUNT DECIMAL(7,2) NOT NULL,
EU_INVOICE_ITEMS TEXT NOT NULL,
EU_INVOICE_FROM VARCHAR(200) NOT NULL,
EU_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EU_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_ELECTRICITY;
CREATE TABLE EXPENSE_ELECTRICITY(
EE_ID INTEGER NOT NULL AUTO_INCREMENT,
EDE_ID INTEGER NOT NULL,
EE_INVOICE_DATE DATE NOT NULL,
EE_FROM_PERIOD DATE NOT NULL,
EE_TO_PERIOD DATE NOT NULL,
ECN_ID INTEGER NOT NULL,
EE_AMOUNT DECIMAL(7,2) NOT NULL,
EE_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EE_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EE_ID),
FOREIGN KEY(EDE_ID) REFERENCES EXPENSE_DETAIL_ELECTRICITY (EDE_ID),
FOREIGN KEY(ECN_ID) REFERENCES EXPENSE_CONFIGURATION (ECN_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_STARHUB;
CREATE TABLE EXPENSE_STARHUB(
ESH_ID INTEGER NOT NULL AUTO_INCREMENT,
EDSH_ID INTEGER NOT NULL,
ESH_INVOICE_DATE DATE NOT NULL,
ESH_FROM_PERIOD DATE NOT NULL,
ESH_TO_PERIOD  DATE NOT NULL,
ESH_AMOUNT DECIMAL(7,2) NOT NULL,
ESH_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
ESH_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ESH_ID),
FOREIGN KEY(EDSH_ID) REFERENCES EXPENSE_DETAIL_STARHUB(EDSH_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_DIGITAL_VOICE;
CREATE TABLE EXPENSE_DIGITAL_VOICE(
EDV_ID INTEGER NOT NULL AUTO_INCREMENT,
EDDV_ID INTEGER NOT NULL,
EDV_INVOICE_DATE DATE NOT NULL,
EDV_FROM_PERIOD DATE NOT NULL,
EDV_TO_PERIOD DATE NOT NULL,
EDV_AMOUNT DECIMAL(7,2) NOT NULL,
EDV_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EDV_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EDV_ID),
FOREIGN KEY(EDDV_ID) REFERENCES EXPENSE_DETAIL_DIGITAL_VOICE (EDDV_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_FACILITY_USE;
CREATE TABLE EXPENSE_FACILITY_USE(
EFU_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
EFU_INVOICE_DATE DATE NOT NULL,
EFU_DEPOSIT DECIMAL(7,2) NULL,
EFU_AMOUNT DECIMAL(7,2) NULL,
EFU_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EFU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EFU_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_CARPARK;
CREATE TABLE EXPENSE_CARPARK(
ECP_PARK_ID INT NOT NULL AUTO_INCREMENT,
EDCP_ID INTEGER NOT NULL,
ECP_INVOICE_DATE DATE NOT NULL,
ECP_FROM_PERIOD DATE NOT NULL,
ECP_TO_PERIOD DATE NOT NULL,
ECP_AMOUNT DECIMAL(7,2) NOT NULL,
ECP_COMMENTS TEXT,
ULD_ID INTEGER(2) NOT NULL,
ECP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ECP_PARK_ID),
FOREIGN KEY(EDCP_ID) REFERENCES EXPENSE_DETAIL_CARPARK (EDCP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_MOVING_IN_AND_OUT;
CREATE TABLE EXPENSE_MOVING_IN_AND_OUT(
EMIO_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
EMIO_INVOICE_DATE DATE NOT NULL,
EMIO_AMOUNT DECIMAL(7,2) NOT NULL,
EMIO_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EMIO_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EMIO_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_AIRCON_SERVICE;
CREATE TABLE EXPENSE_AIRCON_SERVICE(
EAS_ID INTEGER NOT NULL AUTO_INCREMENT,
EDAS_ID INTEGER NOT NULL,
EAS_DATE DATE NOT NULL,
EAS_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EAS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EAS_ID),
FOREIGN KEY(EDAS_ID) REFERENCES EXPENSE_DETAIL_AIRCON_SERVICE (EDAS_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_PURCHASE_NEW_CARD;
CREATE TABLE EXPENSE_PURCHASE_NEW_CARD(
EPNC_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NOT NULL,
EPNC_NUMBER INTEGER(7) UNIQUE NOT NULL,
EPNC_INVOICE_DATE DATE NOT NULL,
EPNC_AMOUNT DECIMAL(7,2) NOT NULL,
EPNC_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EPNC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EPNC_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_PETTY_CASH;
CREATE TABLE EXPENSE_PETTY_CASH(
EPC_ID INTEGER NOT NULL AUTO_INCREMENT,
EPC_DATE DATE NOT NULL,
EPC_CASH_IN DECIMAL(7,2) NULL,
EPC_CASH_OUT DECIMAL(7,2) NULL,
EPC_BALANCE DECIMAL(7,2) NOT NULL,
EPC_INVOICE_ITEMS TEXT NOT NULL,
EPC_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EPC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EPC_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_HOUSEKEEPING;
CREATE TABLE EXPENSE_HOUSEKEEPING(
EHK_ID INTEGER NOT NULL AUTO_INCREMENT,
EMP_ID INTEGER NOT NULL,
EHK_WORK_DATE DATE NOT NULL,
EHK_DURATION DECIMAL(4,2) NOT NULL,
EHK_DESCRIPTION TEXT NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
EHK_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EHK_ID),
FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEE_DETAILS (EMP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_HOUSEKEEPING_PAYMENT;
CREATE TABLE EXPENSE_HOUSEKEEPING_PAYMENT(
EHKP_ID INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID INTEGER NULL,
EHKU_ID INTEGER NULL,
EHKP_FOR_PERIOD DATE NOT NULL,
EHKP_PAID_DATE DATE NOT NULL,
EHKP_AMOUNT DECIMAL(7,2) NOT NULL,
EHKP_COMMENTS TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
EHKP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EHKP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_HOUSEKEEPING_UNIT;
CREATE TABLE EXPENSE_HOUSEKEEPING_UNIT(
EHKU_ID INTEGER NOT NULL  AUTO_INCREMENT,
EHKU_UNIT_NO SMALLINT(4) UNIQUE NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
EHKU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EHKU_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS EXPENSE_PERSONAL;
CREATE TABLE EXPENSE_PERSONAL(
EP_ID INTEGER NOT NULL AUTO_INCREMENT,
ECN_ID INTEGER NOT NULL,
EP_INVOICE_DATE DATE NOT NULL,
EP_AMOUNT DECIMAL(7,2)NOT NULL,
EP_INVOICE_ITEMS TEXT NOT NULL,
EP_INVOICE_FROM VARCHAR(200)NOT NULL,
EP_COMMENTS TEXT,
ULD_ID INTEGER(2) NOT NULL,
EP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EP_ID),
FOREIGN KEY(ECN_ID)REFERENCES EXPENSE_CONFIGURATION(ECN_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EXPENSE_CAR;
CREATE TABLE EXPENSE_CAR(
EC_ID INTEGER NOT NULL AUTO_INCREMENT,
ECN_ID INTEGER NOT NULL,
EC_INVOICE_DATE DATE NOT NULL,
EC_AMOUNT DECIMAL(7,2) NOT NULL,
EC_INVOICE_ITEMS TEXT NOT NULL,
EC_INVOICE_FROM VARCHAR(200) NOT NULL,
EC_COMMENTS TEXT,
ULD_ID INTEGER(2) NOT NULL,
EC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EC_ID),
FOREIGN KEY(ECN_ID)REFERENCES EXPENSE_CONFIGURATION(ECN_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EXPENSE_BABY;
CREATE TABLE EXPENSE_BABY(
EB_ID INTEGER NOT NULL AUTO_INCREMENT,
ECN_ID INTEGER NOT NULL,
EB_INVOICE_DATE DATE NOT NULL,
EB_AMOUNT DECIMAL(7,2) NOT NULL,
EB_INVOICE_ITEMS TEXT NOT NULL,
EB_INVOICE_FROM VARCHAR(200) NOT NULL,
EB_COMMENTS TEXT,
ULD_ID INTEGER(2) NOT NULL,
EB_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(EB_ID),
FOREIGN KEY(ECN_ID)REFERENCES EXPENSE_CONFIGURATION(ECN_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS EXPENSE_CAR_LOAN;
CREATE TABLE EXPENSE_CAR_LOAN(
ECL_ID INTEGER NOT NULL AUTO_INCREMENT,
ECL_PAID_DATE DATE NOT NULL,
ECL_FROM_PERIOD DATE NOT NULL,
ECL_TO_PERIOD DATE NOT NULL,
ECL_AMOUNT DECIMAL(7,2)NOT NULL,
ECL_COMMENTS TEXT,
ULD_ID INTEGER(2)NOT NULL,
ECL_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ECL_ID),
FOREIGN KEY (ULD_ID)REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS TRIGGER_EXECUTION_DETAILS;
CREATE TABLE TRIGGER_EXECUTION_DETAILS(
TED_ID INTEGER NOT NULL AUTO_INCREMENT,
TC_ID INTEGER NOT NULL,
TED_TIME DATETIME NOT NULL,
ULD_ID INTEGER(2) NOT NULL,
TED_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(TED_ID),
FOREIGN KEY(TC_ID) REFERENCES TRIGGER_CONFIGURATION(TC_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS BANK_TRANSFER_MODELS;
CREATE TABLE BANK_TRANSFER_MODELS(
BTM_ID INTEGER NOT NULL AUTO_INCREMENT,
BTM_DATA VARCHAR(50) NOT NULL,
BTM_OBSOLETE CHAR(1) NULL,
ULD_ID    INTEGER(2) NOT NULL,
BTM_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(BTM_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS BANK_TRANSFER_STATUS_DETAILS;
CREATE TABLE BANK_TRANSFER_STATUS_DETAILS( 
BTSD_ID INTEGER NOT NULL AUTO_INCREMENT,
BT_ID INTEGER NOT NULL,
BCN_ID INTEGER NOT NULL,
CGN_ID INTEGER NOT NULL,
PRIMARY KEY(BTSD_ID),
FOREIGN KEY(BT_ID) REFERENCES BANK_TRANSFER(BT_ID),
FOREIGN KEY(BCN_ID) REFERENCES BANKTT_CONFIGURATION(BCN_ID),
FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID));

DROP TABLE IF EXISTS BANK_TRANSFER;
CREATE TABLE BANK_TRANSFER( 
BT_ID INTEGER NOT NULL AUTO_INCREMENT,
BTM_ID INTEGER,	
BT_DATE	DATE NOT NULL,
BT_AMOUNT DECIMAL(7,2) NOT NULL,
BT_ACC_NAME	VARCHAR(40),
BT_ACC_NO VARCHAR(25),
BT_BANK_CODE VARCHAR(4),
BT_BRANCH_CODE VARCHAR(3),
BT_BANK_ADDRESS VARCHAR(250),
BT_SWIFT_CODE VARCHAR(12),
BT_CUST_REF	VARCHAR(200),
BT_INV_DETAILS TEXT,
BT_DEBITED_ON DATE,
BT_COMMENTS	TEXT,
ULD_ID INT(2) NOT NULL,
BT_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(BT_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS BANK_TRANSFER_DETAIL;
CREATE TABLE BANK_TRANSFER_DETAIL( 
BTD_ID	INTEGER NOT NULL AUTO_INCREMENT,
UNIT_ID	INTEGER NOT NULL,
CUSTOMER_ID	INTEGER NOT NULL,
BT_ID INTEGER NOT NULL,
PRIMARY KEY(BTD_ID),
FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
FOREIGN KEY(BT_ID) REFERENCES BANK_TRANSFER (BT_ID));

DROP TABLE IF EXISTS CHEQUE_ENTRY_DETAILS;
CREATE TABLE  CHEQUE_ENTRY_DETAILS(
CHEQUE_ID INTEGER NOT NULL AUTO_INCREMENT, 
CHEQUE_DATE	DATE  NOT NULL,	
CHEQUE_TO VARCHAR(100) NOT NULL, 
CHEQUE_NO INTEGER(6) NOT NULL,	
CHEQUE_FOR VARCHAR(100) NOT NULL,	
CHEQUE_AMOUNT DECIMAL(7,2) NOT NULL,	
CHEQUE_UNIT_NO VARCHAR(25) NULL, 
BCN_ID INTEGER NOT NULL, 
CHEQUE_DEBITED_RETURNED_DATE DATE NULL,	
CHEQUE_COMMENTS	TEXT NULL, 
ULD_ID INTEGER(2) NOT NULL,
CHEQUE_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
PRIMARY KEY(CHEQUE_ID), 
FOREIGN KEY(BCN_ID) REFERENCES BANKTT_CONFIGURATION (BCN_ID), 
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS OCBC_BANK_RECORDS;
CREATE TABLE  OCBC_BANK_RECORDS(
OBR_ID BIGINT NOT NULL AUTO_INCREMENT,
OBR_ACCOUNT_NUMBER BIGINT NOT NULL,
OBR_CURRENCY VARCHAR(5) NOT NULL,
OBR_PREVIOUS_BALANCE DECIMAL(10,2) NOT NULL,
OBR_OPENING_BALANCE DECIMAL(10,2) NOT NULL,
OBR_CLOSING_BALANCE DECIMAL(10,2) NOT NULL,
OBR_LAST_BALANCE DECIMAL(10,2) NOT NULL,
OBR_NO_OF_CREDITS INT NULL,
OBR_OLD_BALANCE DECIMAL(10,2) NOT NULL,
OBR_NO_OF_DEBITS DECIMAL(10,2) NULL,
OBR_TRANS_DATE DATE NOT NULL,
OBR_D_AMOUNT INT NOT NULL,
OBR_POST_DATE DATE NOT NULL,
OBR_VALUE_DATE DATE NOT NULL,
OBR_DEBIT_AMOUNT DECIMAL(10,2) NULL,
OBR_CREDIT_AMOUNT DECIMAL(10,2) NULL,
OBR_TRX_CODE VARCHAR(10) NULL,
OBR_CLIENT_REFERENCE VARCHAR(1000) NULL,
OBR_TRANSACTION_DESC_DETAILS VARCHAR(1000) NOT NULL,
OBR_BANK_REFERENCE VARCHAR(1000) NULL,
OBR_TRX_TYPE VARCHAR(250) NULL,
OBR_REF_ID INTEGER NULL,
OBR_REFERENCE CHAR(1) NULL,
ULD_ID INTEGER(2) NOT NULL,
OBR_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(OBR_ID), 
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS (ULD_ID));

DROP TABLE IF EXISTS ERM_ENTRY_DETAILS;
CREATE TABLE ERM_ENTRY_DETAILS(
ERM_ID INTEGER NOT NULL AUTO_INCREMENT, 
ERM_CUST_NAME VARCHAR(40) NOT NULL, 
ERM_RENT DECIMAL(7,2) NOT NULL, 
ERM_MOVING_DATE DATE NOT NULL, 
ERM_MIN_STAY VARCHAR(10) NOT NULL, 
ERMO_ID INTEGER NOT NULL, 
NC_ID INTEGER NULL, 
ERM_NO_OF_GUESTS VARCHAR(10) NULL, 
ERM_AGE VARCHAR(10) NULL, 
ERM_CONTACT_NO BIGINT(15) NULL, 
ERM_EMAIL_ID VARCHAR(40) NULL, 
ERM_COMMENTS TEXT NOT NULL, 
ULD_ID INT(2) NOT NULL, 
ERM_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, 
PRIMARY KEY(ERM_ID), 
FOREIGN KEY(ERMO_ID) REFERENCES ERM_OCCUPATION_DETAILS (ERMO_ID), 
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS ERM_OCCUPATION_DETAILS;
CREATE TABLE ERM_OCCUPATION_DETAILS(
ERMO_ID INTEGER NOT NULL AUTO_INCREMENT,
ERMO_DATA VARCHAR(40) NOT NULL,
ULD_ID INT(2) NOT NULL,
ERMO_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(ERMO_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS TICKLER_TABID_PROFILE;
CREATE TABLE TICKLER_TABID_PROFILE(
TTIP_ID INTEGER NOT NULL AUTO_INCREMENT,
TTIP_DATA VARCHAR(50) NOT NULL,
PRIMARY KEY(TTIP_ID));

DROP TABLE IF EXISTS TICKLER_HISTORY;
CREATE TABLE TICKLER_HISTORY(
TH_ID INTEGER NOT NULL AUTO_INCREMENT,
TP_ID INTEGER NOT NULL,
CUSTOMER_ID INTEGER NULL,
TTIP_ID INTEGER NOT NULL,
TH_OLD_VALUE TEXT NOT NULL,
TH_NEW_VALUE TEXT NULL,
ULD_ID INTEGER(2) NOT NULL,
TH_TIMESTAMP  TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
PRIMARY KEY(TH_ID),
FOREIGN KEY(TP_ID) REFERENCES TICKLER_PROFILE(TP_ID),
FOREIGN KEY(TTIP_ID) REFERENCES TICKLER_TABID_PROFILE(TTIP_ID),
FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID));

DROP TABLE IF EXISTS TICKLER_PROFILE;
CREATE TABLE TICKLER_PROFILE(
TP_ID INTEGER NOT NULL AUTO_INCREMENT,
TP_TYPE CHAR(10) NOT NULL,
PRIMARY KEY(TP_ID));

SET FOREIGN_KEY_CHECKS=1;