--version:0.1 --sdate:27/06/2014 --edate:27/06/2014 --issue:765  --desc:GET EXPENSE DATA'S WHICH IS NOT IN VALID UNIT DATE'S  --doneby:RL

DROP PROCEDURE IF EXISTS SP_TO_CHECK_EXP_DATE_NOT_IN_UNIT_LP;
CREATE PROCEDURE SP_TO_CHECK_EXP_DATE_NOT_IN_UNIT_LP()

BEGIN

	DECLARE MINID INTEGER;
	DECLARE MAXID INTEGER;
	
	DECLARE MIN_ID INTEGER;
	DECLARE MAX_ID INTEGER;
	DECLARE UNITID INTEGER;
	DECLARE UNITENDDATE DATE;

	DROP TABLE IF EXISTS TEMP_UNIT_DTLS;
	CREATE TABLE TEMP_UNIT_DTLS(
	ID INTEGER AUTO_INCREMENT,
	UNIT_ID INTEGER,
	UNIT_NO SMALLINT(4),
	UD_START_DATE DATE,
	UD_END_DATE DATE,
	FINAL_END_DATE DATE,
	PRIMARY KEY(ID));
	
	INSERT INTO TEMP_UNIT_DTLS(UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE)
	SELECT U.UNIT_ID,U.UNIT_NO,UD.UD_START_DATE,UD.UD_END_DATE FROM UNIT U,UNIT_DETAILS UD WHERE U.UNIT_ID=UD.UNIT_ID;
	
	SET MIN_ID = (SELECT MIN(ID) FROM TEMP_UNIT_DTLS);
	SET MAX_ID = (SELECT MAX(ID) FROM TEMP_UNIT_DTLS);
	
	WHILE(MIN_ID <= MAX_ID)DO
	
		SET UNITID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MIN_ID);
	
		CALL SP_CONFIG_MONTH(UNITID,@CONFIGDATE);
	
		SET UNITENDDATE=@CONFIGDATE;
		
		UPDATE TEMP_UNIT_DTLS SET FINAL_END_DATE = UNITENDDATE WHERE ID = MIN_ID;
		
		SET MIN_ID = MIN_ID+1;
		
	END WHILE;
	
	SET MINID = (SELECT MIN(ID) FROM TEMP_UNIT_DTLS);
	SET MAXID = (SELECT MAX(ID) FROM TEMP_UNIT_DTLS);
	
	DROP TABLE IF EXISTS TEMP_EXP_INV_DATE;
	CREATE TABLE TEMP_EXP_INV_DATE(
	ID INTEGER AUTO_INCREMENT,
	TABLENAME TEXT,
	UNIT_ID INTEGER,
	UNIT_NO SMALLINT(4),
	UD_START_DATE DATE,
	UD_END_DATE DATE,
	FINAL_END_DATE DATE,
	MIN_INV_DATE DATE,
	MAX_INV_DATE DATE,
	PRIMARY KEY(ID));
	
	WHILE (MINID <= MAXID) DO
	
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_AIRCON_SERVICE WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_AIRCON_SERVICE',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EAS.EAS_DATE FROM EXPENSE_AIRCON_SERVICE EAS,EXPENSE_DETAIL_AIRCON_SERVICE EDAS,TEMP_UNIT_DTLS T WHERE EDAS.EDAS_ID=EAS.EDAS_ID AND T.UNIT_ID=EDAS.UNIT_ID AND T.ID=MINID ORDER BY EAS.EAS_DATE ASC LIMIT 1),
			(SELECT EAS.EAS_DATE FROM EXPENSE_AIRCON_SERVICE EAS,EXPENSE_DETAIL_AIRCON_SERVICE EDAS,TEMP_UNIT_DTLS T WHERE EDAS.EDAS_ID=EAS.EDAS_ID AND T.UNIT_ID=EDAS.UNIT_ID AND T.ID=MINID ORDER BY EAS.EAS_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_CARPARK WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_CARPARK',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT ECP.ECP_INVOICE_DATE FROM EXPENSE_CARPARK ECP,EXPENSE_DETAIL_CARPARK EDCP,TEMP_UNIT_DTLS T WHERE EDCP.EDCP_ID=ECP.EDCP_ID AND T.UNIT_ID=EDCP.UNIT_ID  AND T.ID=MINID ORDER BY ECP.ECP_INVOICE_DATE ASC LIMIT 1),
			(SELECT ECP.ECP_INVOICE_DATE FROM EXPENSE_CARPARK ECP,EXPENSE_DETAIL_CARPARK EDCP,TEMP_UNIT_DTLS T WHERE EDCP.EDCP_ID=ECP.EDCP_ID AND T.UNIT_ID=EDCP.UNIT_ID  AND T.ID=MINID ORDER BY ECP.ECP_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_DIGITAL_VOICE WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_DIGITAL_VOICE',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EDV.EDV_INVOICE_DATE FROM EXPENSE_DIGITAL_VOICE EDV,EXPENSE_DETAIL_DIGITAL_VOICE EDDV,TEMP_UNIT_DTLS T WHERE EDDV.EDDV_ID=EDV.EDDV_ID AND T.UNIT_ID=EDDV.UNIT_ID  AND T.ID=MINID ORDER BY EDV.EDV_INVOICE_DATE ASC LIMIT 1),
			(SELECT EDV.EDV_INVOICE_DATE FROM EXPENSE_DIGITAL_VOICE EDV,EXPENSE_DETAIL_DIGITAL_VOICE EDDV,TEMP_UNIT_DTLS T WHERE EDDV.EDDV_ID=EDV.EDDV_ID AND T.UNIT_ID=EDDV.UNIT_ID  AND T.ID=MINID ORDER BY EDV.EDV_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_ELECTRICITY WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_ELECTRICITY',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EE.EE_INVOICE_DATE FROM EXPENSE_ELECTRICITY EE,EXPENSE_DETAIL_ELECTRICITY EDE,TEMP_UNIT_DTLS T WHERE EDE.EDE_ID=EE.EDE_ID AND T.UNIT_ID=EDE.UNIT_ID AND T.ID = MINID ORDER BY EE.EE_INVOICE_DATE ASC LIMIT 1),
			(SELECT EE.EE_INVOICE_DATE FROM EXPENSE_ELECTRICITY EE,EXPENSE_DETAIL_ELECTRICITY EDE,TEMP_UNIT_DTLS T WHERE EDE.EDE_ID=EE.EDE_ID AND T.UNIT_ID=EDE.UNIT_ID AND T.ID = MINID ORDER BY EE.EE_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_FACILITY_USE WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE UNIT_ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_FACILITY_USE',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EFU_INVOICE_DATE FROM EXPENSE_FACILITY_USE WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EFU_INVOICE_DATE ASC LIMIT 1),
			(SELECT EFU_INVOICE_DATE FROM EXPENSE_FACILITY_USE WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EFU_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_HOUSEKEEPING_PAYMENT ',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EHKP_PAID_DATE FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EHKP_FOR_PERIOD ASC LIMIT 1),
			(SELECT EHKP_PAID_DATE FROM EXPENSE_HOUSEKEEPING_PAYMENT  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EHKP_FOR_PERIOD DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_MOVING_IN_AND_OUT  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_MOVING_IN_AND_OUT ',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EMIO_INVOICE_DATE FROM EXPENSE_MOVING_IN_AND_OUT  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EMIO_INVOICE_DATE ASC LIMIT 1),
			(SELECT EMIO_INVOICE_DATE FROM EXPENSE_MOVING_IN_AND_OUT  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EMIO_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_PURCHASE_NEW_CARD  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_PURCHASE_NEW_CARD ',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EPNC_INVOICE_DATE FROM EXPENSE_PURCHASE_NEW_CARD  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EPNC_INVOICE_DATE ASC LIMIT 1),
			(SELECT EPNC_INVOICE_DATE FROM EXPENSE_PURCHASE_NEW_CARD  WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)ORDER BY EPNC_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
		
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_DETAIL_STARHUB WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
	
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_STARHUB',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT ESH.ESH_INVOICE_DATE FROM EXPENSE_STARHUB ESH,EXPENSE_DETAIL_STARHUB EDSH,TEMP_UNIT_DTLS T WHERE EDSH.EDSH_ID=ESH.EDSH_ID AND T.UNIT_ID=EDSH.UNIT_ID AND T.ID = MINID ORDER BY ESH_INVOICE_DATE ASC LIMIT 1),
			(SELECT ESH.ESH_INVOICE_DATE FROM EXPENSE_STARHUB ESH,EXPENSE_DETAIL_STARHUB EDSH,TEMP_UNIT_DTLS T WHERE EDSH.EDSH_ID=ESH.EDSH_ID AND T.UNIT_ID=EDSH.UNIT_ID AND T.ID = MINID ORDER BY ESH_INVOICE_DATE DESC LIMIT 1));
		
		END IF;
	
		IF EXISTS(SELECT UNIT_ID FROM EXPENSE_UNIT WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID)) THEN
		
			INSERT INTO TEMP_EXP_INV_DATE(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)VALUES('EXPENSE_UNIT',
			(SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UNIT_NO FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_START_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT UD_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT FINAL_END_DATE FROM TEMP_UNIT_DTLS WHERE ID = MINID),
			(SELECT EU_INVOICE_DATE FROM EXPENSE_UNIT WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID) ORDER BY EU_INVOICE_DATE ASC LIMIT 1),
			(SELECT EU_INVOICE_DATE FROM EXPENSE_UNIT WHERE UNIT_ID = (SELECT UNIT_ID FROM TEMP_UNIT_DTLS WHERE ID = MINID) ORDER BY EU_INVOICE_DATE DESC LIMIT 1));
			
		END IF;
		
		SET MINID = MINID+1;
		
	END WHILE;
	
	DROP TABLE IF EXISTS TEMP_EXP_DATE_NOT_IN_UNIT_LP;
	CREATE TABLE TEMP_EXP_DATE_NOT_IN_UNIT_LP(
	ID INTEGER AUTO_INCREMENT,
	TABLENAME TEXT,
	UNIT_ID INTEGER,
	UNIT_NO SMALLINT(4),
	UD_START_DATE DATE,
	UD_END_DATE DATE,
	FINAL_END_DATE DATE,
	MIN_INV_DATE DATE,
	MAX_INV_DATE DATE,
	PRIMARY KEY(ID));
	
	INSERT INTO TEMP_EXP_DATE_NOT_IN_UNIT_LP(TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE)
	SELECT TABLENAME,UNIT_ID,UNIT_NO,UD_START_DATE,UD_END_DATE,FINAL_END_DATE,MIN_INV_DATE,MAX_INV_DATE FROM TEMP_EXP_INV_DATE WHERE (MIN_INV_DATE<UD_START_DATE)OR(MAX_INV_DATE>FINAL_END_DATE);
	
	DROP TABLE IF EXISTS TEMP_UNIT_DTLS;
	DROP TABLE IF EXISTS TEMP_EXP_INV_DATE;
		
END;