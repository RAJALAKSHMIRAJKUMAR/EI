-- version:0.8 -- sdate:09/06/2014 -- edate:09/06/2014 -- issue:566 --COMMENT NO: 12--desc:IMPLEMENTED ROLL BACK AND COMMIT --doneby:DHIVYA
-- version:0.7 -- sdate:19/03/2014 -- edate:22/03/2014 -- issue:810 --COMMENT NO: 8--desc:CALCULATED DURATION OF THIS SP --doneby:DHIVYA
-- version:0.6 -- sdate:19/03/2014 -- edate:26/03/2014 -- issue:765 --COMMENT NO: 8--desc:UPDATED SP DYNAMICALLY --doneby:SAFI
-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.4 --sdate:26/02/2014 --edate:26/02/2014 --issue:750 --desc:userstamp changed as uld_id --done by:RL
--version:0.3 --sdate:20/02/2014 --edate:20/02/2014 --issue:594 --comment:104 --done by:DHIVYA
--version:0.2 --sdate:24/01/2014 --edate:30/01/2014 --issue:594 --desc:changed migration.rental_scdb_format as rental_scdb_format n update rec version --doneby:RL

DROP PROCEDURE IF EXISTS SP_MIG_PAYMENT_INSERT;
CREATE PROCEDURE SP_MIG_PAYMENT_INSERT(IN SOURCESCHEMA  VARCHAR(40),IN DESTINATIONSCHEMA  VARCHAR(40),IN MIGUSERSTAMP VARCHAR(100))
BEGIN
    DECLARE STARTTIME TIME;
	DECLARE ENDTIME TIME;
	DECLARE DURATION TIME;
	DECLARE PAYMENTPART1 TIME;
	DECLARE PAYMENTPART2 TIME;
	DECLARE PAYMENTPART3 TIME;
	DECLARE PAYMENTPART4 TIME;
	DECLARE PAYMENTPART5 TIME;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
	END;
	START TRANSACTION;
	SET STARTTIME = (SELECT CURTIME());
	SET FOREIGN_KEY_CHECKS=0;
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
    PREPARE LOGINID FROM @LOGIN_ID;
    EXECUTE LOGINID;
    SET PAYMENTPART1=(SELECT SPLITTING_DURATION1 FROM TEMP_DURATION_PAYMENT_PART1);
	SET PAYMENTPART2=(SELECT SPLITTING_DURATION2 FROM TEMP_DURATION_PAYMENT_PART2);
	SET PAYMENTPART3=(SELECT SPLITTING_DURATION3 FROM TEMP_DURATION_PAYMENT_PART3);
	SET PAYMENTPART5=(SELECT SPLITTING_DURATION5 FROM TEMP_DURATION_PAYMENT_PART5);
	SET DURATION=(SELECT ADDTIME(PAYMENTPART1,PAYMENTPART2));	
	SET DURATION=(SELECT ADDTIME(DURATION,PAYMENTPART3));
	SET DURATION=(SELECT ADDTIME(DURATION,PAYMENTPART5));
	SET @DROP_PAYMENT_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.PAYMENT_DETAILS'));
    PREPARE DROP_PAYMENT_DETAILS_STMT FROM @DROP_PAYMENT_DETAILS;
    EXECUTE DROP_PAYMENT_DETAILS_STMT;
	SET @CREATE_PAYMENT_DETAILS=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.PAYMENT_DETAILS(
	PD_ID INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	CUSTOMER_ID	INTEGER NOT NULL,
	PP_ID INTEGER NOT NULL,
	CED_REC_VER	INTEGER NOT NULL,
	PD_AMOUNT DECIMAL(6,2) NOT NULL,
	PD_FOR_PERIOD DATE NOT NULL,
	PD_PAID_DATE DATE NOT NULL,
	PD_HIGHLIGHT_FLAG CHAR(1) NULL,
	PD_COMMENTS	TEXT NULL,
	ULD_ID INTEGER(2) NOT NULL,
	PD_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(PD_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES ',DESTINATIONSCHEMA,'.UNIT (UNIT_ID),
	FOREIGN KEY(CUSTOMER_ID) REFERENCES ',DESTINATIONSCHEMA,'.CUSTOMER (CUSTOMER_ID),
	FOREIGN KEY(PP_ID) REFERENCES ',DESTINATIONSCHEMA,'.PAYMENT_PROFILE (PP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
	PREPARE CREATE_PAYMENT_DETAILS_STMT FROM @CREATE_PAYMENT_DETAILS;
    EXECUTE CREATE_PAYMENT_DETAILS_STMT;
    SET FOREIGN_KEY_CHECKS=0;
	SET @INSERT_PAYMENT_DETAILS=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.PAYMENT_DETAILS (UNIT_ID , CUSTOMER_ID, PP_ID,CED_REC_VER,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_HIGHLIGHT_FLAG,
	PD_COMMENTS,ULD_ID,PD_TIMESTAMP) (SELECT T.UNIT_ID , T.CUSTOMER_ID, T.PP_ID,T.CED_REC_VER,T.PD_AMOUNT,T.PD_FOR_PERIOD,T.PD_PAID_DATE,T.PD_HIGHLIGHT_FLAG,
	T.PD_COMMENTS,ULD.ULD_ID,T.PD_TIMESTAMP FROM TEMP_PAYMENT_ENTRY_DETAILS T,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=T.PD_USERSTAMP)'));
	PREPARE INSERT_PAYMENT_DETAILS_STMT FROM @INSERT_PAYMENT_DETAILS;
    EXECUTE INSERT_PAYMENT_DETAILS_STMT;
    SET FOREIGN_KEY_CHECKS=1;
	SET @COUNTSCDB_RENTAL=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_RENTAL FROM ',SOURCESCHEMA,'.RENTAL_SCDB_FORMAT'));
	PREPARE COUNTSCDB_RENTAL_STMT FROM @COUNTSCDB_RENTAL;
    EXECUTE COUNTSCDB_RENTAL_STMT;
	SET @COUNTSPLITTED_RENTAL=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITTED_RENTAL FROM ',DESTINATIONSCHEMA,'.PAYMENT_DETAILS'));
	PREPARE COUNTSPLITTED_RENTAL_STMT FROM @COUNTSPLITTED_RENTAL;
    EXECUTE COUNTSPLITTED_RENTAL_STMT;
	SET @REJECTION_COUNT=(@COUNT_SCDB_RENTAL-@COUNT_SPLITTED_RENTAL);
    SET FOREIGN_KEY_CHECKS=0;		
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC = @COUNT_SCDB_RENTAL WHERE PREASP_DATA='PAYMENT_DETAILS';	
    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES((SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='PAYMENT_DETAILS'),@COUNT_SPLITTED_RENTAL,(SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='PAYMENT_DETAILS'),
	(SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='PAYMENT'),DURATION,@REJECTION_COUNT,@ULDID);
	SET @DROP_TEMP_RENTAL_SCDB_FORMAT=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_RENTAL_SCDB_FORMAT'));
    PREPARE DROP_TEMP_RENTAL_SCDB_FORMAT_STMT FROM @DROP_TEMP_RENTAL_SCDB_FORMAT;
    EXECUTE DROP_TEMP_RENTAL_SCDB_FORMAT_STMT;
	SET @DROP_TEMP_RENTAL_CUSTOMER=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_RENTAL_CUSTOMER'));
    PREPARE DROP_TEMP_RENTAL_CUSTOMER_STMT FROM @DROP_TEMP_RENTAL_CUSTOMER;
    EXECUTE DROP_TEMP_RENTAL_CUSTOMER_STMT;
	SET @DROP_TEMP_PAYMENT_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS'));
    PREPARE DROP_TEMP_PAYMENT_DETAILS_STMT FROM @DROP_TEMP_PAYMENT_DETAILS;
    EXECUTE DROP_TEMP_PAYMENT_DETAILS_STMT;
	SET @DROP_TEMP_PAYMENT_DETAILS_UPDATE_RECORD_VERSION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS_UPDATE_RECORD_VERSION'));
    PREPARE DROP_TEMP_PAYMENT_DETAILS_UPDATE_RECORD_VERSION_STMT FROM @DROP_TEMP_PAYMENT_DETAILS_UPDATE_RECORD_VERSION;
    EXECUTE DROP_TEMP_PAYMENT_DETAILS_UPDATE_RECORD_VERSION_STMT;
	SET @DROP_TEMP_CUSTOMER_ENTRY_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_ENTRY_DETAILS'));
    PREPARE DROP_TEMP_CUSTOMER_ENTRY_DETAILS_STMT FROM @DROP_TEMP_CUSTOMER_ENTRY_DETAILS;
    EXECUTE DROP_TEMP_CUSTOMER_ENTRY_DETAILS_STMT;
	SET @DROP_TEMP_CUSTOMER_ENTRY_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_TERMINATION_DETAILS'));
    PREPARE DROP_TEMP_CUSTOMER_ENTRY_DETAILS_STMT FROM @DROP_TEMP_CUSTOMER_ENTRY_DETAILS;
    EXECUTE DROP_TEMP_CUSTOMER_ENTRY_DETAILS_STMT;	
	SET FOREIGN_KEY_CHECKS=1;
	DROP TABLE IF EXISTS TEMP_PAYMENT_ENTRY_DETAILS;
	DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART1;
	DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART2;
	DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART3;
	DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART4;
	DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART5;
	COMMIT;
 	END;
CALL SP_MIG_PAYMENT_INSERT(SOURCESCHEMA,DESTINATIONSCHEMA,MIGUSERSTAMP);