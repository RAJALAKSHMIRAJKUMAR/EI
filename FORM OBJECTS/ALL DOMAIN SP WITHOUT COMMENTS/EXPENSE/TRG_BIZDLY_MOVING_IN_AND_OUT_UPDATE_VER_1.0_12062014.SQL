DROP TRIGGER IF EXISTS TRG_BIZDLY_MOVING_IN_AND_OUT_UPDATE;
CREATE TRIGGER TRG_BIZDLY_MOVING_IN_AND_OUT_UPDATE  
AFTER UPDATE ON EXPENSE_MOVING_IN_AND_OUT 
FOR EACH ROW
BEGIN 
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF (OLD.UNIT_ID!= NEW.UNIT_ID) OR (OLD.EMIO_INVOICE_DATE!= NEW.EMIO_INVOICE_DATE) OR (OLD.EMIO_AMOUNT!= NEW.EMIO_AMOUNT) OR (OLD.EMIO_COMMENTS IS NULL AND NEW.EMIO_COMMENTS IS NOT NULL) OR (OLD.EMIO_COMMENTS IS NOT NULL AND NEW.EMIO_COMMENTS IS NULL) OR (OLD.EMIO_COMMENTS != NEW.EMIO_COMMENTS) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EMIO_ID=', OLD.EMIO_ID,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'UNIT_ID=', OLD.UNIT_ID,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'UNIT_ID=', NEW.UNIT_ID,','); 
END IF;
IF (OLD.EMIO_INVOICE_DATE!= NEW.EMIO_INVOICE_DATE) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EMIO_INVOICE_DATE=', OLD.EMIO_INVOICE_DATE,','); 
END IF;
IF (OLD.EMIO_INVOICE_DATE!= NEW.EMIO_INVOICE_DATE) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EMIO_INVOICE_DATE=', NEW.EMIO_INVOICE_DATE,','); 
END IF;
IF (OLD.EMIO_AMOUNT!= NEW.EMIO_AMOUNT) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EMIO_AMOUNT=', OLD.EMIO_AMOUNT,','); 
END IF;
IF (OLD.EMIO_AMOUNT!= NEW.EMIO_AMOUNT) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EMIO_AMOUNT=', NEW.EMIO_AMOUNT,','); 
END IF;
IF (OLD.EMIO_COMMENTS IS NULL AND NEW.EMIO_COMMENTS IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EMIO_COMMENTS=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EMIO_COMMENTS=',NEW.EMIO_COMMENTS,',');
ELSEIF(OLD.EMIO_COMMENTS IS NOT NULL AND NEW.EMIO_COMMENTS IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EMIO_COMMENTS=',OLD.EMIO_COMMENTS,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EMIO_COMMENTS=','<NULL>,');
ELSEIF (OLD.EMIO_COMMENTS!= NEW.EMIO_COMMENTS) THEN 
SET OLD_VALUE = CONCAT(OLD_VALUE,'EMIO_COMMENTS=', OLD.EMIO_COMMENTS,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EMIO_COMMENTS=', NEW.EMIO_COMMENTS,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) OR (OLD.EMIO_INVOICE_DATE!= NEW.EMIO_INVOICE_DATE) OR (OLD.EMIO_AMOUNT!= NEW.EMIO_AMOUNT) OR (OLD.EMIO_COMMENTS IS NULL AND NEW.EMIO_COMMENTS IS NOT NULL) OR (OLD.EMIO_COMMENTS IS NOT NULL AND NEW.EMIO_COMMENTS IS NULL) OR (OLD.EMIO_COMMENTS != NEW.EMIO_COMMENTS) THEN  
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.EMIO_TIMESTAMP!= NEW.EMIO_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EMIO_TIMESTAMP=', OLD.EMIO_TIMESTAMP,','); 
END IF;
END IF;
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF(OLD_VALUE != NEW_VALUE)THEN
SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM EXPENSE_MOVING_IN_AND_OUT  WHERE EMIO_ID=NEW.EMIO_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_MOVING_IN_AND_OUT '),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;