DROP TRIGGER IF EXISTS TRG_BIZDLY_FACILITY_USE_UPDATE;
CREATE TRIGGER TRG_BIZDLY_FACILITY_USE_UPDATE  
AFTER UPDATE ON EXPENSE_FACILITY_USE
FOR EACH ROW
BEGIN 
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF (OLD.UNIT_ID!= NEW.UNIT_ID) OR (OLD.EFU_INVOICE_DATE!= NEW.EFU_INVOICE_DATE) OR (OLD.EFU_DEPOSIT IS NULL AND NEW.EFU_DEPOSIT IS NOT NULL) OR  (OLD.EFU_DEPOSIT IS NOT NULL AND NEW.EFU_DEPOSIT IS NULL) OR (OLD.EFU_DEPOSIT!= NEW.EFU_DEPOSIT) OR (OLD.EFU_AMOUNT IS NULL AND NEW.EFU_AMOUNT IS NOT NULL) OR (OLD.EFU_AMOUNT IS NOT NULL AND NEW.EFU_AMOUNT IS NULL) OR (OLD.EFU_AMOUNT!= NEW.EFU_AMOUNT) OR (OLD.EFU_COMMENTS IS NULL AND NEW.EFU_COMMENTS IS NOT NULL) OR (OLD.EFU_COMMENTS IS NOT NULL AND NEW.EFU_COMMENTS IS NULL) OR (OLD.EFU_COMMENTS != NEW.EFU_COMMENTS) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EFU_ID=', OLD.EFU_ID,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'UNIT_ID=', OLD.UNIT_ID,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'UNIT_ID=', NEW.UNIT_ID,','); 
END IF;
IF (OLD.EFU_INVOICE_DATE!= NEW.EFU_INVOICE_DATE) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EFU_INVOICE_DATE=', OLD.EFU_INVOICE_DATE,','); 
END IF;
IF (OLD.EFU_INVOICE_DATE!= NEW.EFU_INVOICE_DATE) THEN SET 
NEW_VALUE = CONCAT(NEW_VALUE,'EFU_INVOICE_DATE=', NEW.EFU_INVOICE_DATE,','); 
END IF;
IF (OLD.EFU_DEPOSIT IS NULL AND NEW.EFU_DEPOSIT IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EFU_DEPOSIT=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EFU_DEPOSIT=',NEW.EFU_DEPOSIT,',');
ELSEIF(OLD.EFU_DEPOSIT IS NOT NULL AND NEW.EFU_DEPOSIT IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EFU_DEPOSIT=',OLD.EFU_DEPOSIT,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EFU_DEPOSIT=','<NULL>,');
ELSEIF(OLD.EFU_DEPOSIT!= NEW.EFU_DEPOSIT) THEN 
SET OLD_VALUE = CONCAT(OLD_VALUE,'EFU_DEPOSIT=', OLD.EFU_DEPOSIT,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EFU_DEPOSIT=', NEW.EFU_DEPOSIT,','); 
END IF;
IF (OLD.EFU_AMOUNT IS NULL AND NEW.EFU_AMOUNT IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EFU_AMOUNT=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EFU_AMOUNT=',NEW.EFU_AMOUNT,',');
ELSEIF(OLD.EFU_AMOUNT IS NOT NULL AND NEW.EFU_AMOUNT IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EFU_AMOUNT=',OLD.EFU_AMOUNT,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EFU_AMOUNT=','<NULL>,');
ELSEIF (OLD.EFU_AMOUNT!= NEW.EFU_AMOUNT) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EFU_AMOUNT=', OLD.EFU_AMOUNT,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EFU_AMOUNT=', NEW.EFU_AMOUNT,','); 
END IF;
IF (OLD.EFU_COMMENTS IS NULL AND NEW.EFU_COMMENTS IS NOT NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EFU_COMMENTS=','<NULL>,');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EFU_COMMENTS=',NEW.EFU_COMMENTS,',');
ELSEIF(OLD.EFU_COMMENTS IS NOT NULL AND NEW.EFU_COMMENTS IS NULL) THEN
SET OLD_VALUE=CONCAT(OLD_VALUE,'EFU_COMMENTS=',OLD.EFU_COMMENTS,',');
SET NEW_VALUE=CONCAT(NEW_VALUE,'EFU_COMMENTS=','<NULL>,');
ELSEIF (OLD.EFU_COMMENTS!= NEW.EFU_COMMENTS) THEN 
SET OLD_VALUE = CONCAT(OLD_VALUE,'EFU_COMMENTS=', OLD.EFU_COMMENTS,','); 
SET NEW_VALUE = CONCAT(NEW_VALUE,'EFU_COMMENTS=', NEW.EFU_COMMENTS,','); 
END IF;
IF (OLD.UNIT_ID!= NEW.UNIT_ID) OR (OLD.EFU_INVOICE_DATE!= NEW.EFU_INVOICE_DATE) OR (OLD.EFU_DEPOSIT IS NULL AND NEW.EFU_DEPOSIT IS NOT NULL) OR  (OLD.EFU_DEPOSIT IS NOT NULL AND NEW.EFU_DEPOSIT IS NULL) OR (OLD.EFU_DEPOSIT!= NEW.EFU_DEPOSIT) OR (OLD.EFU_AMOUNT IS NULL AND NEW.EFU_AMOUNT IS NOT NULL) OR (OLD.EFU_AMOUNT IS NOT NULL AND NEW.EFU_AMOUNT IS NULL) OR (OLD.EFU_AMOUNT!= NEW.EFU_AMOUNT) OR (OLD.EFU_COMMENTS IS NULL AND NEW.EFU_COMMENTS IS NOT NULL) OR (OLD.EFU_COMMENTS IS NOT NULL AND NEW.EFU_COMMENTS IS NULL) OR (OLD.EFU_COMMENTS != NEW.EFU_COMMENTS) THEN  
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.EFU_TIMESTAMP!= NEW.EFU_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EFU_TIMESTAMP=', OLD.EFU_TIMESTAMP,','); 
END IF;
END IF;
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF(OLD_VALUE != NEW_VALUE)THEN
SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM EXPENSE_FACILITY_USE WHERE EFU_ID=NEW.EFU_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='EXPENSE_FACILITY_USE'),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;