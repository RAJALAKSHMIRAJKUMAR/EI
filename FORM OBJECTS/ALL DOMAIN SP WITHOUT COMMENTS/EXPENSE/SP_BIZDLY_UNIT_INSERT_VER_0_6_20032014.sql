DROP PROCEDURE IF EXISTS SP_BIZDLY_UNIT_INSERT;
CREATE PROCEDURE SP_BIZDLY_UNIT_INSERT(
IN INPUT_UNITNO TEXT,
IN INPUT_ECNID TEXT,
IN INPUT_CUSTOMERID TEXT,
IN INPUT_INVOICEDATE TEXT,
IN INPUT_AMOUNT TEXT,
IN INPUT_INVOICEITEM TEXT,
IN INPUT_INVOICEFROM VARCHAR(200),
IN INPUT_COMMENTS TEXT,
IN USERSTAMP VARCHAR(50),
OUT FINALMESSAGE TEXT)
BEGIN
  DECLARE UNITNO TEXT;
  DECLARE ECNID TEXT;
  DECLARE CUSTOMERID TEXT;
  DECLARE AMOUNT DECIMAL(7,2);
  DECLARE INVOICEDATE DATE;
  DECLARE INVOICEITEM TEXT;
  DECLARE INVOICEFROM VARCHAR(200);
  DECLARE COMMENTS TEXT;
  DECLARE EUINVOICECHECK TEXT;
  DECLARE SUBSPSUCCESSFLAG INTEGER;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET FINALMESSAGE = '';
SET @TEMP_UNITNO = INPUT_UNITNO;
SET @TEMP_ECNID = INPUT_ECNID;
SET @TEMP_CUSTOMERID = INPUT_CUSTOMERID;
SET @TEMP_INVOICEDATE = INPUT_INVOICEDATE;
SET @TEMP_AMOUNT = INPUT_AMOUNT;
SET @TEMP_INVOICEITEM = INPUT_INVOICEITEM;
SET @TEMP_INVOICEFROM = INPUT_INVOICEFROM;
SET @TEMP_COMMENTS = INPUT_COMMENTS;
MAIN_LOOP : LOOP
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_UNITNO,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO UNITNO;
        SELECT @REMAINING_STRING INTO @TEMP_UNITNO;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_ECNID,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO ECNID;
        SELECT @REMAINING_STRING INTO @TEMP_ECNID;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_CUSTOMERID,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO CUSTOMERID;
        SELECT @REMAINING_STRING INTO @TEMP_CUSTOMERID;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_INVOICEDATE,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO INVOICEDATE;
        SELECT @REMAINING_STRING INTO @TEMP_INVOICEDATE;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_AMOUNT,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO AMOUNT;
        SELECT @REMAINING_STRING INTO @TEMP_AMOUNT;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_INVOICEITEM,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO INVOICEITEM;
        SELECT @REMAINING_STRING INTO @TEMP_INVOICEITEM;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES(',',@TEMP_INVOICEFROM,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO INVOICEFROM;
        SELECT @REMAINING_STRING INTO @TEMP_INVOICEFROM;
        CALL SP_GET_SPECIAL_CHARACTER_SEPERATED_VALUES('^^',@TEMP_COMMENTS,@VALUE,@REMAINING_STRING);
        SELECT @VALUE INTO COMMENTS;
        SELECT @REMAINING_STRING INTO @TEMP_COMMENTS;
        START TRANSACTION;   
        IF(UNITNO IS NOT NULL AND ECNID IS NOT NULL AND INVOICEDATE IS NOT NULL AND AMOUNT IS NOT NULL AND INVOICEITEM IS NOT NULL AND INVOICEFROM IS NOT NULL AND USERSTAMP IS NOT NULL)THEN
            CALL SP_BIZDLY_SUBUNIT_INSERT(UNITNO,ECNID,CUSTOMERID,INVOICEDATE,AMOUNT,INVOICEITEM,INVOICEFROM,COMMENTS,USERSTAMP,@SUCCESS_FLAG);
            SET SUBSPSUCCESSFLAG = (SELECT @SUCCESS_FLAG);
        END IF;
          IF NOT (ECNID ='SELECT') THEN 
                SET EUINVOICECHECK=(SELECT ECN_DATA FROM EXPENSE_CONFIGURATION WHERE ECN_ID=ECNID);
                ELSE
                SET EUINVOICECHECK='';
           END IF;
        IF(SUBSPSUCCESSFLAG=0)THEN
            SET FINALMESSAGE = (SELECT CONCAT(FINALMESSAGE,' ','UNIT_NO=',UNITNO,',','ECNID=',EUINVOICECHECK,',','CUSTOMER_ID=',CUSTOMERID,','
            'INVOICEDATE=',INVOICEDATE,',','AMOUNT=',AMOUNT,',','INVOICEITEM=',INVOICEITEM,',','INVOICEFROM=',INVOICEFROM,',',
            'COMMENTS=',COMMENTS,',','USERSTAMP=',USERSTAMP));
        END IF;
        IF @TEMP_UNITNO IS NULL THEN
            LEAVE  MAIN_LOOP;
        END IF;
    END LOOP;
    IF(FINALMESSAGE = '')THEN
        SET FINALMESSAGE = 1;
    END IF;
COMMIT;
END;