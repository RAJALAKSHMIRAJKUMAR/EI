DROP PROCEDURE IF EXISTS SP_BANK_TT_UPDATE;
CREATE PROCEDURE SP_BANK_TT_UPDATE(
IN BTID INTEGER,
IN OCBCDATA VARCHAR(50),
IN BTMDATA VARCHAR(50),
IN BTDATE DATE,
IN BTAMOUNT DECIMAL(7,2),
IN ACCOUNTNAME VARCHAR(40),
IN ACCOUNTNO VARCHAR(25),
IN BANKCODE VARCHAR(4),
IN BRANCHCODE VARCHAR(3),
IN ADDRESS VARCHAR(250),
IN SWIFTCODE VARCHAR(12),
IN CUSTOMERREFERENCE VARCHAR(200),
IN INVOICEDETAILS TEXT,
IN DEBITEDON DATE,
IN COMMENTS TEXT,
IN USERSTAMP VARCHAR(50),
OUT BANK_SUCCESSFLAG INTEGER)
BEGIN
DECLARE TEMPOCBCDATA VARCHAR(50);
DECLARE OCBC_DATA VARCHAR(15);
DECLARE OCBC_LENGTH INTEGER;
DECLARE OCBC_POSITION INTEGER;
DECLARE CGNID INTEGER;
DECLARE USERSTAMP_ID INTEGER(2);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET BANK_SUCCESSFLAG=0;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID = (SELECT @ULDID);
IF ((OCBCDATA IS NOT NULL) AND (BTDATE IS NOT NULL) AND (BTAMOUNT IS NOT NULL) AND (USERSTAMP IS NOT NULL))THEN
UPDATE BANK_TRANSFER SET BTM_ID=(SELECT BTM_ID FROM BANK_TRANSFER_MODELS WHERE BTM_DATA=BTMDATA),BT_DATE=BTDATE,BT_AMOUNT=BTAMOUNT,BT_ACC_NAME=ACCOUNTNAME,
BT_ACC_NO=ACCOUNTNO,BT_BANK_CODE=BANKCODE,BT_BRANCH_CODE=BRANCHCODE,BT_BANK_ADDRESS=ADDRESS,BT_SWIFT_CODE=SWIFTCODE,BT_CUST_REF=CUSTOMERREFERENCE,
BT_INV_DETAILS=INVOICEDETAILS,BT_DEBITED_ON=DEBITEDON,BT_COMMENTS=COMMENTS,ULD_ID=USERSTAMP_ID WHERE BT_ID=BTID;
SET BANK_SUCCESSFLAG=1;
IF OCBCDATA IS NOT NULL THEN
SET TEMPOCBCDATA = OCBCDATA;
SET OCBC_LENGTH = 1;
loop_label : LOOP
SET OCBC_POSITION=(SELECT LOCATE(',', TEMPOCBCDATA,OCBC_LENGTH));
IF OCBC_POSITION<=0 THEN
SET OCBC_DATA=TEMPOCBCDATA;
ELSE
SELECT SUBSTRING(TEMPOCBCDATA,OCBC_LENGTH,OCBC_POSITION-1) INTO OCBC_DATA;
SET TEMPOCBCDATA=(SELECT SUBSTRING(TEMPOCBCDATA,OCBC_POSITION+1));
END IF;
SET CGNID=(SELECT CGN_ID FROM BANKTT_CONFIGURATION WHERE BCN_DATA=OCBC_DATA);
SET FOREIGN_KEY_CHECKS=0;
IF EXISTS(SELECT CGN_ID FROM BANK_TRANSFER_STATUS_DETAILS WHERE BT_ID=BTID AND CGN_ID=CGNID)THEN
UPDATE BANK_TRANSFER_STATUS_DETAILS SET BCN_ID=(SELECT BCN_ID FROM BANKTT_CONFIGURATION WHERE BCN_DATA=OCBC_DATA)
WHERE BT_ID=BTID AND CGN_ID=(SELECT CGN_ID FROM BANKTT_CONFIGURATION WHERE BCN_DATA=OCBC_DATA);
SET BANK_SUCCESSFLAG=1;
ELSE
INSERT INTO  BANK_TRANSFER_STATUS_DETAILS(BT_ID,BCN_ID,CGN_ID)VALUES(BTID,(SELECT BCN_ID FROM BANKTT_CONFIGURATION WHERE BCN_DATA=OCBC_DATA),(SELECT CGN_ID FROM  BANKTT_CONFIGURATION WHERE BCN_DATA=OCBC_DATA));
SET BANK_SUCCESSFLAG=1;
END IF;
IF OCBC_POSITION<=0 THEN
LEAVE  loop_label;
END IF;
END LOOP;
END IF;
END IF;
COMMIT;
END;