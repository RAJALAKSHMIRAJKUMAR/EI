DROP TRIGGER IF EXISTS TRG_ERROR_MESSAGE_CONFIGURATION_UPDATE ;
CREATE TRIGGER TRG_ERROR_MESSAGE_CONFIGURATION_UPDATE   
AFTER UPDATE ON ERROR_MESSAGE_CONFIGURATION
FOR EACH ROW
BEGIN 
DECLARE OLD_VALUE TEXT DEFAULT '';
DECLARE NEW_VALUE TEXT DEFAULT '';
IF (OLD.CNP_ID!= NEW.CNP_ID) OR (OLD.EMC_CODE!= NEW.EMC_CODE) OR (OLD.EMC_DATA!= NEW.EMC_DATA) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EMC_ID=', OLD.EMC_ID,','); 
END IF;
IF (OLD.CNP_ID!= NEW.CNP_ID) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'CNP_ID=', OLD.CNP_ID,','); 
  SET NEW_VALUE = CONCAT(NEW_VALUE,'CNP_ID=', NEW.CNP_ID,','); 
END IF;
IF (OLD.EMC_CODE!= NEW.EMC_CODE) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EMC_CODE=', OLD.EMC_CODE,','); 
  SET NEW_VALUE = CONCAT(NEW_VALUE,'EMC_CODE=', NEW.EMC_CODE,','); 
END IF;
IF (OLD.EMC_DATA!= NEW.EMC_DATA) THEN  
  SET OLD_VALUE = CONCAT(OLD_VALUE,'EMC_DATA=', OLD.EMC_DATA,','); 
  SET NEW_VALUE = CONCAT(NEW_VALUE,'EMC_DATA=', NEW.EMC_DATA,','); 
END IF;
IF (OLD.CNP_ID!= NEW.CNP_ID) OR (OLD.EMC_CODE!= NEW.EMC_CODE) OR (OLD.EMC_DATA!= NEW.EMC_DATA) THEN  
IF (OLD.ULD_ID!= NEW.ULD_ID) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'ULD_ID=', OLD.ULD_ID,','); 
END IF;
IF (OLD.EMC_TIMESTAMP!= NEW.EMC_TIMESTAMP) THEN SET 
OLD_VALUE = CONCAT(OLD_VALUE,'EMC_TIMESTAMP=', OLD.EMC_TIMESTAMP,','); 
END IF;
END IF;
IF (OLD_VALUE!='' AND NEW_VALUE!='') THEN
IF (OLD_VALUE!=NEW_VALUE)THEN
     SET OLD_VALUE = SUBSTRING(OLD_VALUE,1,CHAR_LENGTH(OLD_VALUE)-1);
     SET NEW_VALUE = SUBSTRING(NEW_VALUE,1,CHAR_LENGTH(NEW_VALUE)-1);
INSERT INTO TICKLER_HISTORY
(ULD_ID,TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE)VALUES
((SELECT ULD_ID FROM ERROR_MESSAGE_CONFIGURATION WHERE EMC_ID=NEW.EMC_ID),
(SELECT TP_ID FROM TICKLER_PROFILE WHERE TP_TYPE='UPDATION'),
(SELECT TTIP_ID FROM TICKLER_TABID_PROFILE WHERE TTIP_DATA='ERROR_MESSAGE_CONFIGURATION'),OLD_VALUE,NEW_VALUE);
END IF;
END IF;
END;