DROP PROCEDURE IF EXISTS SP_DD_NO_OF_DIVISION_CALCULATION;
CREATE PROCEDURE SP_DD_NO_OF_DIVISION_CALCULATION(
	IN DD_UNIT_NO INTEGER(4),
	IN DD_STARTDATE DATE,
	IN DD_ENDDATE DATE,
	IN USERSTAMP_ID  INTEGER,
	OUT FINALCOUNT INTEGER) 
BEGIN
	DECLARE START_DATE DATE;
	DECLARE END_DATE DATE;
	DECLARE SD_DAY INTEGER;
	DECLARE SD_MONTH INTEGER;
	DECLARE SD_YEAR INTEGER;
	DECLARE ED_DAY INTEGER;
	DECLARE ED_MONTH INTEGER;
	DECLARE ED_YEAR INTEGER;
	DECLARE TEMP_DATE TEXT;
	DECLARE MIN_TDDUC_ID INTEGER;
	DECLARE MAX_TDDUC_ID INTEGER;
	DECLARE TDDUCCUSTOMERID INTEGER;
	DECLARE TDDUCRECVER INTEGER;
	DECLARE TDDUCSTARTDATE DATE;
	DECLARE TDDUCENDDATE DATE;
	DECLARE TDDUCPTDDATE DATE;
	DECLARE TDDUCTERMINATE CHAR(1);
	DECLARE TDDUC_SDMONTH INTEGER;
	DECLARE TDDUC_SDDAY INTEGER;
	DECLARE TDDUC_SDYEAR INTEGER;
	DECLARE TDDUC_EDMONTH INTEGER;
	DECLARE TDDUC_EDDAY INTEGER;
	DECLARE TDDUC_EDYEAR INTEGER;
	DECLARE TEMPDATE TEXT;
	DECLARE STARTDATE DATE;
	DECLARE ENDDATE DATE;
	DECLARE TCCID INTEGER;
	DECLARE MIN_TISD_ID INTEGER;
	DECLARE MAX_TISD_ID INTEGER;
	DECLARE TISDSTARTDATE DATE;
	DECLARE TISDENDDATE DATE;
	DECLARE COUNTID INTEGER;
	DECLARE MIN_TDDFC_ID INTEGER;
	DECLARE MAX_TDDFC_ID INTEGER;
	DECLARE CUSTID INTEGER;
	DECLARE S_DATE DATE;
	DECLARE PRETERMINATEDATE DATE;
	DECLARE MINTDDFC_ID INTEGER;
	DECLARE MAXTDDFC_ID INTEGER;
	DECLARE EUSDATE DATE;
	DECLARE EUEDATE DATE;
	DECLARE CUST_ID INTEGER;
	DECLARE MIN_TCHKTRS_ID INTEGER;
	DECLARE MAX_TCHKTRS_ID INTEGER;
	DECLARE TCHKTRSINVOICEDATE DATE;
	DECLARE TCHKTRSCUSTOMERID INTEGER;
	DECLARE MIN_TFC_ID INTEGER;
	DECLARE MAX_TFC_ID INTEGER;
	DECLARE DD_TEMP_TBLNAME_ACTIVE TEXT;
	DECLARE TEMP_DD_ACTIVE_CUSTOMER_TBLE TEXT;
	DECLARE DD_TEMP_TBLNAME_FUTURE TEXT;
	DECLARE DD_TEMP_TBLNAME_FUTURE_TBLE TEXT;
	DECLARE DD_TEMP_TBLNAME_FUTURE_TRANS TEXT;
	DECLARE DD_TEMP_TBLNAME_FUTURETRANS_TBLE TEXT;
	DECLARE DD_TEMP_TBLNAME_PAYMENT_TRANS TEXT;
	DECLARE DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE TEXT;
	DECLARE DD_TEMP_TBLNAME_UNIT TEXT;
	DECLARE DD_TEMP_TBLNAME_UNIT_EXPENSE TEXT;
    DECLARE DD_TEMP_TBLNAME_FUTURE_NONTRANS TEXT;
	DECLARE DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION TEXT;
	DECLARE DD_TEMP_FUTURE_NONTRANS_PAYMENT TEXT;
	DECLARE DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT TEXT;
	DECLARE DD_TEMP_DD_CNT_CUSTOMER TEXT;
	DECLARE DD_TEMP_TABLENAME_CNT_CUSTOMER TEXT;
	DECLARE DD_TEMP_DD_SPLITEDDATE TEXT;
	DECLARE DD_TEMP_TABLENAME_DD_SPLITEDDATE TEXT;
	DECLARE FUTURE_CUSTID_RECVER INTEGER;
	DECLARE FUTURE_CUSTID_TRANSRECVER INTEGER;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK; 
		CALL SP_DROP_TEMP_TABLE_DD_NO_OF_DIVISION_CALCULATION(TEMP_DD_ACTIVE_CUSTOMER_TBLE,DD_TEMP_TBLNAME_FUTURE_TBLE,
		DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE,DD_TEMP_TBLNAME_FUTURETRANS_TBLE,DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION,
		DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT,DD_TEMP_TBLNAME_UNIT_EXPENSE,DD_TEMP_TABLENAME_DD_SPLITEDDATE,
		DD_TEMP_TABLENAME_CNT_CUSTOMER);
	END;
	START TRANSACTION;	
	SET DD_TEMP_TBLNAME_ACTIVE=(SELECT CONCAT('TEMP_DD_ACTIVE_CUSTOMER_',SYSDATE()));
	SET DD_TEMP_TBLNAME_ACTIVE=(SELECT REPLACE(DD_TEMP_TBLNAME_ACTIVE,' ',''));
	SET DD_TEMP_TBLNAME_ACTIVE=(SELECT REPLACE(DD_TEMP_TBLNAME_ACTIVE,'-',''));
	SET DD_TEMP_TBLNAME_ACTIVE=(SELECT REPLACE(DD_TEMP_TBLNAME_ACTIVE,':',''));
	SET TEMP_DD_ACTIVE_CUSTOMER_TBLE=(SELECT CONCAT(DD_TEMP_TBLNAME_ACTIVE,'_',USERSTAMP_ID)); 
	SET @TEMP_CREATE_DD_ACTIVE=(SELECT CONCAT('CREATE TABLE ',TEMP_DD_ACTIVE_CUSTOMER_TBLE ,'(
	TDDAC_ID INTEGER AUTO_INCREMENT,TDDAC_UNITNO INTEGER,TDDAC_CUSTOMERID INTEGER,
	TDDAC_RECVER INTEGER,TDDAC_STARTDATE DATE,TDDAC_ENDDATE DATE,TDDAC_PTDDATE DATE,PRIMARY KEY(TDDAC_ID))'));
    PREPARE TEMP_CREATE_DD_ACTIVE_STMT FROM @TEMP_CREATE_DD_ACTIVE;
	EXECUTE TEMP_CREATE_DD_ACTIVE_STMT;
    SET @DD_CALC_INSERT_ACTIVECUSTOMER=(SELECT CONCAT('INSERT INTO ',TEMP_DD_ACTIVE_CUSTOMER_TBLE ,'(TDDAC_UNITNO,TDDAC_CUSTOMERID,TDDAC_RECVER,TDDAC_STARTDATE,TDDAC_ENDDATE,TDDAC_PTDDATE) SELECT U.UNIT_NO,CED.CUSTOMER_ID,CED.CED_REC_VER,CLP.CLP_STARTDATE,CLP.CLP_ENDDATE,CLP.CLP_PRETERMINATE_DATE
	FROM UNIT U,CUSTOMER_LP_DETAILS CLP,CUSTOMER_ENTRY_DETAILS CED  WHERE U.UNIT_ID=CED.UNIT_ID AND U.UNIT_NO=',DD_UNIT_NO,' AND
	CLP.CLP_TERMINATE IS NULL AND CLP.UASD_ID IS NOT NULL AND CLP.CLP_STARTDATE<=CURDATE() AND IF (CLP.CLP_PRETERMINATE_DATE IS NOT NULL ,CLP.CLP_PRETERMINATE_DATE>=CURDATE(),CLP.CLP_ENDDATE>=CURDATE())AND CED.CUSTOMER_ID=CLP.CUSTOMER_ID AND
	CLP.CLP_GUEST_CARD IS NULL AND CED.CED_CANCEL_DATE IS NULL AND CED.CED_REC_VER=CLP.CED_REC_VER ORDER BY CED.CUSTOMER_ID'));
    PREPARE DD_CALC_INSERT_ACTIVECUSTOMER_STMT FROM @DD_CALC_INSERT_ACTIVECUSTOMER;
    EXECUTE DD_CALC_INSERT_ACTIVECUSTOMER_STMT;
	SET DD_TEMP_TBLNAME_FUTURE=(SELECT CONCAT('TEMP_DD_FUTURE_CUSTOMER',SYSDATE()));
	SET DD_TEMP_TBLNAME_FUTURE=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE,' ',''));
	SET DD_TEMP_TBLNAME_FUTURE=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE,'-',''));
	SET DD_TEMP_TBLNAME_FUTURE=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE,':',''));
	SET DD_TEMP_TBLNAME_FUTURE_TBLE=(SELECT CONCAT(DD_TEMP_TBLNAME_FUTURE,'_',USERSTAMP_ID)); 
	SET @DD_TEMP_CREATE_FUTURE_TBLE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TBLNAME_FUTURE_TBLE ,'
	(TDDFC_ID INTEGER AUTO_INCREMENT,TDDFC_UNITNO INTEGER,TDDFC_CUSTOMERID INTEGER,TDDFC_RECVER INTEGER,TDDFC_STARTDATE DATE,TDDFC_ENDDATE DATE,TDDFC_PTDDATE DATE,TDDFC_UASDID INTEGER,PRIMARY KEY(TDDFC_ID))'));
    PREPARE DD_TEMP_CREATE_FUTURE_TBLE_STMT FROM @DD_TEMP_CREATE_FUTURE_TBLE;
	EXECUTE DD_TEMP_CREATE_FUTURE_TBLE_STMT;
	SET @DD_CALC_INSERT_FUTURE=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TBLNAME_FUTURE_TBLE ,'(TDDFC_UNITNO,TDDFC_CUSTOMERID,TDDFC_RECVER,TDDFC_STARTDATE,TDDFC_ENDDATE,
	TDDFC_PTDDATE,TDDFC_UASDID)	SELECT U.UNIT_NO,CED.CUSTOMER_ID,CED.CED_REC_VER,CLP.CLP_STARTDATE,CLP.CLP_ENDDATE,CLP.CLP_PRETERMINATE_DATE,CLP.UASD_ID
	FROM CUSTOMER_LP_DETAILS CLP,CUSTOMER_ENTRY_DETAILS CED LEFT JOIN ',TEMP_DD_ACTIVE_CUSTOMER_TBLE ,' TDDAC ON 
	CED.CUSTOMER_ID=TDDAC.TDDAC_CUSTOMERID,UNIT U WHERE TDDAC.TDDAC_CUSTOMERID IS NULL AND CLP.CLP_TERMINATE IS NULL AND CLP.CLP_STARTDATE>CURDATE() 
	AND CED.CUSTOMER_ID=CLP.CUSTOMER_ID AND CLP.CLP_GUEST_CARD IS NULL AND CED.CED_CANCEL_DATE IS NULL AND CED.CED_REC_VER=CLP.CED_REC_VER AND 
	U.UNIT_ID=CED.UNIT_ID  AND U.UNIT_NO=',DD_UNIT_NO,' ORDER BY CED.CUSTOMER_ID'));
    PREPARE DD_CALC_INSERT_FUTURE_STMT FROM @DD_CALC_INSERT_FUTURE;
    EXECUTE DD_CALC_INSERT_FUTURE_STMT;
	SET @DD_CALC_INSERT_ACTIVE_FUTURE=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TBLNAME_FUTURE_TBLE ,'(TDDFC_UNITNO,TDDFC_CUSTOMERID,TDDFC_RECVER,TDDFC_STARTDATE,TDDFC_ENDDATE,
	TDDFC_PTDDATE) SELECT TDDAC_UNITNO ,TDDAC_CUSTOMERID ,TDDAC_RECVER ,TDDAC_STARTDATE ,TDDAC_ENDDATE ,TDDAC_PTDDATE  FROM ',TEMP_DD_ACTIVE_CUSTOMER_TBLE ));
    PREPARE DD_CALC_INSERT_ACTIVE_FUTURE_STMT FROM @DD_CALC_INSERT_ACTIVE_FUTURE;
    EXECUTE DD_CALC_INSERT_ACTIVE_FUTURE_STMT;
	SET DD_TEMP_TBLNAME_FUTURE_TRANS=(SELECT CONCAT('TEMP_DD_EXPENSE_CHK_TRANSACTION',SYSDATE()));
	SET DD_TEMP_TBLNAME_FUTURE_TRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE_TRANS,' ',''));
	SET DD_TEMP_TBLNAME_FUTURE_TRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE_TRANS,'-',''));
	SET DD_TEMP_TBLNAME_FUTURE_TRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE_TRANS,':',''));
	SET DD_TEMP_TBLNAME_FUTURETRANS_TBLE=(SELECT CONCAT(DD_TEMP_TBLNAME_FUTURE_TRANS,'_',USERSTAMP_ID)); 
	SET @DD_TEMP_CREATE_FUTURETRANS_TBLE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE ,'
	(TCHKTRS_ID INTEGER AUTO_INCREMENT,TCHKTRS_CUSTOMERID INTEGER,TCHKTRS_INVOICEDATE DATE,TCHKTRS_RECVER INTEGER,PRIMARY KEY(TCHKTRS_ID))'));
    PREPARE DD_TEMP_CREATE_FUTURETRANS_TBLE_STMT FROM @DD_TEMP_CREATE_FUTURETRANS_TBLE;
	EXECUTE DD_TEMP_CREATE_FUTURETRANS_TBLE_STMT;
	SET @MIN_TDDFC_ID = (SELECT CONCAT('SELECT MIN(TDDFC_ID) INTO @TEMP_MINTDDFC_ID FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE)); 
	PREPARE MIN_TDDFC_ID_STMT FROM @MIN_TDDFC_ID;
	EXECUTE MIN_TDDFC_ID_STMT;
	SET MINTDDFC_ID=@TEMP_MINTDDFC_ID;
	SET @MAX_TDDFC_ID = (SELECT CONCAT('SELECT MAX(TDDFC_ID) INTO @TEMP_MAXTDDFC_ID FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE)); 
	PREPARE MAX_TDDFC_ID_STMT FROM @MAX_TDDFC_ID;
	EXECUTE MAX_TDDFC_ID_STMT;
	SET MAXTDDFC_ID=@TEMP_MAXTDDFC_ID;
	WHILE(MINTDDFC_ID<=MAXTDDFC_ID) DO
		SET @CUSTID =(SELECT CONCAT('SELECT TDDFC_CUSTOMERID INTO @TEMP_CUST_ID FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE TDDFC_ID=',MINTDDFC_ID));
		PREPARE CUSTID_STMT FROM @CUSTID;
		EXECUTE CUSTID_STMT;
		SET CUST_ID=@TEMP_CUST_ID;
		SET @EU_SDATE=(SELECT CONCAT('SELECT TDDFC_STARTDATE INTO @TEMP_EU_SDATE FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE TDDFC_ID=',MINTDDFC_ID));
		PREPARE EU_SDATE_STMT FROM @EU_SDATE;
		EXECUTE EU_SDATE_STMT;
		SET EUSDATE=@TEMP_EU_SDATE;
		SET @EU_EDATE=(SELECT CONCAT('SELECT TDDFC_ENDDATE INTO @TEMP_EU_EDATE FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE TDDFC_ID=',MINTDDFC_ID));
		PREPARE EU_EDATE_STMT FROM @EU_EDATE;
		EXECUTE EU_EDATE_STMT;
		SET EUEDATE=@TEMP_EU_EDATE;
		SET @DD_CALC_INSERT_FUTURE_TRANS=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE ,'(TCHKTRS_CUSTOMERID,TCHKTRS_INVOICEDATE) SELECT CUSTOMER_ID,
		EU_INVOICE_DATE FROM EXPENSE_UNIT WHERE EU_INVOICE_DATE BETWEEN ','"',EUSDATE,'"',' AND ','"',EUEDATE,'"',' AND CUSTOMER_ID=',CUST_ID,' ORDER BY CUSTOMER_ID'));
        PREPARE DD_CALC_INSERT_FUTURE_TRANS_STMT FROM @DD_CALC_INSERT_FUTURE_TRANS;
        EXECUTE DD_CALC_INSERT_FUTURE_TRANS_STMT;
		SET MINTDDFC_ID = MINTDDFC_ID+1;
	END WHILE;
	SET @MIN_TCHKTRSID = (SELECT CONCAT('SELECT MIN(TCHKTRS_ID) INTO @TEMP_MIN_TCHKTRSID FROM ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE )); 
	PREPARE MIN_TCHKTRSID_STMT FROM @MIN_TCHKTRSID;
	EXECUTE MIN_TCHKTRSID_STMT;
	SET MIN_TCHKTRS_ID=@TEMP_MIN_TCHKTRSID;
	SET @MAX_TCHKTRSID = (SELECT CONCAT('SELECT MAX(TCHKTRS_ID) INTO @TEMP_MAX_TCHKTRS_ID FROM ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE )); 
	PREPARE MAX_TCHKTRSID_STMT FROM @MAX_TCHKTRSID;
	EXECUTE MAX_TCHKTRSID_STMT;
	SET MAX_TCHKTRS_ID=@TEMP_MAX_TCHKTRS_ID;	
	WHILE(MIN_TCHKTRS_ID<=MAX_TCHKTRS_ID)DO
		SET @TCHK_TRSINVOICEDATE = (SELECT CONCAT('SELECT TCHKTRS_INVOICEDATE INTO @TEMP_TCHK_TRSINVOICEDATE FROM ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE ,' WHERE TCHKTRS_ID=',MIN_TCHKTRS_ID)); 
		PREPARE TCHK_TRSINVOICEDATE_STMT FROM @TCHK_TRSINVOICEDATE;
		EXECUTE TCHK_TRSINVOICEDATE_STMT;
		SET TCHKTRSINVOICEDATE=@TEMP_TCHK_TRSINVOICEDATE;	
		SET @TCHK_TRSCUSTOMERID = (SELECT CONCAT('SELECT TCHKTRS_CUSTOMERID INTO @TEMP_TCHKTRSCUSTOMERID FROM ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE ,' WHERE TCHKTRS_ID=',MIN_TCHKTRS_ID)); 
		PREPARE TCHK_TRSCUSTOMERID_STMT FROM @TCHK_TRSCUSTOMERID;
		EXECUTE TCHK_TRSCUSTOMERID_STMT;
		SET TCHKTRSCUSTOMERID=@TEMP_TCHKTRSCUSTOMERID;	
		SET @TEMP_DD_UPDATE_TRANS = (SELECT CONCAT('UPDATE ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE ,' SET TCHKTRS_RECVER=(SELECT TDDFC_RECVER  FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE ',TCHKTRSINVOICEDATE,' BETWEEN TDDFC_STARTDATE AND TDDFC_ENDDATE AND  TDDFC_CUSTOMERID=',TCHKTRSCUSTOMERID,') WHERE TCHKTRS_ID=',MIN_TCHKTRS_ID)); 
		PREPARE TEMP_DD_UPDATE_TRANS_STMT FROM @TEMP_DD_UPDATE_TRANS;
		EXECUTE TEMP_DD_UPDATE_TRANS_STMT;
	SET MIN_TCHKTRS_ID= MIN_TCHKTRS_ID+1;
	END WHILE;
	SET @TEMP_DD_UPDATESDATE_TRANS = (SELECT CONCAT('UPDATE ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' SET TDDFC_STARTDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(TDDFC_STARTDATE, INTERVAL 1 MONTH)), 1))')); 
	PREPARE TEMP_DD_UPDATESDATE_TRANS_STMT FROM @TEMP_DD_UPDATESDATE_TRANS;
	EXECUTE TEMP_DD_UPDATESDATE_TRANS_STMT;
	SET @TEMP_DD_UPDATEEDATE_TRANS = (SELECT CONCAT('UPDATE ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' SET TDDFC_ENDDATE=(SELECT LAST_DAY(TDDFC_ENDDATE))')); 
	PREPARE TEMP_DD_UPDATEEDATE_TRANS_STMT FROM @TEMP_DD_UPDATEEDATE_TRANS;
	EXECUTE TEMP_DD_UPDATEEDATE_TRANS_STMT;
		SET DD_TEMP_TBLNAME_PAYMENT_TRANS=(SELECT CONCAT('TEMP_DD_PAYMENT_CHK_TRANSACTION_',SYSDATE()));
	SET DD_TEMP_TBLNAME_PAYMENT_TRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_PAYMENT_TRANS,' ',''));
	SET DD_TEMP_TBLNAME_PAYMENT_TRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_PAYMENT_TRANS,'-',''));
	SET DD_TEMP_TBLNAME_PAYMENT_TRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_PAYMENT_TRANS,':',''));
	SET DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE=(SELECT CONCAT(DD_TEMP_TBLNAME_PAYMENT_TRANS,'_',USERSTAMP_ID)); 
	SET @DD_TEMP_CREATE_PAYMENT_TBLE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE ,'(ID INTEGER AUTO_INCREMENT,CUSTOMERID INTEGER,FORPERIOD DATE,RECORDVERSION INTEGER,PRIMARY KEY(ID))'));
    PREPARE DD_TEMP_CREATE_PAYMENT_TBLE_STMT FROM @DD_TEMP_CREATE_PAYMENT_TBLE;
	EXECUTE DD_TEMP_CREATE_PAYMENT_TBLE_STMT;
		SET @MIN_TDDFCID=(SELECT CONCAT('SELECT MIN(TDDFC_ID) INTO @TEMP_MIN_TDDFC_ID FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ));
		PREPARE TEMP_MIN_TDDFC_ID_STMT FROM @MIN_TDDFCID;
		EXECUTE TEMP_MIN_TDDFC_ID_STMT;
		SET MIN_TDDFC_ID=@TEMP_MIN_TDDFC_ID;
		SET @MAX_TDDFCID=(SELECT CONCAT('SELECT MAX(TDDFC_ID) INTO @TEMP_MAX_TDDFC_ID FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ));
		PREPARE MAX_TDDFC_ID_STMT FROM @MAX_TDDFCID;
		EXECUTE MAX_TDDFC_ID_STMT;
		SET MAX_TDDFC_ID=@TEMP_MAX_TDDFC_ID;	
	WHILE(MIN_TDDFC_ID<=MAX_TDDFC_ID)DO
		SET @TDDFC_CUSTID =(SELECT CONCAT('SELECT TDDFC_CUSTOMERID INTO @TEMP_TDDFC_CUSTID FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE TDDFC_ID=',MIN_TDDFC_ID));
		PREPARE TDDFC_CUSTID_STMT FROM @TDDFC_CUSTID;
		EXECUTE TDDFC_CUSTID_STMT;
		SET CUSTID=@TEMP_TDDFC_CUSTID;	
		SET @TDDFC_S_DATE =(SELECT CONCAT('SELECT TDDFC_STARTDATE INTO @TEMP_S_DATE FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE TDDFC_ID=',MIN_TDDFC_ID));
		PREPARE TDDFC_S_DATE_STMT FROM @TDDFC_S_DATE;
		EXECUTE TDDFC_S_DATE_STMT;
		SET S_DATE=@TEMP_S_DATE;
		SET @TDDFC_ENDDATE =(SELECT CONCAT('SELECT TDDFC_ENDDATE INTO @TEMP_ENDDATE FROM ',DD_TEMP_TBLNAME_FUTURE_TBLE ,' WHERE TDDFC_ID=',MIN_TDDFC_ID));
		PREPARE TDDFC_ENDDATE_STMT FROM @TDDFC_ENDDATE;
		EXECUTE TDDFC_ENDDATE_STMT;
		SET ENDDATE=@TEMP_ENDDATE;
		SET @DD_CALC_INSERT_PAYMENT_TRANS=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE ,'(CUSTOMERID,FORPERIOD,RECORDVERSION) SELECT CUSTOMER_ID,PD_FOR_PERIOD,CED_REC_VER FROM PAYMENT_DETAILS WHERE PD_FOR_PERIOD BETWEEN ','"',S_DATE,'"',' AND ','"',ENDDATE,'"', 'AND CUSTOMER_ID=',CUSTID,' ORDER BY CUSTOMER_ID'));
        PREPARE DD_CALC_INSERT_PAYMENT_TRANS_STMT FROM @DD_CALC_INSERT_PAYMENT_TRANS;
        EXECUTE DD_CALC_INSERT_PAYMENT_TRANS_STMT;
	SET MIN_TDDFC_ID = MIN_TDDFC_ID+1;
	END WHILE;
SET DD_TEMP_TBLNAME_UNIT=(SELECT CONCAT('TEMP_DD_UNIT_CUSTOMER_',SYSDATE()));
	SET DD_TEMP_TBLNAME_UNIT=(SELECT REPLACE(DD_TEMP_TBLNAME_UNIT,' ',''));
	SET DD_TEMP_TBLNAME_UNIT=(SELECT REPLACE(DD_TEMP_TBLNAME_UNIT,'-',''));
	SET DD_TEMP_TBLNAME_UNIT=(SELECT REPLACE(DD_TEMP_TBLNAME_UNIT,':',''));
	SET DD_TEMP_TBLNAME_UNIT_EXPENSE=(SELECT CONCAT(DD_TEMP_TBLNAME_UNIT,'_',USERSTAMP_ID)); 
	SET @TEMP_CREATE_DD_ACTIVE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,'(TDDUC_ID INTEGER AUTO_INCREMENT,TDDUC_UNITNO INTEGER,TDDUC_CUSTOMERID INTEGER,TDDUC_RECVER INTEGER,
	TDDUC_STARTDATE DATE,TDDUC_ENDDATE DATE,TDDUC_PTDDATE DATE,TDDUC_TERMINATE CHAR(1),PRIMARY KEY(TDDUC_ID))'));
    PREPARE TEMP_CREATE_DD_ACTIVE_STMT FROM @TEMP_CREATE_DD_ACTIVE;
	EXECUTE TEMP_CREATE_DD_ACTIVE_STMT;
	SET @DD_CALC_INSERT_UNIT_TRANS=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,'(TDDUC_UNITNO,TDDUC_CUSTOMERID,TDDUC_RECVER,TDDUC_STARTDATE,TDDUC_ENDDATE,TDDUC_PTDDATE,TDDUC_TERMINATE)
	SELECT U.UNIT_NO,CED.CUSTOMER_ID,CED.CED_REC_VER,CLP.CLP_STARTDATE,CLP.CLP_ENDDATE,CLP.CLP_PRETERMINATE_DATE,CLP.CLP_TERMINATE
	FROM UNIT U,CUSTOMER_ENTRY_DETAILS CED,CUSTOMER_LP_DETAILS CLP WHERE CED.CUSTOMER_ID=CLP.CUSTOMER_ID AND CED.CED_REC_VER=CLP.CED_REC_VER AND 
	U.UNIT_ID=CED.UNIT_ID AND U.UNIT_NO=',DD_UNIT_NO,' AND IF(CLP.CLP_PRETERMINATE_DATE IS NOT NULL,CLP.CLP_STARTDATE<CLP.CLP_PRETERMINATE_DATE,CLP.CLP_STARTDATE<CLP.CLP_ENDDATE)
	AND CLP.CLP_GUEST_CARD IS NULL AND CED.CED_CANCEL_DATE IS NULL ORDER BY CED.CUSTOMER_ID'));
    PREPARE DD_CALC_INSERT_UNIT_TRANS_STMT FROM @DD_CALC_INSERT_UNIT_TRANS;
    EXECUTE DD_CALC_INSERT_UNIT_TRANS_STMT;
	SET DD_TEMP_TBLNAME_FUTURE_NONTRANS=(SELECT CONCAT('TEMP_DD_NON_TRANS_FUTURE_CUSTOMER_',SYSDATE()));
	SET DD_TEMP_TBLNAME_FUTURE_NONTRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE_NONTRANS,' ',''));
	SET DD_TEMP_TBLNAME_FUTURE_NONTRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE_NONTRANS,'-',''));
	SET DD_TEMP_TBLNAME_FUTURE_NONTRANS=(SELECT REPLACE(DD_TEMP_TBLNAME_FUTURE_NONTRANS,':',''));
	SET DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION=(SELECT CONCAT(DD_TEMP_TBLNAME_FUTURE_NONTRANS,'_',USERSTAMP_ID)); 
	SET @TEMP_CREATE_DD_FUTURENONTRANS=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ,'(TFC_ID INTEGER AUTO_INCREMENT,TFC_CUSTOMERID INTEGER,TFC_RECVER 
	INTEGER,PRIMARY KEY(TFC_ID))'));
    PREPARE TEMP_CREATE_DD_FUTURENONTRANS_STMT FROM @TEMP_CREATE_DD_FUTURENONTRANS;
	EXECUTE TEMP_CREATE_DD_FUTURENONTRANS_STMT;
	SET @DD_CALC_INSERT_FUTURECUSTOMER=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ,'(TFC_CUSTOMERID,TFC_RECVER)
	SELECT TDDUC_CUSTOMERID,TDDUC_RECVER FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' TDUC,',DD_TEMP_TBLNAME_FUTURE_TBLE ,' TDFC WHERE TDUC.TDDUC_CUSTOMERID=TDFC.TDDFC_CUSTOMERID AND TDUC.TDDUC_RECVER=TDFC.TDDFC_RECVER'));
    PREPARE DD_CALC_INSERT_FUTURECUSTOMER_STMT FROM @DD_CALC_INSERT_FUTURECUSTOMER;
    EXECUTE DD_CALC_INSERT_FUTURECUSTOMER_STMT;
	SET DD_TEMP_FUTURE_NONTRANS_PAYMENT=(SELECT CONCAT('TEMP_DD_DELETE_FUTURE_CUSTOMER_',SYSDATE()));
	SET DD_TEMP_FUTURE_NONTRANS_PAYMENT=(SELECT REPLACE(DD_TEMP_FUTURE_NONTRANS_PAYMENT,' ',''));
	SET DD_TEMP_FUTURE_NONTRANS_PAYMENT=(SELECT REPLACE(DD_TEMP_FUTURE_NONTRANS_PAYMENT,'-',''));
	SET DD_TEMP_FUTURE_NONTRANS_PAYMENT=(SELECT REPLACE(DD_TEMP_FUTURE_NONTRANS_PAYMENT,':',''));
	SET DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT=(SELECT CONCAT(DD_TEMP_FUTURE_NONTRANS_PAYMENT,'_',USERSTAMP_ID)); 
	SET @TEMP_CREATE_DD_DELETE_FUTURE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT ,'(TDC_ID INTEGER AUTO_INCREMENT,TDC_CUSTOMERID INTEGER,TDC_RECVER 
	INTEGER,PRIMARY KEY(TDC_ID))'));
    PREPARE TEMP_CREATE_DD_DELETE_FUTURE_STMT FROM @TEMP_CREATE_DD_DELETE_FUTURE;
	EXECUTE TEMP_CREATE_DD_DELETE_FUTURE_STMT;	
	SET @MIN_TFCID =(SELECT CONCAT('SELECT MIN(TFC_ID) INTO @TEMP_MIN_TFCID FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ));
	PREPARE MIN_TFCID_STMT FROM @MIN_TFCID;
	EXECUTE MIN_TFCID_STMT;
	SET MIN_TFC_ID=@TEMP_MIN_TFCID;
	SET @MAX_TFCID =(SELECT CONCAT('SELECT MAX(TFC_ID) INTO @TEMP_MAX_TFCID FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ));
	PREPARE MAX_TFCID_STMT FROM @MAX_TFCID;
	EXECUTE MAX_TFCID_STMT;
	SET MAX_TFC_ID=@TEMP_MAX_TFCID;
	WHILE(MIN_TFC_ID<=MAX_TFC_ID)DO
		SET @FUTURE_CUSTID_REC=(SELECT CONCAT('SELECT COUNT(*) INTO @TEMP_FUTURE_CUSTID_REC FROM ',DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE ,' WHERE CUSTOMERID=(SELECT TFC_CUSTOMERID
		FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ,' WHERE TFC_ID=',MIN_TFC_ID,') AND RECORDVERSION=(SELECT TFC_RECVER
		FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ,' WHERE TFC_ID=',MIN_TFC_ID,')'));
		PREPARE FUTURE_CUSTID_REC_STMT FROM @FUTURE_CUSTID_REC;
		EXECUTE FUTURE_CUSTID_REC_STMT;
		SET FUTURE_CUSTID_RECVER=@TEMP_FUTURE_CUSTID_REC;
			IF FUTURE_CUSTID_RECVER=0 THEN 
			SET @FUTURE_CUSTID_TRANSREC=(SELECT CONCAT('SELECT COUNT(*) INTO @TEMP_FUTURE_CUSTID_TRANSREC FROM ',DD_TEMP_TBLNAME_FUTURETRANS_TBLE ,' WHERE TCHKTRS_CUSTOMERID=(SELECT TFC_CUSTOMERID
			FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION,' WHERE TFC_ID=',MIN_TFC_ID,') AND TCHKTRS_RECVER=(SELECT TFC_RECVER
			FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION,' WHERE TFC_ID=',MIN_TFC_ID,')'));
			PREPARE FUTURE_CUSTID_TRANSREC_STMT FROM @FUTURE_CUSTID_TRANSREC;
			EXECUTE FUTURE_CUSTID_TRANSREC_STMT;
			SET FUTURE_CUSTID_TRANSRECVER=@TEMP_FUTURE_CUSTID_TRANSREC;
			IF FUTURE_CUSTID_TRANSRECVER=0 THEN
					SET @DD_CALC_INSERT_FUTURE_NONTRANS=(SELECT CONCAT('INSERT INTO ',DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT ,'(TDC_CUSTOMERID,TDC_RECVER)VALUES
				   ((SELECT TFC_CUSTOMERID FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ,' WHERE TFC_ID=',MIN_TFC_ID,'),(SELECT TFC_RECVER FROM ',DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION ,' WHERE TFC_ID=',MIN_TFC_ID,'))'));
					PREPARE DD_CALC_INSERT_FUTURE_NONTRANS_STMT FROM @DD_CALC_INSERT_FUTURE_NONTRANS;
					EXECUTE DD_CALC_INSERT_FUTURE_NONTRANS_STMT;
			END IF;
		END IF;
	SET MIN_TFC_ID = MIN_TFC_ID+1;
	END WHILE;
	SET @TEMP_DELETE_DD_UNIT=(SELECT CONCAT('DELETE FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' WHERE TDDUC_CUSTOMERID IN (SELECT TDC_CUSTOMERID FROM ',DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT ,')
	AND TDDUC_RECVER IN (SELECT TDC_RECVER FROM ',DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT ,')'));
    PREPARE TEMP_DELETE_DD_UNIT_STMT FROM @TEMP_DELETE_DD_UNIT;
	EXECUTE TEMP_DELETE_DD_UNIT_STMT;
	SET SD_DAY = (SELECT DAY(DD_STARTDATE));
	SET SD_MONTH = (SELECT MONTH(DD_STARTDATE));
	SET SD_YEAR = (SELECT YEAR(DD_STARTDATE));
	SET ED_DAY = (SELECT DAY(DD_ENDDATE));
	SET ED_MONTH = (SELECT MONTH(DD_ENDDATE));
	SET ED_YEAR = (SELECT YEAR(DD_ENDDATE));
	SET DD_TEMP_DD_CNT_CUSTOMER=(SELECT CONCAT('TEMP_DD_COUNT_CUSTOMER',SYSDATE()));
	SET DD_TEMP_DD_CNT_CUSTOMER=(SELECT REPLACE(DD_TEMP_DD_CNT_CUSTOMER,' ',''));
	SET DD_TEMP_DD_CNT_CUSTOMER=(SELECT REPLACE(DD_TEMP_DD_CNT_CUSTOMER,'-',''));
	SET DD_TEMP_DD_CNT_CUSTOMER=(SELECT REPLACE(DD_TEMP_DD_CNT_CUSTOMER,':',''));
	SET DD_TEMP_TABLENAME_CNT_CUSTOMER=(SELECT CONCAT(DD_TEMP_DD_CNT_CUSTOMER,'_',USERSTAMP_ID)); 
	SET @TEMP_CREATE_DD_DELETE_FUTURE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TABLENAME_CNT_CUSTOMER ,'(TCC_ID INTEGER AUTO_INCREMENT,TCC_CUSTOMERID INTEGER,TCC_RECVER INTEGER,TCC_STARTDATE DATE,TCC_ENDDATE DATE,TCC_TERMINATE CHAR(1),PRIMARY KEY(TCC_ID))'));
    PREPARE TEMP_CREATE_DD_DELETE_FUTURE_STMT FROM @TEMP_CREATE_DD_DELETE_FUTURE;
	EXECUTE TEMP_CREATE_DD_DELETE_FUTURE_STMT;
	SET @MIN_TDDUCID =(SELECT CONCAT('SELECT MIN(TDDUC_ID) INTO @TEMP_MIN_TDDUC_ID FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ));
	PREPARE MIN_TDDUC_ID_STMT FROM @MIN_TDDUCID;
	EXECUTE MIN_TDDUC_ID_STMT;
	SET MIN_TDDUC_ID=@TEMP_MIN_TDDUC_ID;
	SET @MAX_TDDUCID =(SELECT CONCAT('SELECT MAX(TDDUC_ID) INTO @TEMP_MAX_TDDUC_ID FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ));
	PREPARE MAX_TDDUC_ID_STMT FROM @MAX_TDDUCID;
	EXECUTE MAX_TDDUC_ID_STMT;
	SET MAX_TDDUC_ID=@TEMP_MAX_TDDUC_ID;
	WHILE (MIN_TDDUC_ID<=MAX_TDDUC_ID)DO
		SET @TDDUC_CUSTOMER_ID =(SELECT CONCAT('SELECT TDDUC_CUSTOMERID INTO @TEMP_TDDUCCUSTOMERID FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' WHERE TDDUC_ID=',MIN_TDDUC_ID));
		PREPARE TDDUC_CUSTOMERID_STMT FROM @TDDUC_CUSTOMER_ID;
		EXECUTE TDDUC_CUSTOMERID_STMT;
		SET TDDUCCUSTOMERID=@TEMP_TDDUCCUSTOMERID;
		SET @TEMP_TDDUC_TERMINATE =(SELECT CONCAT('SELECT TDDUC_TERMINATE INTO @TEMP_TDDUCTERMINATE FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' WHERE TDDUC_ID=',MIN_TDDUC_ID));
		PREPARE TEMP_TDDUC_TERMINATE_STMT FROM @TEMP_TDDUC_TERMINATE;
		EXECUTE TEMP_TDDUC_TERMINATE_STMT;
		SET TDDUCTERMINATE=@TEMP_TDDUCTERMINATE;
		SET @TDDUC_RECVER_STMT =(SELECT CONCAT('SELECT TDDUC_RECVER INTO @TEMP_TDDUCRECVER FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' WHERE TDDUC_ID=',MIN_TDDUC_ID));
		PREPARE TDDUCRECVER_STMT FROM @TDDUC_RECVER_STMT;
		EXECUTE TDDUCRECVER_STMT;
		SET TDDUCRECVER=@TEMP_TDDUCRECVER;
		SET @TDDUC_STARTDATE =(SELECT CONCAT('SELECT TDDUC_STARTDATE INTO @TEMP_TDDUCSTARTDATE FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' WHERE TDDUC_ID=',MIN_TDDUC_ID));
		PREPARE TDDUCSTARTDATE_STMT FROM @TDDUC_STARTDATE;
		EXECUTE TDDUCSTARTDATE_STMT;
		SET TDDUCSTARTDATE=@TEMP_TDDUCSTARTDATE;			
		SET @TDDUC_END_DATE =(SELECT CONCAT('SELECT TDDUC_ENDDATE INTO @TEMP_TDDUCENDDATE FROM ',DD_TEMP_TBLNAME_UNIT_EXPENSE ,' WHERE TDDUC_ID=',MIN_TDDUC_ID));
		PREPARE TDDUC_END_DATE_STMT FROM @TDDUC_END_DATE;
		EXECUTE TDDUC_END_DATE_STMT;
		SET TDDUCENDDATE=@TEMP_TDDUCENDDATE;
		SET TDDUC_EDDAY = (SELECT DAY(TDDUCENDDATE));
		SET TDDUC_EDMONTH = (SELECT MONTH(TDDUCENDDATE));
		SET TDDUC_EDYEAR = (SELECT YEAR(TDDUCENDDATE));
		SET TDDUC_SDDAY = (SELECT DAY(TDDUCSTARTDATE));
		SET TDDUC_SDMONTH = (SELECT MONTH(TDDUCSTARTDATE));
		SET TDDUC_SDYEAR = (SELECT YEAR(TDDUCSTARTDATE));
	COUNTLOOP: WHILE(TDDUC_SDYEAR<=TDDUC_EDYEAR)DO
			SET TEMPDATE= (SELECT CONCAT(TDDUC_SDDAY,',',TDDUC_SDMONTH,',',TDDUC_SDYEAR));
			SET STARTDATE = (SELECT STR_TO_DATE(TEMPDATE,'%d,%m,%Y'));
			IF TDDUC_SDMONTH=TDDUC_EDMONTH AND TDDUC_SDYEAR=TDDUC_EDYEAR THEN
				SET ENDDATE = TDDUCENDDATE;
			ELSE
				SET ENDDATE = (SELECT LAST_DAY(STARTDATE));
			END IF;
			SET @DD_COUNT_INSERT =(SELECT CONCAT('INSERT INTO ',DD_TEMP_TABLENAME_CNT_CUSTOMER ,'(TCC_CUSTOMERID,TCC_RECVER,TCC_STARTDATE,TCC_ENDDATE)
			VALUES (',TDDUCCUSTOMERID,',',TDDUCRECVER,',','"',STARTDATE,'"',',','"',ENDDATE,'"',')'));
			PREPARE DD_COUNT_INSERT_STMT FROM @DD_COUNT_INSERT;
			EXECUTE DD_COUNT_INSERT_STMT;
			IF TDDUC_SDMONTH=TDDUC_EDMONTH AND TDDUC_SDYEAR=TDDUC_EDYEAR THEN
				LEAVE COUNTLOOP;
			END IF;
			IF TDDUC_SDMONTH=12 THEN
				SET TDDUC_SDMONTH=1;
				SET TDDUC_SDYEAR=TDDUC_SDYEAR+1;
			ELSE
				SET TDDUC_SDDAY=1;
				SET TDDUC_SDMONTH=TDDUC_SDMONTH+1;
			END IF;
		END WHILE;
		IF TDDUCTERMINATE IS NOT NULL THEN
			SET @TCC_IDCOUNT =(SELECT CONCAT('SELECT MAX(TCC_ID) INTO @TEMP_TCCID FROM ',DD_TEMP_TABLENAME_CNT_CUSTOMER ));
			PREPARE TCCID_STMT FROM @TCC_IDCOUNT;
			EXECUTE TCCID_STMT;
			SET TCCID=@TEMP_TCCID;
			SET @DD_COUNT_UPDATE =(SELECT CONCAT('UPDATE ',DD_TEMP_TABLENAME_CNT_CUSTOMER ,' SET TCC_TERMINATE="X" WHERE TCC_ID=',TCCID));
			PREPARE DD_COUNT_UPDATE_STMT FROM @DD_COUNT_UPDATE;
			EXECUTE DD_COUNT_UPDATE_STMT;
		END IF;
		SET MIN_TDDUC_ID = MIN_TDDUC_ID+1;
	END WHILE;
	SET @DD_COUNT_UPDATE_SDATE =(SELECT CONCAT('UPDATE ',DD_TEMP_TABLENAME_CNT_CUSTOMER ,' SET TCC_STARTDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(TCC_STARTDATE, INTERVAL 1 MONTH)), 1))'));
	PREPARE DD_COUNT_UPDATE_SDATE_STMT FROM @DD_COUNT_UPDATE_SDATE;
	EXECUTE DD_COUNT_UPDATE_SDATE_STMT;
	SET @DD_COUNT_UPDATE_EDATE =(SELECT CONCAT('UPDATE ',DD_TEMP_TABLENAME_CNT_CUSTOMER ,' SET TCC_ENDDATE=(SELECT LAST_DAY(TCC_ENDDATE))  WHERE TCC_TERMINATE IS NULL'));
	PREPARE DD_COUNT_UPDATE_EDATE_STMT FROM @DD_COUNT_UPDATE_EDATE;
	EXECUTE DD_COUNT_UPDATE_EDATE_STMT;
	SET DD_TEMP_DD_SPLITEDDATE=(SELECT CONCAT('TEMP_INPUTDATE_SPLITED_DATE_',SYSDATE()));
	SET DD_TEMP_DD_SPLITEDDATE=(SELECT REPLACE(DD_TEMP_DD_SPLITEDDATE,' ',''));
	SET DD_TEMP_DD_SPLITEDDATE=(SELECT REPLACE(DD_TEMP_DD_SPLITEDDATE,'-',''));
	SET DD_TEMP_DD_SPLITEDDATE=(SELECT REPLACE(DD_TEMP_DD_SPLITEDDATE,':',''));
	SET DD_TEMP_TABLENAME_DD_SPLITEDDATE=(SELECT CONCAT(DD_TEMP_DD_SPLITEDDATE,'_',USERSTAMP_ID)); 
	SET @DD_CREATE_SPLITEDDATE=(SELECT CONCAT('CREATE TABLE ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,'(ID INTEGER AUTO_INCREMENT,SDATE DATE,EDATE DATE,COUNT_ID INTEGER,PRIMARY KEY(ID))'));
    PREPARE DD_CREATE_SPLITEDDATE_STMT FROM @DD_CREATE_SPLITEDDATE;
	EXECUTE DD_CREATE_SPLITEDDATE_STMT;
	DIVLOOP: 
			WHILE (SD_YEAR<=ED_YEAR) DO
				SET TEMP_DATE= (SELECT CONCAT(SD_DAY,',',SD_MONTH,',',SD_YEAR));
				SET START_DATE = (SELECT STR_TO_DATE(TEMP_DATE,'%d,%m,%Y'));
				IF SD_MONTH=ED_MONTH AND SD_YEAR=ED_YEAR THEN
					SET END_DATE = DD_ENDDATE;
				ELSE
					SET END_DATE = (SELECT LAST_DAY(START_DATE));
				END IF;
				SET @DD_INSERT_SPLITEDDATE =(SELECT CONCAT('INSERT INTO ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,'(SDATE,EDATE) VALUES (','"',START_DATE,'"',',','"',END_DATE,'"',')'));
				PREPARE DD_INSERT_SPLITEDDATE_STMT FROM @DD_INSERT_SPLITEDDATE;
				EXECUTE DD_INSERT_SPLITEDDATE_STMT;
				IF SD_YEAR=ED_YEAR AND SD_MONTH=ED_MONTH THEN
					LEAVE DIVLOOP;
				END IF;
				IF SD_MONTH=12 THEN
					SET SD_MONTH=1;
					SET SD_YEAR=SD_YEAR+1;
				ELSE
					SET SD_DAY=1;
					SET SD_MONTH=SD_MONTH+1;
				END IF;
			END WHILE;
	SET @DD_SPLITTED_UPDATE_SDATE =(SELECT CONCAT('UPDATE ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,' SET SDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(SDATE, INTERVAL 1 MONTH)), 1))'));
	PREPARE DD_SPLITTED_UPDATE_SDATE_STMT FROM @DD_SPLITTED_UPDATE_SDATE;
	EXECUTE DD_SPLITTED_UPDATE_SDATE_STMT;
	SET @DD_SPLITTED_UPDATE_EDATE =(SELECT CONCAT('UPDATE ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,' SET EDATE=(SELECT LAST_DAY(EDATE))'));
	PREPARE DD_SPLITTED_UPDATE_EDATE_STMT FROM @DD_SPLITTED_UPDATE_EDATE;
	EXECUTE DD_SPLITTED_UPDATE_EDATE_STMT;
	SET @MIN_TISDID =(SELECT CONCAT('SELECT MIN(ID) INTO @TEMP_MIN_TISD_ID FROM ',DD_TEMP_TABLENAME_DD_SPLITEDDATE));
	PREPARE MIN_TISDID_STMT FROM @MIN_TISDID;
	EXECUTE MIN_TISDID_STMT;
	SET MIN_TISD_ID=@TEMP_MIN_TISD_ID;
	SET @MAX_TISDID =(SELECT CONCAT('SELECT MAX(ID) INTO @TEMP_MAX_TISD_ID FROM ',DD_TEMP_TABLENAME_DD_SPLITEDDATE));
	PREPARE MAX_TISDID_STMT FROM @MAX_TISDID;
	EXECUTE MAX_TISDID_STMT;
	SET MAX_TISD_ID=@TEMP_MAX_TISD_ID;
	WHILE(MIN_TISD_ID<=MAX_TISD_ID)DO
		SET @TISDSTART_DATE =(SELECT CONCAT('SELECT SDATE INTO @TEMP_TISDSTARTDATE FROM ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,' WHERE ID=',MIN_TISD_ID));
		PREPARE TISDSTARTDATE_STMT FROM @TISDSTART_DATE;
		EXECUTE TISDSTARTDATE_STMT;
		SET TISDSTARTDATE=@TEMP_TISDSTARTDATE;
		SET @TISDEND_DATE =(SELECT CONCAT('SELECT EDATE INTO @TEMP_TISDENDDATE FROM ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,' WHERE ID=',MIN_TISD_ID));
		PREPARE TISDENDDATE_STMT FROM @TISDEND_DATE;
		EXECUTE TISDENDDATE_STMT;
		SET TISDENDDATE=@TEMP_TISDENDDATE;
		SET @DD_COUNT_FINAL =(SELECT CONCAT('SELECT COUNT(DISTINCT(TCC_CUSTOMERID)) INTO @TEMP_COUNTID FROM ',DD_TEMP_TABLENAME_CNT_CUSTOMER ,' WHERE TCC_STARTDATE=','"',TISDSTARTDATE,'"',' AND TCC_ENDDATE=','"',TISDENDDATE,'"',' AND TCC_TERMINATE IS NULL'));
		PREPARE DD_COUNT_FINAL_STMT FROM @DD_COUNT_FINAL;
		EXECUTE DD_COUNT_FINAL_STMT;
		SET COUNTID=@TEMP_COUNTID;
		SET @DD_SPLITTED_UPDATE_COUNTID =(SELECT CONCAT('UPDATE ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ,' SET COUNT_ID=',COUNTID,' WHERE ID=',MIN_TISD_ID));
		PREPARE DD_SPLITTED_UPDATE_COUNTID_STMT FROM @DD_SPLITTED_UPDATE_COUNTID;
		EXECUTE DD_SPLITTED_UPDATE_COUNTID_STMT;
		SET MIN_TISD_ID = MIN_TISD_ID+1;
	END WHILE;
	SET @FINAL_COUNT =(SELECT CONCAT('SELECT MAX(COUNT_ID) INTO @TEMP_FINALCOUNT FROM ',DD_TEMP_TABLENAME_DD_SPLITEDDATE ));
	PREPARE FINALCOUNT_STMT FROM @FINAL_COUNT;
	EXECUTE FINALCOUNT_STMT;
	SET FINALCOUNT=@TEMP_FINALCOUNT;
	IF(FINALCOUNT > 4)THEN
		SET FINALCOUNT = 4;
	END IF;
	CALL SP_DROP_TEMP_TABLE_DD_NO_OF_DIVISION_CALCULATION(TEMP_DD_ACTIVE_CUSTOMER_TBLE,DD_TEMP_TBLNAME_FUTURE_TBLE,
		DD_TEMP_TBLNAME_PAYMENT_TRANS_TBLE,DD_TEMP_TBLNAME_FUTURETRANS_TBLE,DD_TEMP_TBLNAME_FUTURE_NONTRANSACTION,
		DD_TEMP_TABLENAME_FUTURE_NONTRANS_PAYMENT,DD_TEMP_TBLNAME_UNIT_EXPENSE,DD_TEMP_TABLENAME_DD_SPLITEDDATE,
		DD_TEMP_TABLENAME_CNT_CUSTOMER);
	COMMIT;
END;