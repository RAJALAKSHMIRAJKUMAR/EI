DROP PROCEDURE IF EXISTS SP_DD_CALCULATION;
CREATE PROCEDURE SP_DD_CALCULATION(
	IN DD_UNIT_NO INTEGER(4),
	IN DD_CUSTOMER_ID INTEGER,
	IN DD_REC_VER TEXT,
	IN DD_RECVER_FLAG CHAR(1),
	IN DD_USERSTAMP  VARCHAR(50),
	OUT DD_CALC_TEMP_TBLNAME TEXT)
BEGIN
DECLARE DD_TEMPTBLNAME TEXT;
DECLARE USERSTAMP_ID INT;
DECLARE DD_TEMP_TBLNAME TEXT;
DECLARE START_DATE DATE;
DECLARE END_DATE DATE;
DECLARE TEMP_REC_VER TEXT;
DECLARE REC_VER INTEGER;
DECLARE REC_VER_LENGTH INTEGER;
DECLARE REC_VER_POSITION INTEGER;
DECLARE NO_OF_DIV INTEGER;
DECLARE PTD_DATE DATE;
DECLARE CARD_COUNT INTEGER;
DECLARE CARD_AMOUNT DECIMAL(6,2);
DECLARE QUATERS DECIMAL(5,2);
DECLARE AIR_QUAT_AMOUNT DECIMAL(7,2);
DECLARE AIR_AMOUNT DECIMAL(10,2);
DECLARE DDTTLCARDAMOUNT DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLEEDIVAMOUNT DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLAIRCON DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLUNITDIVAMOUNT DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLCHECKOUTCLEAN DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLDRYCLEAN DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLDDCHARGE DECIMAL(7,2) DEFAULT 0;
DECLARE DDTTLDEPOAMOUNT DECIMAL(7,2) DEFAULT 0;
DECLARE SUBTOTAL_ONE DECIMAL(10,2);
DECLARE SUBTOTAL_TWO DECIMAL(10,2);
DECLARE SUBTOTAL_THREE DECIMAL(10,2);
DECLARE TOTAL_DD DECIMAL(15,2);
DECLARE TOTAL_REFUND DECIMAL(10,2);
DECLARE SUMARICONQ DECIMAL(10,2);
DECLARE DD_AIRCONCOUNT_AMT DECIMAL(10,2);
DECLARE CHKOUT_AMOUNT DECIMAL(10,2);
DECLARE DRY_AMOUNT DECIMAL(10,2);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
	ROLLBACK; 
END;
START TRANSACTION; 
CALL SP_CHANGE_USERSTAMP_AS_ULDID(DD_USERSTAMP,@ULDID);
SET USERSTAMP_ID=(SELECT @ULDID);
SET DD_TEMP_TBLNAME=(SELECT CONCAT('TEMP_DD_CALCULATION_',SYSDATE()));
IF DD_RECVER_FLAG = '' THEN
	SET DD_RECVER_FLAG = NULL;
END IF;
IF DD_CUSTOMER_ID IS NOT NULL AND DD_REC_VER IS NOT NULL THEN
	SET DD_TEMP_TBLNAME=(SELECT REPLACE(DD_TEMP_TBLNAME,' ',''));
	SET DD_TEMP_TBLNAME=(SELECT REPLACE(DD_TEMP_TBLNAME,'-',''));
	SET DD_TEMP_TBLNAME=(SELECT REPLACE(DD_TEMP_TBLNAME,':',''));
	SET DD_CALC_TEMP_TBLNAME=(SELECT CONCAT(DD_TEMP_TBLNAME,'_',USERSTAMP_ID)); 
	SET @TEMP_DROP_DD_CALC=(SELECT CONCAT('DROP TABLE IF EXISTS ',DD_CALC_TEMP_TBLNAME));
    PREPARE TEMP_DROP_DD_CALC_STMT FROM @TEMP_DROP_DD_CALC;
	EXECUTE TEMP_DROP_DD_CALC_STMT;
	SET @TEMP_CREATE_DD_CALC=(SELECT CONCAT('CREATE TABLE ',DD_CALC_TEMP_TBLNAME ,'
	(DDCUSTOMERID INTEGER, DDRECVER INTEGER, DDSTARTDATE DATE, DDENDDATE DATE, DDNOOFDIVISION INTEGER, DDCARDCOUNT INTEGER, DDCARDAMOUNT DECIMAL(6,2), DDCARDTILLDATE DATE, DDEEINVOICEDATE TEXT, DDEEAMOUNT DECIMAL(7,2),DDEEDIVAMOUNT DECIMAL(7,2),DDEECAP DECIMAL(7,2),DDUNITINVOICEDATE DATE,DDUNITAMOUNT DECIMAL(7,2),DDUNITDIVAMOUNT DECIMAL(7,2),
	DDUNITINVOICEITEM TEXT,DDCPPID INTEGER,DDPAYMENTUNPAIDDATE VARCHAR(15),DDPROCUNPAID VARCHAR(6),DDDEPOAMOUNT DECIMAL(7,2),
	DDDEPOUNPAID VARCHAR(6),DDQUATERS DECIMAL(5,2),DDAIRCONQ DECIMAL(7,2),DDAIRCON DECIMAL(10,2),DDSUMOFQUATER DECIMAL(10,2),DDQUATERTOTAL DECIMAL(10,2),DDPERQUATER DECIMAL(10,2),DDCHECKOUTCLEAN DECIMAL(7,2),
	DDDRYCLEAN DECIMAL(7,2),DDCHARGETYPE TEXT,DDCHARGE DECIMAL(7,2),DDSUBTOTAL_ONE DECIMAL(10,2),DDSUBTOTAL_TWO DECIMAL(10,2),
	DDSUBTOTAL_THREE DECIMAL(10,2),DDTOTAL_DD DECIMAL(15,2),DDTOTAL_REFUND DECIMAL(10,2)
	,FOREIGN KEY (DDCPPID) REFERENCES CUSTOMER_PAYMENT_PROFILE(CPP_ID))'));
    PREPARE TEMP_CREATE_DD_CALC_STMT FROM @TEMP_CREATE_DD_CALC;
	EXECUTE TEMP_CREATE_DD_CALC_STMT;
	SET TEMP_REC_VER = DD_REC_VER;
	SET REC_VER_LENGTH=1;
	RECVER_LOOP: LOOP
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
			SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
		END IF;
		SET START_DATE=(SELECT CLP.CLP_STARTDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET END_DATE=(SELECT CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET PTD_DATE=(SELECT CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		IF PTD_DATE IS NOT NULL THEN
			SET END_DATE=PTD_DATE;
		END IF;
        SET @DD_CALC_INSERT_CUST_DATE=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,'(DDCUSTOMERID, DDRECVER, DDSTARTDATE, DDENDDATE)VALUES(',DD_CUSTOMER_ID,',',REC_VER,',','"',START_DATE,'"',',','"',END_DATE,'"',')'));
        PREPARE DD_CALC_INSERT_CUST_DATE_STMT FROM @DD_CALC_INSERT_CUST_DATE;
        EXECUTE DD_CALC_INSERT_CUST_DATE_STMT;
		IF REC_VER_POSITION<=0 THEN
			LEAVE RECVER_LOOP;
		END IF;
	END LOOP;
	IF DD_RECVER_FLAG IS NOT NULL THEN
		SET TEMP_REC_VER = DD_REC_VER;
		SET REC_VER_LENGTH=1;
		DIV_RECVER_LOOP:  LOOP
			SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
			IF REC_VER_POSITION<=0 THEN
				SET REC_VER=TEMP_REC_VER;
			ELSE
				SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
				SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
			END IF;
			SET START_DATE=(SELECT CLP.CLP_STARTDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
			SET END_DATE=(SELECT CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
			SET PTD_DATE=(SELECT CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
			IF PTD_DATE IS NOT NULL THEN
				SET END_DATE=PTD_DATE;
			END IF;
			CALL SP_DD_NO_OF_DIVISION_CALCULATION(DD_UNIT_NO,START_DATE,END_DATE,USERSTAMP_ID,@FINALCOUNT);
			SET NO_OF_DIV = (SELECT @FINALCOUNT);
			CALL SP_DD_FLD_CARD_CALCULATION(DD_CUSTOMER_ID,START_DATE,END_DATE,REC_VER,DD_CALC_TEMP_TBLNAME,@ACC_COUNT,@AMOUNT);
			SET CARD_COUNT=(SELECT @ACC_COUNT);
			SET CARD_AMOUNT=(SELECT @AMOUNT);
			SET @DD_CALC_UPDATE_CUST_DATE=(SELECT CONCAT('UPDATE ',DD_CALC_TEMP_TBLNAME ,' SET DDNOOFDIVISION=',NO_OF_DIV,',DDCARDCOUNT=',CARD_COUNT,',DDCARDAMOUNT=',CARD_AMOUNT,'WHERE 
			DDCUSTOMERID=',DD_CUSTOMER_ID,' AND DDRECVER=',REC_VER ,' AND DDSTARTDATE=','"',START_DATE ,'"',' AND DDENDDATE=','"',END_DATE,'"'));
			PREPARE DD_CALC_UPDATE_CUST_DATE_STMT FROM @DD_CALC_UPDATE_CUST_DATE;
			EXECUTE DD_CALC_UPDATE_CUST_DATE_STMT;
			IF REC_VER_POSITION<=0 THEN
				LEAVE DIV_RECVER_LOOP;
			END IF;
		END LOOP;
	ELSE
		SET TEMP_REC_VER = DD_REC_VER;
		SET REC_VER_LENGTH=1;
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
		END IF;
		SET START_DATE=(SELECT CLP.CLP_STARTDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET REC_VER_LENGTH=1;
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
		END IF;
		SET END_DATE=(SELECT CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET PTD_DATE=(SELECT CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		IF PTD_DATE IS NOT NULL THEN
			SET END_DATE=PTD_DATE;
		END IF;
		CALL SP_DD_NO_OF_DIVISION_CALCULATION(DD_UNIT_NO,START_DATE,END_DATE,USERSTAMP_ID,@FINALCOUNT);
		SET NO_OF_DIV = (SELECT @FINALCOUNT);
		CALL SP_DD_FLD_CARD_CALCULATION(DD_CUSTOMER_ID,START_DATE,END_DATE,REC_VER,DD_CALC_TEMP_TBLNAME,@ACC_COUNT,@AMOUNT);
		SET CARD_COUNT=(SELECT @ACC_COUNT);
		SET CARD_AMOUNT=(SELECT @AMOUNT);
		SET @DD_CALC_INSERT_DIV_CARD=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDNOOFDIVISION, DDCARDCOUNT, DDCARDAMOUNT) VALUES(',NO_OF_DIV,',',CARD_COUNT,',',CARD_AMOUNT,')'));
        PREPARE DD_CALC_INSERT_DIV_CARD_STMT FROM @DD_CALC_INSERT_DIV_CARD;
        EXECUTE DD_CALC_INSERT_DIV_CARD_STMT;
	END IF;
	SET TEMP_REC_VER = DD_REC_VER;
	SET REC_VER_LENGTH=1;
	EE_RECVER_LOOP:  LOOP
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
			SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
		END IF;
		SET START_DATE=(SELECT CLP.CLP_STARTDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET END_DATE=(SELECT CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET PTD_DATE=(SELECT CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		IF PTD_DATE IS NOT NULL THEN
			SET END_DATE=PTD_DATE;
		END IF;
		CALL SP_DD_ELECTRICITY_EXCESS_CALCULATION( DD_UNIT_NO, DD_CUSTOMER_ID, REC_VER, START_DATE, END_DATE,DD_CALC_TEMP_TBLNAME);
		IF REC_VER_POSITION<=0 THEN
			LEAVE EE_RECVER_LOOP;
		END IF;
	END LOOP;
	SET TEMP_REC_VER = DD_REC_VER;
	SET REC_VER_LENGTH=1;
	UNIT_RECVER_LOOP:  LOOP
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
			SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
		END IF;
		SET START_DATE=(SELECT CLP.CLP_STARTDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET END_DATE=(SELECT CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		SET PTD_DATE=(SELECT CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=REC_VER);
		IF PTD_DATE IS NOT NULL THEN
			SET END_DATE=PTD_DATE;
		END IF;
		CALL SP_DD_UNIT_EXPENSE_CALCULATION( DD_UNIT_NO, DD_CUSTOMER_ID, REC_VER, START_DATE, END_DATE,DD_CALC_TEMP_TBLNAME);
		IF REC_VER_POSITION<=0 THEN
			LEAVE UNIT_RECVER_LOOP;
		END IF;
	END LOOP;
	SET TEMP_REC_VER = DD_REC_VER;
	SET REC_VER_LENGTH=1;
	PDP_LOOP:  LOOP
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
			SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
		END IF;
		CALL SP_DD_PDP_CALCULATION( DD_CUSTOMER_ID, REC_VER,DD_CALC_TEMP_TBLNAME);
		IF REC_VER_POSITION<=0 THEN
			LEAVE PDP_LOOP;
		END IF;
	END LOOP;
	SET TEMP_REC_VER = DD_REC_VER;
	SET REC_VER_LENGTH=1;
	AIRCON_LOOP:  LOOP
		SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
		IF REC_VER_POSITION<=0 THEN
			SET REC_VER=TEMP_REC_VER;
		ELSE
			SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
			SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
		END IF;
		IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=REC_VER AND CFD.CPP_ID=7) THEN
			SET QUATERS = (SELECT CED.CED_QUARTERS FROM CUSTOMER_ENTRY_DETAILS CED WHERE CED.CUSTOMER_ID=DD_CUSTOMER_ID AND CED.CED_REC_VER=REC_VER);
			IF QUATERS IS NULL THEN
				SET QUATERS=0;
			END IF;
			SET AIR_QUAT_AMOUNT = (SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=REC_VER AND CFD.CPP_ID=7);
			SET AIR_AMOUNT = (QUATERS*AIR_QUAT_AMOUNT);
			SET @DD_CALC_INSERT_AIRCON_QUATER=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDQUATERS,DDAIRCONQ,DDAIRCON) VALUES(7,',REC_VER,',',QUATERS,',',AIR_QUAT_AMOUNT,',',AIR_AMOUNT,')'));
			PREPARE DD_CALC_INSERT_AIRCON_QUATER_STMT FROM @DD_CALC_INSERT_AIRCON_QUATER;
			EXECUTE DD_CALC_INSERT_AIRCON_QUATER_STMT;
		END IF;		
		IF REC_VER_POSITION<=0 THEN
			LEAVE AIRCON_LOOP;
		END IF;
	END LOOP;
			IF EXISTS(SELECT CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=4 AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID)) THEN
			IF DD_RECVER_FLAG IS NULL THEN
			SET AIR_AMOUNT = (SELECT MAX(CFD.CFD_AMOUNT) FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=4 AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID));
			SET REC_VER= (SELECT CED_REC_VER FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=4 AND CFD_AMOUNT=AIR_AMOUNT AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID) ORDER BY CFD_AMOUNT DESC LIMIT 1);
			SET @DD_CALC_INSERT_AIRAMT=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDAIRCON) VALUES(4,',REC_VER,',',AIR_AMOUNT,')'));
			ELSE 
			IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=REC_VER AND CFD.CPP_ID=4) THEN
		    SET @DD_CALC_INSERT_AIRAMT=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDAIRCON) VALUES(4,',REC_VER,',(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=',DD_CUSTOMER_ID ,' AND CFD.CED_REC_VER=',REC_VER,' AND CFD.CPP_ID=4))'));
			END IF;
			END IF;
	  				IF @DD_CALC_INSERT_AIRAMT IS NOT NULL THEN
					PREPARE DD_CALC_INSERT_AIRAMT_STMT FROM @DD_CALC_INSERT_AIRAMT;
					EXECUTE DD_CALC_INSERT_AIRAMT_STMT;
					END IF;
			END IF;
			IF DD_RECVER_FLAG IS NULL THEN			
					SET @DD_CALC_INSERT_SUMQUATER=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDSUMOFQUATER,DDQUATERTOTAL,DDPERQUATER) 			
					SELECT SUM(DDQUATERS),SUM(DDAIRCON),DDAIRCONQ FROM ',DD_CALC_TEMP_TBLNAME ,' WHERE DDAIRCONQ IS NOT NULL GROUP BY DDAIRCONQ'));		
					PREPARE DD_CALC_INSERT_SUMQUATER_STMT FROM @DD_CALC_INSERT_SUMQUATER;
					EXECUTE DD_CALC_INSERT_SUMQUATER_STMT;
			END IF;
		IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID  AND CFD.CPP_ID=8 AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID)) THEN
			IF DD_RECVER_FLAG IS NULL THEN
				SET CHKOUT_AMOUNT = (SELECT MAX(CFD.CFD_AMOUNT) FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=8 AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID));
				SET REC_VER=(SELECT CED_REC_VER FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=8 AND CFD_AMOUNT=CHKOUT_AMOUNT AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID) ORDER BY CFD_AMOUNT DESC LIMIT 1);
				SET @DD_CALC_INSERT_DDCHECKOUTCLEAN=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDCHECKOUTCLEAN) VALUES(8,',REC_VER,',',CHKOUT_AMOUNT,')'));
				ELSE 
				IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=REC_VER AND CFD.CPP_ID=8) THEN
				SET @DD_CALC_INSERT_DDCHECKOUTCLEAN=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDCHECKOUTCLEAN) VALUES(8,',REC_VER,',(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=',DD_CUSTOMER_ID ,' AND CFD.CED_REC_VER=',REC_VER,' AND CFD.CPP_ID=8))'));
				END IF;
			END IF;
			IF @DD_CALC_INSERT_DDCHECKOUTCLEAN IS NOT NULL THEN
			PREPARE DD_CALC_INSERT_DDCHECKOUTCLEAN_STMT FROM @DD_CALC_INSERT_DDCHECKOUTCLEAN;
			EXECUTE DD_CALC_INSERT_DDCHECKOUTCLEAN_STMT;
			END IF;
		END IF;		
		IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=6 AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID)) THEN
				IF DD_RECVER_FLAG IS NULL THEN
				SET DRY_AMOUNT = (SELECT MAX(CFD.CFD_AMOUNT) FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=6 AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID));
				SET REC_VER=(SELECT CED_REC_VER FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CPP_ID=6 AND CFD_AMOUNT=DRY_AMOUNT AND CED_REC_VER IN (SELECT CED_REC_VER FROM CUSTOMER_ENTRY_DETAILS WHERE UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=DD_UNIT_NO) AND CUSTOMER_ID=DD_CUSTOMER_ID) ORDER BY CFD_AMOUNT DESC LIMIT 1);
				SET @DD_CALC_INSERT_DDDRYCLEAN=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDDRYCLEAN) VALUES(6,',REC_VER,',',DRY_AMOUNT,')'));
				ELSE 
				IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=REC_VER AND CFD.CPP_ID=6) THEN
				SET @DD_CALC_INSERT_DDDRYCLEAN=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCPPID,DDRECVER,DDDRYCLEAN) VALUES(6,',REC_VER,',(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=',DD_CUSTOMER_ID ,' AND CFD.CED_REC_VER=',REC_VER,' AND CFD.CPP_ID=6))'));
				END IF;
				END IF;
			IF @DD_CALC_INSERT_DDDRYCLEAN IS NOT NULL THEN
			PREPARE DD_CALC_INSERT_DDDRYCLEAN_STMT FROM @DD_CALC_INSERT_DDDRYCLEAN;
			EXECUTE DD_CALC_INSERT_DDDRYCLEAN_STMT;
			END IF;
		END IF;
	IF EXISTS(SELECT DDC_DATA FROM DEPOSIT_DEDUCTION_CONFIGURATION WHERE CGN_ID=42) THEN
			SET @DD_CALC_INSERT_DDCHARGE=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,' (DDCHARGETYPE,DDCHARGE,DDRECVER) SELECT DEPOSIT_DEDUCTION_CONFIGURATION.DDC_SUB_DATA,CAST( DEPOSIT_DEDUCTION_CONFIGURATION.DDC_DATA AS DECIMAL(7,2)),',REC_VER,' FROM DEPOSIT_DEDUCTION_CONFIGURATION WHERE CGN_ID=42'));
			PREPARE DD_CALC_INSERT_DDCHARGE_STMT FROM @DD_CALC_INSERT_DDCHARGE;
			EXECUTE DD_CALC_INSERT_DDCHARGE_STMT;
	END IF;		
	IF DD_RECVER_FLAG IS NOT NULL THEN
		SET TEMP_REC_VER = DD_REC_VER;
		SET REC_VER_LENGTH=1;
		TOTAL_LOOP:  LOOP
			SET REC_VER_POSITION=(SELECT LOCATE(',', TEMP_REC_VER,REC_VER_LENGTH));
			IF REC_VER_POSITION<=0 THEN
				SET REC_VER=TEMP_REC_VER;
			ELSE
				SELECT SUBSTRING(TEMP_REC_VER,REC_VER_LENGTH,REC_VER_POSITION-1) INTO REC_VER;
				SET TEMP_REC_VER=(SELECT SUBSTRING(TEMP_REC_VER,REC_VER_POSITION+1));
			END IF;
			SET @DD_CARDAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDCARDAMOUNT) INTO @DD_CARDAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDCARDAMOUNT IS NOT NULL'));
			PREPARE DD_CARDAMOUNT_STMT FROM @DD_CARDAMOUNT;
			EXECUTE DD_CARDAMOUNT_STMT;
			SET DDTTLCARDAMOUNT=@DD_CARDAMOUNT_VAL; 
			SET @DD_ELECAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDEEDIVAMOUNT) INTO @DD_ELECAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDEEDIVAMOUNT IS NOT NULL'));
			PREPARE DD_ELECAMOUNT_STMT FROM @DD_ELECAMOUNT;
			EXECUTE DD_ELECAMOUNT_STMT;
			SET DDTTLEEDIVAMOUNT=@DD_ELECAMOUNT_VAL; 
			IF DDTTLCARDAMOUNT IS NULL OR DDTTLCARDAMOUNT='' THEN
				SET DDTTLCARDAMOUNT=0;
			END IF;
			IF DDTTLEEDIVAMOUNT IS NULL OR DDTTLEEDIVAMOUNT='' THEN
				SET DDTTLEEDIVAMOUNT=0;
			END IF;
			SET SUBTOTAL_ONE = (DDTTLCARDAMOUNT+DDTTLEEDIVAMOUNT);
			SET @DD_AIRCON= (SELECT CONCAT('SELECT SUM(TDC.DDAIRCON) INTO @DD_AIRCON_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDAIRCON IS NOT NULL'));
			PREPARE DD_AIRCON_STMT FROM @DD_AIRCON;
			EXECUTE DD_AIRCON_STMT;
			SET DDTTLAIRCON=@DD_AIRCON_VAL; 
			IF DDTTLAIRCON IS NULL OR DDTTLAIRCON='' THEN
				SET DDTTLAIRCON=0;
			END IF;
			SET SUBTOTAL_TWO = DDTTLAIRCON;
			SET @DD_UNITDIVAMT= (SELECT CONCAT('SELECT SUM(TDC.DDUNITDIVAMOUNT) INTO @DD_UNITDIVAMT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDUNITDIVAMOUNT IS NOT NULL'));
			PREPARE DD_UNITDIVAMT_STMT FROM @DD_UNITDIVAMT;
			EXECUTE DD_UNITDIVAMT_STMT;
			SET DDTTLUNITDIVAMOUNT=@DD_UNITDIVAMT_VAL; 
		    SET @DD_CHECKOUT_CLEAN= (SELECT CONCAT('SELECT SUM(TDC.DDCHECKOUTCLEAN) INTO @DD_CHECKOUT_CLEAN_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDCHECKOUTCLEAN IS NOT NULL'));
			PREPARE DD_CHECKOUT_CLEAN_STMT FROM @DD_CHECKOUT_CLEAN;
			EXECUTE DD_CHECKOUT_CLEAN_STMT;
			SET DDTTLCHECKOUTCLEAN=@DD_CHECKOUT_CLEAN_VAL; 
			SET @DD_TTLDRYCLEAN= (SELECT CONCAT('SELECT SUM(TDC.DDDRYCLEAN) INTO @DD_TTLDRYCLEAN_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDDRYCLEAN IS NOT NULL'));
			PREPARE DD_TTLDRYCLEAN_STMT FROM @DD_TTLDRYCLEAN;
			EXECUTE DD_TTLDRYCLEAN_STMT;
			SET DDTTLDRYCLEAN=@DD_TTLDRYCLEAN_VAL;
			SET @DD_TTLDDCHARGE= (SELECT CONCAT('SELECT SUM(TDC.DDCHARGE) INTO @DD_TTLDDCHARGE_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDCHARGE IS NOT NULL'));
			PREPARE DD_TTLDDCHARGE_STMT FROM @DD_TTLDDCHARGE;
			EXECUTE DD_TTLDDCHARGE_STMT;
			SET DDTTLDDCHARGE=@DD_TTLDDCHARGE_VAL;
			IF DDTTLUNITDIVAMOUNT IS NULL OR DDTTLUNITDIVAMOUNT='' THEN
				SET DDTTLUNITDIVAMOUNT=0;
			END IF;
			IF DDTTLCHECKOUTCLEAN IS NULL OR DDTTLCHECKOUTCLEAN='' THEN
				SET DDTTLCHECKOUTCLEAN=0;
			END IF;
			IF DDTTLDRYCLEAN IS NULL OR DDTTLDRYCLEAN='' THEN
				SET DDTTLDRYCLEAN=0;
			END IF;
			IF DDTTLDDCHARGE IS NULL OR DDTTLDDCHARGE='' THEN
				SET DDTTLDDCHARGE=0;
			END IF;
			SET SUBTOTAL_THREE = (DDTTLUNITDIVAMOUNT+DDTTLCHECKOUTCLEAN+DDTTLDRYCLEAN+DDTTLDDCHARGE);
			SET TOTAL_DD = (SUBTOTAL_ONE+SUBTOTAL_TWO+SUBTOTAL_THREE);
			SET @DD_TTLDEPOAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDDEPOAMOUNT) INTO @DD_TTLDEPOAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDRECVER=',REC_VER,' AND TDC.DDDEPOAMOUNT IS NOT NULL'));
			PREPARE DD_TTLDEPOAMOUNT_STMT FROM @DD_TTLDEPOAMOUNT;
			EXECUTE DD_TTLDEPOAMOUNT_STMT;
			SET DDTTLDEPOAMOUNT=@DD_TTLDEPOAMOUNT_VAL;
			IF DDTTLDEPOAMOUNT IS NULL OR DDTTLDEPOAMOUNT='' THEN
				SET DDTTLDEPOAMOUNT=0;
			END IF;
			SET TOTAL_REFUND = (DDTTLDEPOAMOUNT-TOTAL_DD);
			SET @DD_CALC_INSERT_REFUND=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,'(DDRECVER,DDSUBTOTAL_ONE,DDSUBTOTAL_TWO,DDSUBTOTAL_THREE,DDTOTAL_DD,DDTOTAL_REFUND) VALUES (',REC_VER,',',SUBTOTAL_ONE,',',SUBTOTAL_TWO,',',SUBTOTAL_THREE,',',TOTAL_DD,',',TOTAL_REFUND,')'));
			PREPARE DD_CALC_INSERT_REFUND_STMT FROM @DD_CALC_INSERT_REFUND;
			EXECUTE DD_CALC_INSERT_REFUND_STMT;
			IF REC_VER_POSITION<=0 THEN
				LEAVE TOTAL_LOOP;
			END IF;
		END LOOP;
	ELSE
			SET @DD_TTLCARDAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDCARDAMOUNT) INTO @DD_TTLCARDAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDCARDAMOUNT IS NOT NULL'));
			PREPARE DD_TTLCARDAMOUNT_STMT FROM @DD_TTLCARDAMOUNT;
			EXECUTE DD_TTLCARDAMOUNT_STMT;
			SET DDTTLCARDAMOUNT=@DD_TTLCARDAMOUNT_VAL;
		    SET @DD_TTLEEDIVAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDEEDIVAMOUNT) INTO @DD_TTLEEDIVAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDEEDIVAMOUNT IS NOT NULL'));
			PREPARE DD_TTLEEDIVAMOUNT_STMT FROM @DD_TTLEEDIVAMOUNT;
			EXECUTE DD_TTLEEDIVAMOUNT_STMT;
			SET DDTTLEEDIVAMOUNT=@DD_TTLEEDIVAMOUNT_VAL;
		IF DDTTLCARDAMOUNT IS NULL OR DDTTLCARDAMOUNT='' THEN
			SET DDTTLCARDAMOUNT=0;
		END IF;
		IF DDTTLEEDIVAMOUNT IS NULL OR DDTTLEEDIVAMOUNT='' THEN
			SET DDTTLEEDIVAMOUNT=0;
		END IF;
		SET SUBTOTAL_ONE = (DDTTLCARDAMOUNT+DDTTLEEDIVAMOUNT);
			SET @DD_TTLAIRCON= (SELECT CONCAT('SELECT SUM(TDC.DDAIRCON) INTO @DDTTLAIRCON_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDAIRCON IS NOT NULL'));
			PREPARE DD_TTLAIRCON_STMT FROM @DD_TTLAIRCON;
			EXECUTE DD_TTLAIRCON_STMT;
			SET DDTTLAIRCON=@DDTTLAIRCON_VAL;
		IF DDTTLAIRCON IS NULL OR DDTTLAIRCON='' THEN
			SET DDTTLAIRCON=0;
		END IF;
		SET SUBTOTAL_TWO = DDTTLAIRCON;
			SET @DD_TTLUNITDIVAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDUNITDIVAMOUNT) INTO @DD_TTLUNITDIVAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDUNITDIVAMOUNT IS NOT NULL'));
			PREPARE DD_TTLUNITDIVAMOUNT_STMT FROM @DD_TTLUNITDIVAMOUNT;
			EXECUTE DD_TTLUNITDIVAMOUNT_STMT;
			SET DDTTLUNITDIVAMOUNT=@DD_TTLUNITDIVAMOUNT_VAL;
			SET @DD_TTLCHECKOUTCLEAN= (SELECT CONCAT('SELECT SUM(TDC.DDCHECKOUTCLEAN) INTO @DD_TTLCHECKOUTCLEAN_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDCHECKOUTCLEAN IS NOT NULL'));
			PREPARE DD_TTLCHECKOUTCLEAN_STMT FROM @DD_TTLCHECKOUTCLEAN;
			EXECUTE DD_TTLCHECKOUTCLEAN_STMT;
			SET DDTTLCHECKOUTCLEAN=@DD_TTLCHECKOUTCLEAN_VAL;
			SET @DD_TTLDRYCLEAN= (SELECT CONCAT('SELECT SUM(TDC.DDDRYCLEAN) INTO @DD_TTLDRYCLEAN_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDDRYCLEAN IS NOT NULL'));
			PREPARE DD_TTLDRYCLEAN_STMT FROM @DD_TTLDRYCLEAN;
			EXECUTE DD_TTLDRYCLEAN_STMT;
			SET DDTTLDRYCLEAN=@DD_TTLDRYCLEAN_VAL;
			SET @DD_TTLDDCHARGE= (SELECT CONCAT('SELECT SUM(TDC.DDCHARGE) INTO @DD_TTLDDCHARGE_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDCHARGE IS NOT NULL'));
			PREPARE DD_TTLDDCHARGE_STMT FROM @DD_TTLDDCHARGE;
			EXECUTE DD_TTLDDCHARGE_STMT;
			SET DDTTLDDCHARGE=@DD_TTLDDCHARGE_VAL;
		IF DDTTLUNITDIVAMOUNT IS NULL OR DDTTLUNITDIVAMOUNT='' THEN
			SET DDTTLUNITDIVAMOUNT=0;
		END IF;
		IF DDTTLCHECKOUTCLEAN IS NULL OR DDTTLCHECKOUTCLEAN='' THEN
			SET DDTTLCHECKOUTCLEAN=0;
		END IF;
		IF DDTTLDRYCLEAN IS NULL OR DDTTLDRYCLEAN='' THEN
			SET DDTTLDRYCLEAN=0;
		END IF;
		IF DDTTLDDCHARGE IS NULL OR DDTTLDDCHARGE='' THEN
			SET DDTTLDDCHARGE=0;
		END IF;
		SET SUBTOTAL_THREE = (DDTTLUNITDIVAMOUNT+DDTTLCHECKOUTCLEAN+DDTTLDRYCLEAN+DDTTLDDCHARGE);
		SET TOTAL_DD = (SUBTOTAL_ONE+SUBTOTAL_TWO+SUBTOTAL_THREE);
			SET @DD_TTLDEPOAMOUNT= (SELECT CONCAT('SELECT SUM(TDC.DDDEPOAMOUNT) INTO @DD_TTLDEPOAMOUNT_VAL FROM ',DD_CALC_TEMP_TBLNAME ,' TDC WHERE TDC.DDDEPOAMOUNT IS NOT NULL'));
			PREPARE DD_TTLDEPOAMOUNT_STMT FROM @DD_TTLDEPOAMOUNT;
			EXECUTE DD_TTLDEPOAMOUNT_STMT;
			SET DDTTLDEPOAMOUNT=@DD_TTLDEPOAMOUNT_VAL;
		IF DDTTLDEPOAMOUNT IS NULL OR DDTTLDEPOAMOUNT='' THEN
			SET DDTTLDEPOAMOUNT=0;
		END IF;
		SET TOTAL_REFUND = (DDTTLDEPOAMOUNT-TOTAL_DD);
			SET @DD_CALC_INSERT_TOTAL=(SELECT CONCAT('INSERT INTO ',DD_CALC_TEMP_TBLNAME ,'(DDSUBTOTAL_ONE,DDSUBTOTAL_TWO,DDSUBTOTAL_THREE,DDTOTAL_DD,DDTOTAL_REFUND) VALUES (',SUBTOTAL_ONE,',',SUBTOTAL_TWO,',',SUBTOTAL_THREE,',',TOTAL_DD,',',TOTAL_REFUND,')'));
			PREPARE DD_CALC_INSERT_TOTAL_STMT FROM @DD_CALC_INSERT_TOTAL;
			EXECUTE DD_CALC_INSERT_TOTAL_STMT;
	END IF;
END IF;
COMMIT; 
END;