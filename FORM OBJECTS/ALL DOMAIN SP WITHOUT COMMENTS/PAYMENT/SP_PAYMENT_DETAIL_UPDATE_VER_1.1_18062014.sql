DROP PROCEDURE IF EXISTS SP_PAYMENT_DETAIL_UPDATE;
CREATE PROCEDURE SP_PAYMENT_DETAIL_UPDATE(IN INPUT_PDID INTEGER,IN UNITNO SMALLINT,
IN CUSTOMERID INTEGER,IN PAYMENTTYPE VARCHAR(50),IN RECVERSION INTEGER,AMOUNT DECIMAL(7,2),FORPERIOD VARCHAR(50),
IN PAIDDATE DATE,IN HIGHLIGHTFLAG CHAR(1),IN COMMENTS TEXT,IN USERSTAMP VARCHAR(50), OUT OUTPUT_FINAL_MESSAGE TEXT)
BEGIN 
DECLARE FOR_PERIOD_YEAR VARCHAR(20);
DECLARE FOR_PERIOD_MONTH VARCHAR(20);
DECLARE FOR_PERIOD_MONTHNO INTEGER;
DECLARE STARTDATE DATE;
DECLARE ENDDATE DATE;
DECLARE PRE_DATE DATE;
DECLARE FOR_PERIOD_DATE DATE;
DECLARE MONTH_LENGTH INTEGER;
DECLARE STARTDATE_MONTH INTEGER;
DECLARE STARTDATE_LENGTH INTEGER;
DECLARE PRETERMINATEDATE DATE;
DECLARE FLAG INTEGER;
DECLARE MESSAGE TEXT DEFAULT '';
DECLARE FINAL_MESSAGE TEXT DEFAULT '';
DECLARE USERSTAMP_ID INTEGER(2);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
END;
START TRANSACTION;
SET FOR_PERIOD_YEAR=(SELECT SUBSTRING_INDEX(FORPERIOD,'-',-1));
SET FOR_PERIOD_MONTH=(SELECT SUBSTRING(FORPERIOD,1,3));
SET FOR_PERIOD_MONTHNO=(select month(str_to_date(FOR_PERIOD_MONTH,'%b')));
SET MONTH_LENGTH=(SELECT LENGTH(FOR_PERIOD_MONTHNO));
SET STARTDATE_MONTH=(SELECT MONTH(CLP_STARTDATE) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL);
SET STARTDATE_LENGTH=(SELECT LENGTH(STARTDATE_MONTH));
SET FOR_PERIOD_DATE=(select concat((select SUBSTRING_INDEX(FORPERIOD, '-', -1)),'-',FOR_PERIOD_MONTHNO,'-','01'));
IF  (STARTDATE_LENGTH=1) THEN
	SET STARTDATE=(SELECT CONCAT((SELECT YEAR(CLP_STARTDATE) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
	CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL),'-','0',(SELECT MONTH(CLP_STARTDATE) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
	CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL),'-','01'));
ELSE
	SET STARTDATE=(SELECT CONCAT((SELECT YEAR(CLP_STARTDATE) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
	CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL),'-',(SELECT MONTH(CLP_STARTDATE) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
	CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL),'-','01'));
END IF;
SET ENDDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL);
SET PRETERMINATEDATE=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL);
IF PRETERMINATEDATE IS NOT NULL THEN
SET ENDDATE=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL);
ELSE
SET ENDDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND 
CED_REC_VER=RECVERSION AND CLP_GUEST_CARD IS NULL);
END IF;
SET FLAG=0;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID = (SELECT @ULDID);  
  SELECT PD.PD_FOR_PERIOD,PD.CED_REC_VER,PP.PP_DATA INTO @FOR_PERIOD,@REC_VER,@TYPE FROM PAYMENT_DETAILS PD,PAYMENT_PROFILE PP WHERE PP.PP_ID = PD.PP_ID AND PD.PD_ID = INPUT_PDID; 
  IF (@FOR_PERIOD != FOR_PERIOD_DATE OR @REC_VER != RECVERSION OR @TYPE != PAYMENTTYPE) THEN  
	IF EXISTS(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND CED_REC_VER=RECVERSION AND 
	IF(CLP_PRETERMINATE_DATE IS NOT NULL,CLP_STARTDATE>CLP_PRETERMINATE_DATE ,CLP_STARTDATE>CLP_ENDDATE) AND (CLP_GUEST_CARD=' 'OR CLP_GUEST_CARD IS NULL))THEN
		SET MESSAGE = CONCAT(MESSAGE,'CANNOT PAY FOR THIS REVER.');
		SET FLAG=1;
	END IF;    
		IF FOR_PERIOD_DATE NOT BETWEEN STARTDATE AND ENDDATE THEN 		
			SET MESSAGE = CONCAT(MESSAGE,'FOR_PERIOD SHOULD BETWEEN STARTDATE AND ENDDATE.');
			SET FLAG=1;
		END IF;
		IF (PAYMENTTYPE='PAYMENT' OR PAYMENTTYPE='CLEANING FEE') THEN
			IF EXISTS(SELECT * FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND CED_REC_VER=RECVERSION AND 
			PD_FOR_PERIOD=FOR_PERIOD_DATE AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND	UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
				SET MESSAGE = CONCAT(MESSAGE,'ALREADY PAID FOR THIS MONTH.');
				SET FLAG=1;
			END IF;
		END IF;
		IF (PAYMENTTYPE='DEPOSIT REFUND')THEN			
			IF (FOR_PERIOD_DATE!=(SELECT ADDDATE(LAST_DAY(SUBDATE(ENDDATE, INTERVAL 1 MONTH)), 1))) THEN
				SET MESSAGE = CONCAT(MESSAGE,'CANNOT PAY DEPOSIT REFUND FOR THIS MONTH.');
			SET FLAG=1;
			END IF;
			IF EXISTS(SELECT * FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND CED_REC_VER=RECVERSION AND 
			PD_FOR_PERIOD=(SELECT ADDDATE(LAST_DAY(SUBDATE(ENDDATE, INTERVAL 1 MONTH)), 1)) AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND 
			UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
				SET MESSAGE = CONCAT(MESSAGE,'ALREADY PAID DEPOSIT REFUND FOR THIS CUSTOMER.');
			SET FLAG=1;
			END IF;
		END IF;
		IF (PAYMENTTYPE='DEPOSIT')THEN
			IF (FOR_PERIOD_DATE!=STARTDATE)THEN
				SET MESSAGE = CONCAT(MESSAGE,'CANNOT PAY DEPOSIT FOR THIS MONTH.');
			  SET FLAG=1;
			END IF;      
			IF EXISTS(SELECT * FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND CED_REC_VER=RECVERSION AND 
			    PD_FOR_PERIOD=STARTDATE AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
				SET MESSAGE = CONCAT(MESSAGE,'ALREADY PAID DEPOSIT FOR THIS CUSTOMER.');
			  SET FLAG=1;
			END IF;
		END IF;		
		IF (PAYMENTTYPE='PROCESSING FEE')THEN			
			IF (FOR_PERIOD_DATE!=STARTDATE)THEN
				SET MESSAGE = CONCAT(MESSAGE,'CANNOT PAY PROCESSING FEE FOR THIS MONTH.');
			SET FLAG=1;
			END IF;
			IF EXISTS(SELECT * FROM PAYMENT_DETAILS WHERE CUSTOMER_ID=CUSTOMERID AND CED_REC_VER=RECVERSION AND 
			PD_FOR_PERIOD=STARTDATE AND PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE) AND 
			UNIT_ID=(SELECT UNIT_ID FROM UNIT WHERE UNIT_NO=UNITNO))THEN
				SET MESSAGE = CONCAT(MESSAGE,'ALREADY PAID PROCESSING FEE FOR THIS CUSTOMER.');
			SET FLAG=1;
			END IF;
		END IF;
	END IF;	
 if HIGHLIGHTFLAG =' ' then set HIGHLIGHTFLAG = null; end if;		
	IF (FLAG=0) THEN
		IF(UNITNO IS NOT NULL AND CUSTOMERID IS NOT NULL AND PAYMENTTYPE IS NOT NULL AND AMOUNT IS NOT NULL AND FORPERIOD IS NOT NULL AND PAIDDATE IS NOT NULL AND USERSTAMP IS NOT NULL) THEN		
			UPDATE PAYMENT_DETAILS SET PP_ID=(SELECT PP_ID FROM PAYMENT_PROFILE WHERE PP_DATA=PAYMENTTYPE),CED_REC_VER=RECVERSION,PD_AMOUNT=AMOUNT,
			PD_FOR_PERIOD=FOR_PERIOD_DATE,PD_PAID_DATE= PAIDDATE,PD_HIGHLIGHT_FLAG=HIGHLIGHTFLAG,PD_COMMENTS=COMMENTS,ULD_ID=USERSTAMP_ID WHERE PD_ID=INPUT_PDID;
		END IF;
  ELSE
    SET FINAL_MESSAGE = CONCAT(FINAL_MESSAGE,'UNIT NO= ',UNITNO,', CUSTOMER ID= ',CUSTOMERID,', PAYMENT TYPE= ',PAYMENTTYPE,', LEASE PERIOD= ',RECVERSION,', AMOUNT= ',AMOUNT,',FOR PERIOD= ',FORPERIOD,', PAID DATE=',PAIDDATE,', COMMENTS= ',IFNULL(COMMENTS,' '),'/ WARNING: ',MESSAGE);
  END IF;
SET OUTPUT_FINAL_MESSAGE = FINAL_MESSAGE;
COMMIT;
END;