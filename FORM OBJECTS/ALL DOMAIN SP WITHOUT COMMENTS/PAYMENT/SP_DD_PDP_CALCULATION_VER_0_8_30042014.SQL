DROP PROCEDURE IF EXISTS SP_DD_PDP_CALCULATION;
CREATE PROCEDURE SP_DD_PDP_CALCULATION(
	IN DD_CUSTOMER_ID INTEGER,
	IN DD_REC_VER INTEGER,
	IN TEMP_DD_CALCULATION TEXT)
BEGIN
DECLARE CTDSD DATE;
DECLARE CTDED DATE;
DECLARE CTDPTD DATE;
DECLARE SD_DAY INTEGER;
DECLARE SD_MONTH INTEGER;
DECLARE SD_YEAR INTEGER;
DECLARE ED_DAY INTEGER;
DECLARE ED_MONTH INTEGER;
DECLARE ED_YEAR INTEGER;
DECLARE TEMP_DATE TEXT;
DECLARE FOR_DATE DATE;
DECLARE DEPO_AMOUNT DECIMAL(7,2);
DECLARE DONE INT DEFAULT FALSE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
	ROLLBACK; 
END;
START TRANSACTION;
SET CTDSD=(SELECT CLP.CLP_STARTDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=DD_REC_VER);
SET CTDED=(SELECT CLP.CLP_ENDDATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=DD_REC_VER);
SET CTDPTD=(SELECT CLP.CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS AS CLP WHERE CLP.CUSTOMER_ID=DD_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND CLP.CED_REC_VER=DD_REC_VER);
IF CTDPTD IS NOT NULL THEN
	SET CTDED=CTDPTD;
END IF;
SET SD_DAY = 1;
SET SD_MONTH = (SELECT MONTH(CTDSD));
SET SD_YEAR = (SELECT YEAR(CTDSD));
SET ED_DAY = (SELECT DAY(CTDED));
SET ED_MONTH = (SELECT MONTH(CTDED));
SET ED_YEAR = (SELECT YEAR(CTDED));
RENTLOOP : WHILE (SD_YEAR<=ED_YEAR) DO
	SET TEMP_DATE= CONCAT(SD_DAY,',',SD_MONTH,',',SD_YEAR);
	SET FOR_DATE = (SELECT STR_TO_DATE(TEMP_DATE,'%d,%m,%Y'));
	IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=1) THEN
		IF NOT EXISTS(SELECT PD.PD_AMOUNT FROM PAYMENT_DETAILS PD WHERE PD.CUSTOMER_ID=DD_CUSTOMER_ID AND PD.CED_REC_VER=DD_REC_VER AND PD.PD_FOR_PERIOD=FOR_DATE AND PD.PP_ID=1) THEN
					  SET @DD_CALC_INSERT_DEPOSITPAYMENT=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION,'(DDCPPID,DDRECVER,DDPAYMENTUNPAIDDATE) VALUES(1,',DD_REC_VER,',(SELECT DATE_FORMAT(','"',FOR_DATE,'"',',"%b - %Y")))'));
                      PREPARE DD_CALC_INSERT_DEPOSITPAYMENT_STMT FROM @DD_CALC_INSERT_DEPOSITPAYMENT;
                      EXECUTE DD_CALC_INSERT_DEPOSITPAYMENT_STMT;			
		END IF;
	END IF;
	IF SD_YEAR=ED_YEAR AND SD_MONTH=ED_MONTH THEN
		LEAVE RENTLOOP;
	END IF;
	IF SD_MONTH=12 THEN
		SET SD_MONTH=1;
		SET SD_YEAR=SD_YEAR+1;
	ELSE
		SET SD_DAY=1;
		SET SD_MONTH=SD_MONTH+1;
	END IF;
END WHILE;
SET SD_DAY = 1;
SET SD_MONTH = (SELECT MONTH(CTDSD));
SET SD_YEAR = (SELECT YEAR(CTDSD));
SET TEMP_DATE= CONCAT(SD_DAY,',',SD_MONTH,',',SD_YEAR);
SET FOR_DATE = (SELECT STR_TO_DATE(TEMP_DATE,'%d,%m,%Y'));
IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=2) THEN
	SET DEPO_AMOUNT = (SELECT PD.PD_AMOUNT FROM PAYMENT_DETAILS PD WHERE PD.CUSTOMER_ID=DD_CUSTOMER_ID AND PD.CED_REC_VER=DD_REC_VER AND PD.PD_FOR_PERIOD=FOR_DATE AND PD.PP_ID=2);
	IF NOT EXISTS(SELECT PD.PD_AMOUNT FROM PAYMENT_DETAILS PD WHERE PD.CUSTOMER_ID=DD_CUSTOMER_ID AND PD.CED_REC_VER=DD_REC_VER AND PD.PD_FOR_PERIOD=FOR_DATE AND PD.PP_ID=2) THEN
			SET @DD_CALC_INSERT_DEPOSITPAID=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDCPPID,DDRECVER,DDDEPOAMOUNT,DDDEPOUNPAID) VALUES(2,',DD_REC_VER,',0,"UNPAID")'));
			PREPARE DD_CALC_INSERT_DEPOSITPAID_STMT FROM @DD_CALC_INSERT_DEPOSITPAID;
			EXECUTE DD_CALC_INSERT_DEPOSITPAID_STMT;
	ELSE
			SET @DD_CALC_INSERT_DEPOSITPAID=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDCPPID,DDRECVER,DDDEPOAMOUNT,DDDEPOUNPAID) VALUES(2,',DD_REC_VER,',',DEPO_AMOUNT,',NULL)'));
			PREPARE DD_CALC_INSERT_DEPOSITPAID_STMT FROM @DD_CALC_INSERT_DEPOSITPAID;
			EXECUTE DD_CALC_INSERT_DEPOSITPAID_STMT;
	END IF;
ELSE
			SET @DD_CALC_INSERT_DEPOSITPAID=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDCPPID,DDRECVER,DDDEPOAMOUNT,DDDEPOUNPAID) VALUES(2,',DD_REC_VER,',0,NULL)'));
			PREPARE DD_CALC_INSERT_DEPOSITPAID_STMT FROM @DD_CALC_INSERT_DEPOSITPAID;
			EXECUTE DD_CALC_INSERT_DEPOSITPAID_STMT;
END IF;
IF EXISTS(SELECT CFD.CFD_AMOUNT FROM CUSTOMER_FEE_DETAILS CFD WHERE CFD.CUSTOMER_ID=DD_CUSTOMER_ID AND CFD.CED_REC_VER=DD_REC_VER AND CFD.CPP_ID=3) THEN
	IF (SELECT CED.CED_PROCESSING_WAIVED FROM CUSTOMER_ENTRY_DETAILS CED WHERE CED.CUSTOMER_ID=DD_CUSTOMER_ID AND CED.CED_REC_VER=DD_REC_VER) IS NULL THEN
		IF NOT EXISTS(SELECT PD.PD_AMOUNT FROM PAYMENT_DETAILS PD WHERE PD.CUSTOMER_ID=DD_CUSTOMER_ID AND PD.CED_REC_VER=DD_REC_VER AND PD.PD_FOR_PERIOD=FOR_DATE AND PD.PP_ID=3) THEN
			SET @DD_CALC_INSERT_PROCESSINGPAID=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDCPPID,DDRECVER,DDPROCUNPAID) VALUES(3,',DD_REC_VER,',"UNPAID")'));
			PREPARE DD_CALC_INSERT_PROCESSINGPAID_STMT FROM @DD_CALC_INSERT_PROCESSINGPAID;
			EXECUTE DD_CALC_INSERT_PROCESSINGPAID_STMT;
		ELSE		
			SET @DD_CALC_INSERT_PROCESSINGPAID=(SELECT CONCAT('INSERT INTO ',TEMP_DD_CALCULATION ,'(DDCPPID,DDRECVER,DDPROCUNPAID) VALUES(3,',DD_REC_VER,',NULL)'));
			PREPARE DD_CALC_INSERT_PROCESSINGPAID_STMT FROM @DD_CALC_INSERT_PROCESSINGPAID;
			EXECUTE DD_CALC_INSERT_PROCESSINGPAID_STMT;
		END IF;
	END IF;
END IF;
COMMIT;
END;