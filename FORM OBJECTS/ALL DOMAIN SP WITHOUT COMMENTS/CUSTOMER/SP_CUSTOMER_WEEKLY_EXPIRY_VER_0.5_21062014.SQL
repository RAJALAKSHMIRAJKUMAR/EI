DROP PROCEDURE IF EXISTS SP_CUSTOMER_WEEKLY_EXPIRY;
CREATE PROCEDURE SP_CUSTOMER_WEEKLY_EXPIRY(IN WEEK INTEGER,IN USERSTAMP VARCHAR(50),OUT CUSTOMER_WEEKLY_EXPIRY_TEMPTBL TEXT)
BEGIN
DECLARE ENDDATE DATE;
DECLARE TEMP_WEEKLY_EXPIRY TEXT;
DECLARE USERSTAMP_ID INT;
DECLARE EXPIRY_FEE_TBLNAME TEXT;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK; 
IF EXPIRY_FEE_TBLNAME IS NOT NULL THEN
SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',EXPIRY_FEE_TBLNAME));
PREPARE DROPQUERYSTMT FROM @DROPQUERY;
EXECUTE DROPQUERYSTMT;
END IF;
DROP VIEW IF EXISTS EXPIRY_MAXRECVER;
END;
START TRANSACTION;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID=(SELECT @ULDID);
SET TEMP_WEEKLY_EXPIRY=(SELECT CONCAT('TEMP_CUSTOMER_WEEKLY_EXPIRY',SYSDATE()));
SET TEMP_WEEKLY_EXPIRY=(SELECT REPLACE(TEMP_WEEKLY_EXPIRY,' ',''));
SET TEMP_WEEKLY_EXPIRY=(SELECT REPLACE(TEMP_WEEKLY_EXPIRY,'-',''));
SET TEMP_WEEKLY_EXPIRY=(SELECT REPLACE(TEMP_WEEKLY_EXPIRY,':',''));
SET CUSTOMER_WEEKLY_EXPIRY_TEMPTBL=(SELECT CONCAT(TEMP_WEEKLY_EXPIRY,'_',USERSTAMP_ID)); 
SET ENDDATE=(SELECT DATE_ADD(CURDATE(), INTERVAL (WEEK*7)  day));
CALL SP_ALL_CUSTOMER_WEEKLY_EXPIRY_LIST_TEMP_FEE_DETAIL(USERSTAMP,@CUSTOMER_WEEKLY_EXPIRY_FEE_TEMPTBLNAME);
SET EXPIRY_FEE_TBLNAME=(SELECT @CUSTOMER_WEEKLY_EXPIRY_FEE_TEMPTBLNAME);
CREATE OR REPLACE VIEW EXPIRY_MAXRECVER AS SELECT C1.CUSTOMER_ID,MAX(C1.CED_REC_VER) AS REC_VER FROM CUSTOMER_LP_DETAILS C1 WHERE C1.CLP_GUEST_CARD IS NULL AND IF(C1.CLP_PRETERMINATE_DATE IS NOT NULL,C1.CLP_STARTDATE<C1.CLP_PRETERMINATE_DATE,C1.CLP_STARTDATE) GROUP BY C1.CUSTOMER_ID;
SET @CREATE_TEMP_CUSTOMER_WEEKLY_EXPIRY=(SELECT CONCAT('CREATE TABLE ',CUSTOMER_WEEKLY_EXPIRY_TEMPTBL,'(CUSTOMERFIRSTNAME VARCHAR(100),CUSTOMERLASTNAME VARCHAR(100),RECVER INTEGER,UNITNO INTEGER(4) UNSIGNED ZEROFILL,ENDDATE DATE,PRETERMINATEDATE DATE,PAYMENT INTEGER)'));
PREPARE CREATE_TEMP_CUSTOMER_WEEKLY_EXPIRY_STMT FROM @CREATE_TEMP_CUSTOMER_WEEKLY_EXPIRY;
EXECUTE CREATE_TEMP_CUSTOMER_WEEKLY_EXPIRY_STMT;
SET @INSERT_TEMP_CUSTOMER_WEEKLY_EXPIRY=(SELECT CONCAT('INSERT INTO ',CUSTOMER_WEEKLY_EXPIRY_TEMPTBL,' (CUSTOMERFIRSTNAME, CUSTOMERLASTNAME, RECVER, UNITNO, ENDDATE, PRETERMINATEDATE, PAYMENT) SELECT C3.CUSTOMER_FIRST_NAME,C3.CUSTOMER_LAST_NAME,CTD.CED_REC_VER,U.UNIT_NO,CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE,E1.CC_PAYMENT_AMOUNT FROM CUSTOMER_LP_DETAILS CTD,CUSTOMER_ENTRY_DETAILS CED,EXPIRY_MAXRECVER E,',EXPIRY_FEE_TBLNAME,' E1,UNIT U,CUSTOMER C3 WHERE CED.CUSTOMER_ID=CTD.CUSTOMER_ID AND CED.CED_REC_VER=CTD.CED_REC_VER AND CTD.CLP_GUEST_CARD IS NULL AND E.CUSTOMER_ID=CED.CUSTOMER_ID AND E.CUSTOMER_ID=CTD.CUSTOMER_ID AND E.REC_VER=CED.CED_REC_VER AND E.REC_VER=CTD.CED_REC_VER AND CTD.CLP_TERMINATE IS NULL AND CED.CED_CANCEL_DATE IS NULL AND E1.CUSTOMER_ID=CED.CUSTOMER_ID AND E1.CUSTOMER_ID=CTD.CUSTOMER_ID AND E1.CUSTOMER_VER=CED.CED_REC_VER AND E1.CUSTOMER_VER=CTD.CED_REC_VER AND E.REC_VER=E1.CUSTOMER_VER AND E.CUSTOMER_ID=E1.CUSTOMER_ID AND U.UNIT_ID=CED.UNIT_ID AND C3.CUSTOMER_ID=CTD.CUSTOMER_ID AND C3.CUSTOMER_ID=CED.CUSTOMER_ID AND E.CUSTOMER_ID=C3.CUSTOMER_ID AND E1.CUSTOMER_ID=C3.CUSTOMER_ID AND IF(CTD.CLP_PRETERMINATE_DATE IS NOT NULL,CTD.CLP_PRETERMINATE_DATE=','"',ENDDATE,'"', ',CTD.CLP_ENDDATE=','"',ENDDATE,'"', ') GROUP BY CTD.CUSTOMER_ID  ORDER BY U.UNIT_NO,C3.CUSTOMER_FIRST_NAME'));
PREPARE INSERT_TEMP_CUSTOMER_WEEKLY_EXPIRY_STMT FROM @INSERT_TEMP_CUSTOMER_WEEKLY_EXPIRY;
EXECUTE INSERT_TEMP_CUSTOMER_WEEKLY_EXPIRY_STMT;
DROP VIEW IF EXISTS EXPIRY_MAXRECVER;
SET @DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',EXPIRY_FEE_TBLNAME));
PREPARE DROPQUERYSTMT FROM @DROPQUERY;
EXECUTE DROPQUERYSTMT;
COMMIT;
END;