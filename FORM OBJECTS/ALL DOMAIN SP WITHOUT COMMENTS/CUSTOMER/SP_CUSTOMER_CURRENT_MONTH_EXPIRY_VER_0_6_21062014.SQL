DROP PROCEDURE IF EXISTS SP_CUSTOMER_CURRENT_MONTH_EXPIRY;
CREATE PROCEDURE SP_CUSTOMER_CURRENT_MONTH_EXPIRY(
IN USERSTAMP VARCHAR(50),
OUT CUSTOMER_CURRENT_MONTH_EXPIRY TEXT)
BEGIN
	DECLARE STARTDATE DATE;
	DECLARE ENDDATE DATE;
	DECLARE USERSTAMP_ID INTEGER;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL TEXT;
	DECLARE CURRENT_MONTH_EXPIRY_MAXRECVER TEXT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		ROLLBACK; 
		IF ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL IS NOT NULL THEN 
			SET @DROPQUERY = (SELECT CONCAT('DROP TABLE IF EXISTS ',ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL,''));
			PREPARE DROPQUERYSTMT FROM @DROPQUERY;
			EXECUTE DROPQUERYSTMT;
		END IF;
		IF(CURRENT_MONTH_EXPIRY_MAXRECVER IS NOT NULL)THEN
			SET @MAXRECVER_DROPQUERY = (SELECT CONCAT('DROP TABLE IF EXISTS ',CURRENT_MONTH_EXPIRY_MAXRECVER,''));
			PREPARE MAXRECVER_DROPQUERYSTMT FROM @MAXRECVER_DROPQUERY;
			EXECUTE MAXRECVER_DROPQUERYSTMT;
		END IF;
	END;
	START TRANSACTION;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	CALL SP_ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL(USERSTAMP,@CUSTOMER_SEARCH_FEE_TEMPTBLNAME);
	SET ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL = (SELECT @CUSTOMER_SEARCH_FEE_TEMPTBLNAME);
	SET STARTDATE=(SELECT ADDDATE(LAST_DAY(SUBDATE(CURDATE(), INTERVAL 1 MONTH)), 1));
	SET ENDDATE=(SELECT LAST_DAY(STARTDATE));
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));
	SET CURRENT_MONTH_EXPIRY_MAXRECVER=(SELECT CONCAT('TEMP_CURRENT_MONTH_EXPIRY_MAXRECVER','_',SYSDATEANDULDID));
	SET @MONTH_EXPIRY_MAXRECVER_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',CURRENT_MONTH_EXPIRY_MAXRECVER,'(CUSTOMER_ID INTEGER,REC_VER INTEGER)'));
	PREPARE MONTH_EXPIRY_MAXRECVER_CREATEQUERYSTMT FROM @MONTH_EXPIRY_MAXRECVER_CREATEQUERY;
	EXECUTE MONTH_EXPIRY_MAXRECVER_CREATEQUERYSTMT;
	SET @MAXRECVER_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',CURRENT_MONTH_EXPIRY_MAXRECVER,'(
	CUSTOMER_ID,REC_VER)SELECT CUSTOMER_ID,MAX(CED_REC_VER) FROM CUSTOMER_LP_DETAILS WHERE CLP_GUEST_CARD IS NULL AND IF(CLP_PRETERMINATE_DATE IS NOT NULL,CLP_STARTDATE<CLP_PRETERMINATE_DATE,CLP_STARTDATE) GROUP BY CUSTOMER_ID'));
	PREPARE MAXRECVER_INSERTQUERYSTMT FROM @MAXRECVER_INSERTQUERY;
	EXECUTE MAXRECVER_INSERTQUERYSTMT;
	SET CUSTOMER_CURRENT_MONTH_EXPIRY=(SELECT CONCAT('TEMP_CUSTOMER_CURRENT_MONTH_EXPIRY','_',SYSDATEANDULDID));
	SET @CURRENT_MONTH_EXPIRY_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',CUSTOMER_CURRENT_MONTH_EXPIRY,'(
	CUSTOMERID INTEGER,
	CUSTOMERFIRSTNAME VARCHAR(100),
	CUSTOMERLASTNAME VARCHAR(100),
	LEASEPERIOD INTEGER,
	UNITNO  SMALLINT(4) UNSIGNED ZEROFILL,
	STARTDATE DATE,
	ENDDATE DATE,
	PRETERMINATEDATE DATE,
	ROOMTYPE VARCHAR(30),
	EXTENSIONFLAG CHAR(1),
	RECHECKINGFLAG CHAR(1),
	PAYMENT INTEGER,
	DEPOSIT INTEGER,
	PROCESSINGFEE INTEGER,
	COMMENTS TEXT,
	ULD_ID INTEGER(2),
	EXPIRY_TIMESTAMP TIMESTAMP)'));
	PREPARE CURRENT_MONTH_EXPIRY_CREATEQUERYSTMT FROM @CURRENT_MONTH_EXPIRY_CREATEQUERY;
	EXECUTE CURRENT_MONTH_EXPIRY_CREATEQUERYSTMT;
	SET @CURRENT_MONTH_EXPIRY_INSERTQUERY = (SELECT CONCAT('INSERT INTO ',CUSTOMER_CURRENT_MONTH_EXPIRY,'(
	CUSTOMERID,CUSTOMERFIRSTNAME,CUSTOMERLASTNAME,LEASEPERIOD,UNITNO,STARTDATE,ENDDATE,PRETERMINATEDATE,ROOMTYPE,
	EXTENSIONFLAG,RECHECKINGFLAG,PAYMENT,DEPOSIT,PROCESSINGFEE,COMMENTS,ULD_ID,EXPIRY_TIMESTAMP)
	SELECT CTD.CUSTOMER_ID,C3.CUSTOMER_FIRST_NAME,C3.CUSTOMER_LAST_NAME,CTD.CED_REC_VER,U.UNIT_NO,CTD.CLP_STARTDATE,
	CTD.CLP_ENDDATE,CTD.CLP_PRETERMINATE_DATE,URTD.URTD_ROOM_TYPE,CED.CED_EXTENSION,CED.CED_RECHECKIN,E1.CC_PAYMENT_AMOUNT,
	E1.CC_DEPOSIT,E1.CC_PROCESSING_FEE,CPD.CPD_COMMENTS,CTD.ULD_ID,CTD.CLP_TIMESTAMP
	FROM CUSTOMER_LP_DETAILS CTD,CUSTOMER_ENTRY_DETAILS CED,',CURRENT_MONTH_EXPIRY_MAXRECVER,' E,
	',ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL,' E1,CUSTOMER_PERSONAL_DETAILS CPD,UNIT_ACCESS_STAMP_DETAILS UASD,UNIT_ROOM_TYPE_DETAILS URTD,UNIT U,CUSTOMER C3
	WHERE CED.CUSTOMER_ID=CTD.CUSTOMER_ID AND CED.CED_REC_VER=CTD.CED_REC_VER AND
	CTD.CLP_GUEST_CARD IS NULL AND E.CUSTOMER_ID=CED.CUSTOMER_ID AND E.CUSTOMER_ID=CTD.CUSTOMER_ID AND E.REC_VER=CED.CED_REC_VER AND 
	E.REC_VER=CTD.CED_REC_VER AND CTD.CLP_TERMINATE IS NULL AND CED.CED_CANCEL_DATE IS NULL 
	AND CPD.CUSTOMER_ID=CTD.CUSTOMER_ID AND CPD.CUSTOMER_ID=CED.CUSTOMER_ID AND E1.CUSTOMER_ID=CED.CUSTOMER_ID
	AND E1.CUSTOMER_ID=CTD.CUSTOMER_ID AND E1.CUSTOMER_VER=CED.CED_REC_VER AND E1.CUSTOMER_VER=CTD.CED_REC_VER AND E.REC_VER=E1.CUSTOMER_VER AND
	E.CUSTOMER_ID=E1.CUSTOMER_ID AND CED.UASD_ID=UASD.UASD_ID AND UASD.URTD_ID=URTD.URTD_ID AND U.UNIT_ID=CED.UNIT_ID AND C3.CUSTOMER_ID=CTD.CUSTOMER_ID AND C3.CUSTOMER_ID=CED.CUSTOMER_ID AND 
	E.CUSTOMER_ID=C3.CUSTOMER_ID AND E1.CUSTOMER_ID=C3.CUSTOMER_ID AND C3.CUSTOMER_ID=CPD.CUSTOMER_ID AND 
	IF(CTD.CLP_PRETERMINATE_DATE IS NOT NULL,CTD.CLP_PRETERMINATE_DATE>=','"',STARTDATE,'"',' AND CTD.CLP_PRETERMINATE_DATE<=','"',ENDDATE,'"',',CTD.CLP_ENDDATE>=','"',STARTDATE,'"',' AND CTD.CLP_ENDDATE<=','"',ENDDATE,'"',') 
	GROUP BY CTD.CUSTOMER_ID  ORDER BY U.UNIT_NO,C3.CUSTOMER_FIRST_NAME ASC'));
	PREPARE CURRENT_MONTH_EXPIRY_INSERTQUERYSTMT FROM @CURRENT_MONTH_EXPIRY_INSERTQUERY;
	EXECUTE CURRENT_MONTH_EXPIRY_INSERTQUERYSTMT;
	SET @MAXRECVER_DROPQUERY = (SELECT CONCAT('DROP TABLE IF EXISTS ',CURRENT_MONTH_EXPIRY_MAXRECVER,''));
	PREPARE MAXRECVER_DROPQUERYSTMT FROM @MAXRECVER_DROPQUERY;
	EXECUTE MAXRECVER_DROPQUERYSTMT;
	SET @DROPQUERY = (SELECT CONCAT('DROP TABLE IF EXISTS ',ALL_CUSTOMER_SEARCH_TEMP_FEE_DETAIL,''));
	PREPARE DROPQUERYSTMT FROM @DROPQUERY;
	EXECUTE DROPQUERYSTMT;
COMMIT;
END;