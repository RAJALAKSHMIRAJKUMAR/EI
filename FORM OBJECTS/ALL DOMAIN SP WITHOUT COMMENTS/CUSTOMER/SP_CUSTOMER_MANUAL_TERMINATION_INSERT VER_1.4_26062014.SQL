DROP PROCEDURE IF EXISTS SP_CUSTOMER_MANUAL_TERMINATION_INSERT;
CREATE PROCEDURE SP_CUSTOMER_MANUAL_TERMINATION_INSERT(
IN CT_CUSTOMER_ID INTEGER,
IN CT_REC_VER INTEGER,
IN CT_ACTIVE_REC_VER INTEGER,
IN CT_ACCESS_CARD TEXT,
IN CT_GUEST_CARD TEXT,
IN CT_NEW_PRETERMINATE TEXT,
IN CT_RECVER_LPQ TEXT,
IN CT_ED_STIME TIME,
IN CT_ED_ETIME TIME,
IN CT_COMMENTS TEXT,
IN CT_USERSTAMP VARCHAR(50),
OUT TERMRESULT_FLAG INTEGER)
BEGIN
	DECLARE TEMP_RECVER_LPQ TEXT;
	DECLARE REC_VERSION_LENGTH INTEGER;
	DECLARE REC_VERSION_POSITION INTEGER;
	DECLARE REC_VERSION INTEGER;
	DECLARE LEASE_PERIOD_POSITION INTEGER;
	DECLARE LEASE_PERIOD VARCHAR(30);
	DECLARE QUARTERS_POSITION INTEGER;
	DECLARE QUARTERS DECIMAL(5,2);
	DECLARE TEMP_QUATER VARCHAR(10);
	DECLARE TICK_OLD_LP TEXT;
	DECLARE TICK_OLD_QUART TEXT;
	DECLARE TICK_NEW_LP TEXT;
	DECLARE TICK_NEW_QUART TEXT;
	DECLARE TICK_OLD_EDSTIME TEXT;	
	DECLARE TICK_OLD_EDETIME TEXT;
	DECLARE CT_ED_STIMEID TEXT;
	DECLARE CT_ED_ETIMEID TEXT;
	DECLARE ACTIVE_RECVER INTEGER;
	DECLARE TEMP_ACCESS_CARD TEXT;
	DECLARE ACCESS_LENGTH INTEGER;
	DECLARE ACCESS_POSITION INTEGER;
	DECLARE ACCESS_CARD_NO INTEGER(7);
	DECLARE ACCESS_LOCATION INTEGER;
	DECLARE GUEST_ACCESS_LENGTH INTEGER;
	DECLARE GUEST_FLAG CHAR(1);
	DECLARE PTD_ACCESS_LOCATION INTEGER;
	DECLARE PTD_ACCESS_LENGTH INTEGER;
	DECLARE PTD_ACCESS_POSITION INTEGER;
	DECLARE PRETERMINATE_DATE DATE;
	DECLARE UASDID INTEGER DEFAULT NULL;
	DECLARE TERM_UASDID INTEGER DEFAULT NULL;
	DECLARE MIN_RECVER INTEGER;
	DECLARE MAX_RECVER INTEGER;
	DECLARE GUEST_CARD_COUNT INTEGER;
	DECLARE CARD_ON INTEGER;
	DECLARE TERM_REC_VER INTEGER;
	DECLARE TERM_END_DATE DATE;
	DECLARE TERM_PTD DATE;
	DECLARE TERM_GUEST_CARD_COUNT INTEGER;
	DECLARE TERM_PTD_NULL_COUNT INTEGER;
	DECLARE TERM_NULL_PTD DATE;
	DECLARE TERM_NULL_ENDATE DATE;
	DECLARE TERM_NULL_STARTDATE DATE;
	DECLARE TERM_NULL_NRVSTARTDATE DATE;
	DECLARE TICK_CARD_NO  VARCHAR(7);
	DECLARE TICK_OLD_VALUE  TEXT;
	DECLARE TICK_NEW_VALUE  TEXT;
	DECLARE TICK_GUEST_CARD  VARCHAR(10);
	DECLARE TERM_CUST_COMMTS  TEXT;
	DECLARE TERM_MAX_CUSTRV  INTEGER;
	DECLARE TICK_PTD TEXT;
	DECLARE USERSTAMP_ID INTEGER;
	DECLARE OLD_ULD_ID INTEGER;
	DECLARE OLD_TIMESTAMP TIMESTAMP;
	DECLARE TERM_NULL_NRVENDATE DATE;
	DECLARE PTDFLAG INTEGER DEFAULT 0;
	DECLARE EDFLAG INTEGER DEFAULT 0;
	DECLARE MIN_CTDID INTEGER DEFAULT 0;
	DECLARE MAX_CTDID INTEGER DEFAULT 0;
	DECLARE CLP_GSTVAL VARCHAR(10);
	DECLARE CLP_UASDIDVAL INTEGER;
	DECLARE TICK_ACS_OLD_VALUE TEXT;
	DECLARE GST_NULL_FLAG INTEGER DEFAULT 0;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 
		SET TERMRESULT_FLAG=0;
		ROLLBACK; 
	END;
	START TRANSACTION;
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(CT_USERSTAMP,@ULDID);
	SET USERSTAMP_ID=(SELECT @ULDID);
	SET TERMRESULT_FLAG=0;
	SET TERM_CUST_COMMTS=(SELECT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID);
	SET TERM_MAX_CUSTRV=(SELECT MAX(CED_REC_VER) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE()));
	SET ACTIVE_RECVER = CT_ACTIVE_REC_VER;
	IF CT_COMMENTS='' THEN
		SET CT_COMMENTS=NULL;
	END IF;
	IF CT_ED_STIME='' THEN
		SET CT_ED_STIME=NULL;
	END IF;
	IF CT_ED_ETIME='' THEN
		SET CT_ED_ETIME=NULL;
	END IF;
	IF CT_RECVER_LPQ='' THEN
		SET CT_RECVER_LPQ=NULL;
	END IF;	
	IF CT_RECVER_LPQ IS NOT NULL THEN
		SET TEMP_RECVER_LPQ = CT_RECVER_LPQ;
		SET REC_VERSION_LENGTH = 1;
		LPQ_LOOP : LOOP		
			SET REC_VERSION_POSITION=(SELECT LOCATE(',&',TEMP_RECVER_LPQ,REC_VERSION_LENGTH));			
			SET REC_VERSION = (SELECT SUBSTRING(TEMP_RECVER_LPQ,REC_VERSION_LENGTH,(REC_VERSION_POSITION-1)));			
			SET TEMP_RECVER_LPQ = (SELECT SUBSTRING(TEMP_RECVER_LPQ,REC_VERSION_POSITION+2));
			SET LEASE_PERIOD_POSITION = (SELECT LOCATE(',&',TEMP_RECVER_LPQ,REC_VERSION_LENGTH));
			SET LEASE_PERIOD= (SELECT SUBSTRING(TEMP_RECVER_LPQ,REC_VERSION_LENGTH,LEASE_PERIOD_POSITION-1));
			IF TRIM(LEASE_PERIOD)='' THEN
				SET LEASE_PERIOD = NULL;
			END IF;
			SET TEMP_RECVER_LPQ = (SELECT SUBSTRING(TEMP_RECVER_LPQ,LEASE_PERIOD_POSITION+2));
			SET QUARTERS_POSITION = (SELECT LOCATE(',&',TEMP_RECVER_LPQ,REC_VERSION_LENGTH));
			IF (QUARTERS_POSITION<=0) THEN
				SET QUARTERS = (IF(TRIM(TEMP_RECVER_LPQ)='',0,TEMP_RECVER_LPQ));
			ELSE
				SET TEMP_QUATER=(SELECT SUBSTRING(TEMP_RECVER_LPQ,REC_VERSION_LENGTH,QUARTERS_POSITION-1));
				IF TRIM(TEMP_QUATER)='' THEN
					SET QUARTERS = 0;
				ELSE
					SET QUARTERS = (SELECT SUBSTRING(TEMP_RECVER_LPQ,REC_VERSION_LENGTH,QUARTERS_POSITION-1)) ;
				END IF;
			END IF;
			IF QUARTERS=0 THEN
				SET QUARTERS=NULL;
			END IF;
			SET TEMP_RECVER_LPQ = (SELECT SUBSTRING(TEMP_RECVER_LPQ,QUARTERS_POSITION+2));
			IF QUARTERS IS NULL THEN
				SET TICK_NEW_QUART='null';
			ELSE
				SET TICK_NEW_QUART=QUARTERS;
			END IF;
			IF LEASE_PERIOD IS NULL THEN
				SET TICK_NEW_LP='null';
			ELSE
				SET TICK_NEW_LP=LEASE_PERIOD;
			END IF;
			SET TICK_OLD_QUART=(SELECT CED_QUARTERS FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=REC_VERSION);
			SET TICK_OLD_LP=(SELECT CED_LEASE_PERIOD FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=REC_VERSION);
			SET TICK_OLD_EDSTIME=(SELECT CTP.CTP_ID FROM CUSTOMER_TIME_PROFILE CTP,CUSTOMER_ENTRY_DETAILS CED WHERE CED.CUSTOMER_ID=CT_CUSTOMER_ID AND CED.CED_REC_VER=REC_VERSION AND CTP.CTP_ID=CED.CED_ED_STIME);
			SET TICK_OLD_EDETIME=(SELECT CTP.CTP_ID FROM CUSTOMER_TIME_PROFILE CTP,CUSTOMER_ENTRY_DETAILS CED WHERE CED.CUSTOMER_ID=CT_CUSTOMER_ID AND CED.CED_REC_VER=REC_VERSION AND CTP.CTP_ID=CED.CED_ED_ETIME);
			SET CT_ED_STIMEID=(SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=CT_ED_STIME);
			SET CT_ED_ETIMEID=(SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=CT_ED_ETIME);
			IF TICK_OLD_QUART IS NULL THEN
				SET TICK_OLD_QUART='null';
			END IF;
			IF TICK_OLD_LP IS NULL THEN
				SET TICK_OLD_LP='null';
			END IF;
			SET TICK_OLD_VALUE=(SELECT CONCAT('CED_ID=',(SELECT CED_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=REC_VERSION),',UNIT_ID=',(SELECT U.UNIT_ID FROM UNIT U,CUSTOMER_ENTRY_DETAILS CED WHERE CED.UNIT_ID=U.UNIT_ID AND CED.CUSTOMER_ID=CT_CUSTOMER_ID AND CED.CED_REC_VER=REC_VERSION),',CED_REC_VER=',REC_VERSION,',CED_ED_STIME=',TICK_OLD_EDSTIME,',CED_ED_ETIME=',TICK_OLD_EDETIME,',CED_LEASE_PERIOD=',TICK_OLD_LP,',CED_QUARTERS=',TICK_OLD_QUART));
			IF  CT_REC_VER=REC_VERSION THEN	
				IF (TICK_OLD_EDSTIME!=CT_ED_STIMEID AND TICK_OLD_EDETIME!=CT_ED_ETIMEID) THEN 
					SET TICK_NEW_VALUE=(SELECT CONCAT('CED_ED_STIME=',CT_ED_STIMEID,',CED_ED_ETIME=',CT_ED_ETIMEID,',CED_LEASE_PERIOD=',TICK_NEW_LP,',CED_QUARTERS=',TICK_NEW_QUART));
					ELSEIF (TICK_OLD_EDSTIME!=CT_ED_STIMEID) THEN	
						SET TICK_NEW_VALUE=(SELECT CONCAT('CED_ED_STIME=',CT_ED_STIMEID,',CED_LEASE_PERIOD=',TICK_NEW_LP,',CED_QUARTERS=',TICK_NEW_QUART));
					ELSEIF (TICK_OLD_EDETIME!=CT_ED_ETIMEID) THEN 
						SET TICK_NEW_VALUE=(SELECT CONCAT('CED_ED_ETIME=',CT_ED_ETIMEID,',CED_LEASE_PERIOD=',TICK_NEW_LP,',CED_QUARTERS=',TICK_NEW_QUART));
					ELSE
						SET TICK_NEW_VALUE=(SELECT CONCAT('CED_LEASE_PERIOD=',TICK_NEW_LP,',CED_QUARTERS=',TICK_NEW_QUART));
					END IF;
					IF (TICK_OLD_EDSTIME!=CT_ED_STIMEID) OR (TICK_OLD_EDETIME!=CT_ED_ETIMEID) OR (TICK_NEW_LP!=TICK_OLD_LP) OR(TICK_NEW_QUART!=TICK_OLD_QUART) THEN
						INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,10,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
					END IF;
				ELSE
					SET TICK_NEW_VALUE=(SELECT CONCAT('CED_LEASE_PERIOD=',TICK_NEW_LP,',CED_QUARTERS=',TICK_NEW_QUART));
					IF (TICK_NEW_LP!=TICK_OLD_LP) OR(TICK_NEW_QUART!=TICK_OLD_QUART) THEN
						INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,10,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
					END IF;
				END IF;	
				UPDATE CUSTOMER_ENTRY_DETAILS SET  CED_LEASE_PERIOD = LEASE_PERIOD, CED_QUARTERS = QUARTERS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=REC_VERSION;
				SET TERMRESULT_FLAG=1;
				IF QUARTERS_POSITION<=0 THEN
					LEAVE LPQ_LOOP;
				END IF;
		END LOOP;
	END IF;
	IF CT_ED_STIME IS NOT NULL AND CT_ED_ETIME IS NOT NULL THEN
		UPDATE CUSTOMER_ENTRY_DETAILS CED SET CED.CED_ED_STIME=(SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=CT_ED_STIME), CED.CED_ED_ETIME=(SELECT CTP_ID FROM CUSTOMER_TIME_PROFILE WHERE CTP_DATA=CT_ED_ETIME) WHERE CED.CUSTOMER_ID=CT_CUSTOMER_ID AND CED.CED_REC_VER=CT_REC_VER;
		SET TERMRESULT_FLAG=1;	
	END IF;
	SET TEMP_ACCESS_CARD = CT_ACCESS_CARD;
	SET ACCESS_LENGTH=1;	
	ACCESS_LOOP:  LOOP	
		SET ACCESS_POSITION=(SELECT LOCATE(',', TEMP_ACCESS_CARD,ACCESS_LENGTH));
		IF ACCESS_POSITION<=0 THEN
			SET ACCESS_CARD_NO=TEMP_ACCESS_CARD;
		ELSE
			SET ACCESS_CARD_NO=(SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_LENGTH,ACCESS_POSITION-1));
			SET TEMP_ACCESS_CARD=(SELECT SUBSTRING(TEMP_ACCESS_CARD,ACCESS_POSITION+1));
		END IF;
		SET ACCESS_LOCATION=(SELECT LOCATE(ACCESS_CARD_NO, CT_GUEST_CARD));
		SET GUEST_ACCESS_LENGTH=(SELECT LENGTH(ACCESS_CARD_NO));
		SET GUEST_FLAG=(SELECT SUBSTRING(CT_GUEST_CARD,ACCESS_LOCATION+GUEST_ACCESS_LENGTH+1,1));
		SET GUEST_FLAG=TRIM(GUEST_FLAG);
		IF GUEST_FLAG='' THEN
			SET GUEST_FLAG=NULL;
		END IF;
		SET PTD_ACCESS_LOCATION=(SELECT LOCATE(ACCESS_CARD_NO, CT_NEW_PRETERMINATE));
		SET PTD_ACCESS_LENGTH=(SELECT LENGTH(ACCESS_CARD_NO));
		SET PTD_ACCESS_POSITION=(SELECT LOCATE(',', CT_NEW_PRETERMINATE,PTD_ACCESS_LOCATION+PTD_ACCESS_LENGTH+1));
		IF PTD_ACCESS_POSITION<=0 THEN
			SET PRETERMINATE_DATE=(SELECT SUBSTRING(CT_NEW_PRETERMINATE,PTD_ACCESS_LOCATION+PTD_ACCESS_LENGTH+1,(SELECT LENGTH(CT_NEW_PRETERMINATE))));
		ELSE
			SET PRETERMINATE_DATE=(SELECT SUBSTRING(CT_NEW_PRETERMINATE,PTD_ACCESS_LOCATION+PTD_ACCESS_LENGTH+1,PTD_ACCESS_POSITION-(PTD_ACCESS_LOCATION+PTD_ACCESS_LENGTH+1)));
		END IF;
		SET UASDID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=ACCESS_CARD_NO);
		IF GUEST_FLAG IS NULL THEN
			CALL SP_CUSTOMER_MANUAL_TERMINATION_PTD_NULL_INSERT(CT_CUSTOMER_ID,CT_REC_VER,TERM_MAX_CUSTRV,ACTIVE_RECVER,USERSTAMP_ID,@TERMRESULT_FLAG);
			SET MIN_RECVER=CT_REC_VER;		
			SET MAX_RECVER=TERM_MAX_CUSTRV;			
			IF(MAX_RECVER>=MIN_RECVER) THEN			
				RECVER_LOOP:  LOOP
					IF(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE())) >0 THEN				
						SET TERM_NULL_PTD=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL);
						SET TERM_NULL_ENDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL);
						SET TERM_UASDID = (SELECT UASD_ID FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL AND CUSTOMER_ID=CT_CUSTOMER_ID );
						SET TICK_PTD=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL AND CUSTOMER_ID=CT_CUSTOMER_ID);
						IF TICK_PTD IS NULL THEN 
							SET TICK_PTD='null';
						END IF;	
						IF TERM_UASDID IS NOT NULL THEN
							SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL ORDER BY CLP_ID DESC LIMIT 1);
							SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL ORDER BY CLP_ID DESC LIMIT 1);
							IF(USERSTAMP_ID!=OLD_ULD_ID) THEN 
								SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND UASD_ID=TERM_UASDID AND CLP_GUEST_CARD IS NULL),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=null',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));					
							ELSE
								SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND UASD_ID=TERM_UASDID AND CLP_GUEST_CARD IS NULL),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=null',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',",CLP_TIMESTAMP=",OLD_TIMESTAMP));						
							END IF;
						ELSE
							SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL ORDER BY CLP_ID DESC LIMIT 1);
							SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL ORDER BY CLP_ID DESC LIMIT 1);
							IF(USERSTAMP_ID!=OLD_ULD_ID) THEN 
								SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=null',',UASD_ID=null',',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));					
							ELSE
								SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NULL),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=null',',UASD_ID=null',',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',",CLP_TIMESTAMP=",OLD_TIMESTAMP));					
							END IF;							
						END IF;						
						IF PRETERMINATE_DATE<=CURRENT_DATE() AND MIN_RECVER=CT_REC_VER THEN
							SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=',PRETERMINATE_DATE,',CLP_TERMINATE=X'));
						ELSE
							SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=',PRETERMINATE_DATE));
						END IF;					
						INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,14,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
						UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_PRETERMINATE_DATE=PRETERMINATE_DATE, CTD.ULD_ID=USERSTAMP_ID WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=MIN_RECVER AND CTD.CLP_GUEST_CARD IS NULL;
						SET TERMRESULT_FLAG=1;
						IF MIN_RECVER=MAX_RECVER THEN
							LEAVE RECVER_LOOP;
						END IF;
						SET MIN_RECVER=MIN_RECVER+1;
					END IF;
				END LOOP;				
			END IF;			
			IF PRETERMINATE_DATE<=CURRENT_DATE() THEN
				SET MIN_RECVER=CT_REC_VER;
				SET MAX_RECVER=(SELECT MAX(CED.CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS AS CED WHERE CED.CUSTOMER_ID=CT_CUSTOMER_ID);				
				CALL SP_CUSTOMER_MANUAL_TERMINATION_PTDSYSDATE_UPDATE(CT_CUSTOMER_ID,CT_REC_VER,MIN_RECVER,MAX_RECVER,PRETERMINATE_DATE,USERSTAMP_ID,@TERMRESULT_FLAG);							
			ELSE
				SET MIN_RECVER=CT_REC_VER;
				SET MAX_RECVER=(SELECT MAX(CED.CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS AS CED WHERE CED.CUSTOMER_ID=CT_CUSTOMER_ID);
				RECVER_LOOP:  LOOP
				IF(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE())) >0 THEN				
					IF MIN_RECVER>CT_REC_VER THEN					
						SET GUEST_CARD_COUNT=(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND ((CLP_PRETERMINATE_DATE IS NOT NULL AND CLP_PRETERMINATE_DATE>=CURRENT_DATE())OR(CLP_PRETERMINATE_DATE IS NULL AND CLP_ENDDATE>=CURRENT_DATE())));
						GUESTCARD_LOOP:  LOOP
							IF GUEST_CARD_COUNT <= 0 THEN
								LEAVE GUESTCARD_LOOP;
							END IF;
							SET CARD_ON=GUEST_CARD_COUNT-1;
							SET TERM_UASDID = (SELECT UASD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND ((CLP_PRETERMINATE_DATE IS NOT NULL AND CLP_PRETERMINATE_DATE>=CURRENT_DATE())OR(CLP_PRETERMINATE_DATE IS NULL AND CLP_ENDDATE>=CURRENT_DATE())) ORDER BY CLP_ID DESC LIMIT CARD_ON,1);
							SET TICK_PTD=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID ORDER BY CLP_ID DESC LIMIT 1);
							IF TICK_PTD IS NULL THEN 
								SET TICK_PTD='null';
							END IF;							
							IF(SELECT COUNT(UASD_ID) FROM CUSTOMER_LP_DETAILS WHERE UASD_ID=TERM_UASDID AND CUSTOMER_ID=CT_CUSTOMER_ID AND CED_REC_VER=CT_REC_VER AND CLP_GUEST_CARD IS NOT NULL AND ((CLP_PRETERMINATE_DATE IS NOT NULL AND CLP_PRETERMINATE_DATE>=CURRENT_DATE())OR(CLP_PRETERMINATE_DATE IS NULL AND CLP_ENDDATE>=CURRENT_DATE())))=0 THEN
									SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=',PRETERMINATE_DATE));					
									IF TERM_UASDID IS NOT NULL THEN
										SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										IF(USERSTAMP_ID!=OLD_ULD_ID) THEN
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										ELSE 
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										END IF;	
										INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,14,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);									
									END IF;
								UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_PRETERMINATE_DATE=PRETERMINATE_DATE, CTD.ULD_ID=USERSTAMP_ID WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=MIN_RECVER AND CTD.CLP_GUEST_CARD IS NOT NULL AND UASD_ID=TERM_UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1;
								SET TERMRESULT_FLAG=1;						
							END IF;
							SET GUEST_CARD_COUNT=(GUEST_CARD_COUNT-1);
							SET TERM_UASDID = NULL;
						END LOOP;
					END IF;
					IF MIN_RECVER=MAX_RECVER THEN
						LEAVE RECVER_LOOP;
					END IF;
					SET MIN_RECVER=MIN_RECVER+1;
				END IF;
				END LOOP;
			END IF;
		ELSE
			SET MIN_RECVER=ACTIVE_RECVER;
			SET MAX_RECVER=(SELECT MAX(CED.CED_REC_VER) FROM CUSTOMER_ENTRY_DETAILS AS CED WHERE CED.CUSTOMER_ID=CT_CUSTOMER_ID);
			RECVER_LOOP:  LOOP	
				IF(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE())) >0 THEN								
							SET TERM_UASDID = (SELECT CTD.UASD_ID FROM CUSTOMER_LP_DETAILS CTD WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=MIN_RECVER AND CTD.CLP_GUEST_CARD IS NOT NULL AND CTD.UASD_ID=UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1);
							SET TICK_PTD=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL AND CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID ORDER BY CLP_ID DESC LIMIT 1);
							IF TICK_PTD IS NULL THEN 
								SET TICK_PTD='null';
							END IF;	
							SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
							SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
							IF(USERSTAMP_ID!=OLD_ULD_ID) THEN
								SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));							
							ELSE 
								SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,",CLP_TIMESTAMP=",OLD_TIMESTAMP));							
							END IF;
				IF ACTIVE_RECVER<CT_REC_VER THEN
					IF MIN_RECVER BETWEEN ACTIVE_RECVER AND (CT_REC_VER-1) THEN
					SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=null'));		
					SET TERM_NULL_PTD=(SELECT CLP_PRETERMINATE_DATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE()));
					SET TERM_NULL_ENDATE=(SELECT CLP_ENDDATE FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=MIN_RECVER AND CUSTOMER_ID=CT_CUSTOMER_ID AND CLP_GUEST_CARD IS NULL AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE()));
					IF(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=(MIN_RECVER+1) AND CLP_STARTDATE!=TERM_NULL_PTD AND CLP_GUEST_CARD IS NULL AND CUSTOMER_ID=CT_CUSTOMER_ID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE()))>0 AND TERM_NULL_PTD IS NOT NULL THEN
						SET GST_NULL_FLAG=1;						
					END IF;
					IF(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=(MIN_RECVER+1) AND CLP_STARTDATE=TERM_NULL_ENDATE AND CLP_GUEST_CARD IS NULL AND CUSTOMER_ID=CT_CUSTOMER_ID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE()))>0 THEN
						SET GST_NULL_FLAG=1;						
					END IF;					
					IF GST_NULL_FLAG =1 THEN
						IF(SELECT COUNT(*) FROM CUSTOMER_LP_DETAILS WHERE CED_REC_VER=(MIN_RECVER) AND CUSTOMER_ID=CT_CUSTOMER_ID AND CLP_PRETERMINATE_DATE IS NOT NULL AND UASD_ID=UASDID AND IF (CLP_PRETERMINATE_DATE IS NOT NULL ,CLP_PRETERMINATE_DATE>CURDATE(),CLP_ENDDATE>CURDATE()))>0 THEN
							UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_PRETERMINATE_DATE=NULL, CTD.ULD_ID=USERSTAMP_ID WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER = MIN_RECVER AND CTD.CLP_GUEST_CARD IS NOT NULL AND CTD.UASD_ID=UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1;							
							INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,14,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);	
							SET TERMRESULT_FLAG=1;
						END IF;
					END IF;					
					ELSEIF MIN_RECVER>=CT_REC_VER THEN	
									SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=',PRETERMINATE_DATE));					
									IF TERM_UASDID IS NOT NULL THEN
										SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										IF(USERSTAMP_ID!=OLD_ULD_ID) THEN
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										ELSE
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										END IF;	
										INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,14,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);									
									END IF;
						UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_PRETERMINATE_DATE=PRETERMINATE_DATE, CTD.ULD_ID=USERSTAMP_ID WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=MIN_RECVER AND CTD.CLP_GUEST_CARD IS NOT NULL AND CTD.UASD_ID=UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1;
						SET TERMRESULT_FLAG=1;
					END IF;
				ELSEIF ACTIVE_RECVER=CT_REC_VER THEN
									SET TICK_NEW_VALUE=(SELECT CONCAT('CLP_PRETERMINATE_DATE=',PRETERMINATE_DATE));					
									IF	TERM_UASDID IS NOT NULL THEN
										SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										SET OLD_TIMESTAMP=(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1);
										IF(USERSTAMP_ID!=OLD_ULD_ID) THEN 
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,',ULD_ID=',OLD_ULD_ID,",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										ELSE
											SET TICK_OLD_VALUE=(SELECT CONCAT('CLP_ID=',(SELECT CLP_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CED_REC_VER=MIN_RECVER AND CLP_GUEST_CARD IS NOT NULL ORDER BY CLP_ID DESC LIMIT 1),',CED_REC_VER=',MIN_RECVER,',CLP_GUEST_CARD=X',',UASD_ID=',TERM_UASDID,',CLP_PRETERMINATE_DATE=',TICK_PTD,",CLP_TIMESTAMP=",OLD_TIMESTAMP));
										END IF;	
										INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,14,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);									
									END IF;
					UPDATE CUSTOMER_LP_DETAILS CTD SET CTD.CLP_PRETERMINATE_DATE=PRETERMINATE_DATE, CTD.ULD_ID=USERSTAMP_ID WHERE CTD.CUSTOMER_ID=CT_CUSTOMER_ID AND CTD.CED_REC_VER=MIN_RECVER AND CTD.CLP_GUEST_CARD IS NOT NULL AND CTD.UASD_ID=UASDID ORDER BY CTD.CLP_ID DESC LIMIT 1;							
					SET TERMRESULT_FLAG=1;				
				END IF;
				IF PRETERMINATE_DATE<=CURRENT_DATE() THEN
					SET TERM_UASDID = UASDID;
					SET TICK_CARD_NO=(SELECT UASD_ACCESS_CARD FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID=UASDID);
					IF TERM_UASDID IS NOT NULL THEN
						IF EXISTS(SELECT * FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL) THEN
							SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_GUEST_CARD IS NOT NULL AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL);
							SET OLD_TIMESTAMP=(SELECT CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_GUEST_CARD IS NOT NULL AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL);
							IF(USERSTAMP_ID!=OLD_ULD_ID)THEN	
								SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_GUEST_CARD IS NOT NULL AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL),',UASD_ID=',TERM_UASDID,',CACD_GUEST_CARD=X',',CACD_VALID_TILL=null,ACN_ID=null',",ULD_ID=",OLD_ULD_ID,",CACD_TIMESTAMP=",OLD_TIMESTAMP));
							ELSE
								SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',(SELECT CACD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_GUEST_CARD IS NOT NULL AND ACN_ID IS NULL AND CACD_VALID_TILL IS NULL),',UASD_ID=',TERM_UASDID,',CACD_GUEST_CARD=X',',CACD_VALID_TILL=null,ACN_ID=null',",CACD_TIMESTAMP=",OLD_TIMESTAMP));
							END IF;	
							UPDATE CUSTOMER_ACCESS_CARD_DETAILS SET CACD_VALID_TILL=PRETERMINATE_DATE, ACN_ID=4, ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CT_CUSTOMER_ID AND UASD_ID=TERM_UASDID AND CACD_VALID_TILL IS NULL;
							UPDATE UNIT_ACCESS_STAMP_DETAILS SET UASD_ACCESS_ACTIVE=NULL, UASD_ACCESS_INVENTORY='X' WHERE UASD_ID=TERM_UASDID;	
							SET TERMRESULT_FLAG=1;	
								SET TICK_NEW_VALUE=(SELECT CONCAT('CACD_VALID_TILL=',PRETERMINATE_DATE,',ACN_ID=4'));
								INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,13,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);							
						END IF;							
					END IF;
					SET TERM_UASDID = NULL;
				END IF;
				IF MIN_RECVER=MAX_RECVER THEN
					LEAVE RECVER_LOOP;
				END IF;
				SET MIN_RECVER=MIN_RECVER+1;
			END IF;
			END LOOP;
		END IF;
		IF ACCESS_POSITION<=0 THEN
			LEAVE ACCESS_LOOP;
		END IF;
	END LOOP;
	IF CT_COMMENTS IS NOT NULL THEN
		UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=CT_COMMENTS WHERE CUSTOMER_ID=CT_CUSTOMER_ID;
		SET TERMRESULT_FLAG=1;
	ELSE
		UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=NULL WHERE CUSTOMER_ID=CT_CUSTOMER_ID;
		SET TERMRESULT_FLAG=1;
	END IF;
	IF(TERM_CUST_COMMTS IS NULL) THEN
		SET TERM_CUST_COMMTS='null';
		SET TICK_OLD_VALUE=(SELECT CONCAT('CPD_ID=',(SELECT CPD_ID FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID),',CPD_COMMENTS=null'));		
	ELSE
		SET TICK_OLD_VALUE=(SELECT CONCAT('CPD_ID=',(SELECT CPD_ID FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CT_CUSTOMER_ID),',CPD_COMMENTS=',TERM_CUST_COMMTS));		
	END IF;
	IF(CT_COMMENTS IS NULL) THEN
		SET CT_COMMENTS='null';	
		SET TICK_NEW_VALUE=('CPD_COMMENTS=null');		
	ELSE
		SET TICK_NEW_VALUE=(SELECT CONCAT('CPD_COMMENTS=',CT_COMMENTS));		
	END IF;
	IF TERM_CUST_COMMTS!=CT_COMMENTS THEN
		INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,15,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CT_CUSTOMER_ID);
	END IF;
	COMMIT;
END;