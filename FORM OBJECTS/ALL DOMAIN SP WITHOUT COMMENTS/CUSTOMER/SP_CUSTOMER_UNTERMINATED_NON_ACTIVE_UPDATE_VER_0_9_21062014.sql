DROP PROCEDURE IF EXISTS SP_CUSTOMER_UNTERMINATED_NON_ACTIVE_UPDATE;
CREATE PROCEDURE SP_CUSTOMER_UNTERMINATED_NON_ACTIVE_UPDATE(
IN CUST_ID INTEGER,
IN USERSTAMP VARCHAR(50),
IN TDAYDATE VARCHAR(50),
OUT SUCCESSFLAG INTEGER)
BEGIN
	DECLARE TADC_MAX_RECVER INTEGER;
	DECLARE TFTDC_MAX_RECVER INTEGER;
	DECLARE TFTDC_MINID INTEGER;
	DECLARE TFTDC_MAXID INTEGER;
	DECLARE TUTDC_MINID INTEGER;
	DECLARE TUTDC_MAXID INTEGER;
	DECLARE PTDDATE DATE;
	DECLARE ENDDATE DATE;
	DECLARE CCNDATA TEXT;
	DECLARE COMMENTS TEXT;
	DECLARE OLDCOMMENTS TEXT;
	DECLARE NEWCOMMENTS TEXT;
	DECLARE TADC_COUNT VARCHAR(20);
	DECLARE TICK_OLD_VALUE  TEXT;
	DECLARE TICK_NEW_VALUE  TEXT;
	DECLARE TICK_OLD_TERMVALUE  TEXT;
	DECLARE TICK_NEW_TERMVALUE  TEXT;
	DECLARE TICK_OLD_COMTVALUE  TEXT;
	DECLARE TICK_NEW_COMTVALUE  TEXT;
	DECLARE TICK_UNIT_NO  INTEGER;
	DECLARE TICK_REC_VER  INTEGER;
	DECLARE TICK_CARD_NO  VARCHAR(7);
	DECLARE TICK_GUEST_CARD  VARCHAR(10);
	DECLARE TICK_PTD TEXT;
	DECLARE TICK_ENDDATE TEXT;
	DECLARE COMMENTCARDNO TEXT;
	DECLARE USERSTAMP_ID INTEGER(2);
	DECLARE OLD_ULD_ID INTEGER(2);
	DECLARE CACDID INTEGER;
	DECLARE CPDID INTEGER;
	DECLARE UASDID INTEGER;
	DECLARE TUTDCUASDID INTEGER;
	DECLARE DCCTDID INTEGER;
	DECLARE TERMINATED_CUSTOMER TEXT;
	DECLARE ACTIVE_CUSTOMER TEXT;
	DECLARE FINAL_TERMINATE_CUSTOMER TEXT;
	DECLARE NON_TERMINATE_CUSTOMER TEXT;
	DECLARE SYSDATEANDTIME VARCHAR(50);
	DECLARE SYSDATEANDULDID VARCHAR(50);
	DECLARE TEMP_UNTERM_CUSTOMER TEXT;
	DECLARE TEMP_UNTERM_CUSTOMER_COUNT TEXT;
	DECLARE CUST_ACCESS_COUNT TEXT;
	DECLARE UNTERM_CUST_WITH_CARD_COUNT TEXT;
	DECLARE UNTERM_NULL_CARD_CUST_COUNT TEXT;
	DECLARE ACTIVE_CUST_COUNT INTEGER;
	DECLARE UNTERMCUSTSELECTQUERY TEXT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN 		
		ROLLBACK;
		SET @DROP_TEMP_UNTERM_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_UNTERM_CUSTOMER,''));
		PREPARE DROP_TEMP_UNTERM_CUSTOMER_STMT FROM @DROP_TEMP_UNTERM_CUSTOMER;
		EXECUTE DROP_TEMP_UNTERM_CUSTOMER_STMT;
		SET @DROP_FINAL_TERMINATE_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',FINAL_TERMINATE_CUSTOMER,''));
		PREPARE DROP_FINAL_TERMINATE_CUSTOMER_STMT FROM @DROP_FINAL_TERMINATE_CUSTOMER;
		EXECUTE DROP_FINAL_TERMINATE_CUSTOMER_STMT;
		SET @DROP_TERMINATED_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',TERMINATED_CUSTOMER,''));
		PREPARE DROP_TERMINATED_CUSTOMER_STMT FROM @DROP_TERMINATED_CUSTOMER;
		EXECUTE DROP_TERMINATED_CUSTOMER_STMT;
		SET @DROP_ACTIVE_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',ACTIVE_CUSTOMER,''));
		PREPARE DROP_ACTIVE_CUSTOMER_STMT FROM @DROP_ACTIVE_CUSTOMER;
		EXECUTE DROP_ACTIVE_CUSTOMER_STMT;
		SET @DROP_TEMP_NON_TERM=(SELECT CONCAT('DROP TABLE IF EXISTS ',NON_TERMINATE_CUSTOMER));
		PREPARE DROP_TEMP_NON_TERM_STMT FROM @DROP_TEMP_NON_TERM;
		EXECUTE DROP_TEMP_NON_TERM_STMT;
		SET SUCCESSFLAG = 0;
	END;
	START TRANSACTION;
	SET SUCCESSFLAG = 0;
	CALL SP_NON_TERMINATED_CUSTOMER(USERSTAMP,@TEMP_TERMINATED_CUSTOMER,@TEMP_ACTIVE_CUSTOMER,@FINAL_TERMINATED_CUSTOMER,@NON_TERMINATED_CUSTOMER);
	SET TERMINATED_CUSTOMER = (SELECT @TEMP_TERMINATED_CUSTOMER);
	SET ACTIVE_CUSTOMER = (SELECT @TEMP_ACTIVE_CUSTOMER);
	SET FINAL_TERMINATE_CUSTOMER = (SELECT @FINAL_TERMINATED_CUSTOMER);
	SET NON_TERMINATE_CUSTOMER = (SELECT @NON_TERMINATED_CUSTOMER);
	CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
	SET USERSTAMP_ID = (SELECT @ULDID);
	SET SYSDATEANDTIME=(SELECT SYSDATE());
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,' ',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,'-',''));
	SET SYSDATEANDTIME=(SELECT REPLACE(SYSDATEANDTIME,':',''));
	SET SYSDATEANDULDID=(SELECT CONCAT(SYSDATEANDTIME,'_',USERSTAMP_ID));
	SET TEMP_UNTERM_CUSTOMER=(SELECT CONCAT('TEMP_UNTERM_CUSTOMER','_',SYSDATEANDULDID));
	SET @UNTERM_CUSTOMER_CREATEQUERY = (SELECT CONCAT('CREATE TABLE ',TEMP_UNTERM_CUSTOMER,' AS (SELECT * FROM ',FINAL_TERMINATE_CUSTOMER,' WHERE TFTDC_CUSTOMERID=',CUST_ID,')'));
	PREPARE UNTERM_CUSTOMER_CREATEQUERY_STMT FROM @UNTERM_CUSTOMER_CREATEQUERY;
	EXECUTE UNTERM_CUSTOMER_CREATEQUERY_STMT;
	SET @TFTDCMIN_ID = (SELECT CONCAT('SELECT MIN(TFTDC_ID) INTO @TFTDCMINID FROM ',TEMP_UNTERM_CUSTOMER,''));
	PREPARE TFTDCMIN_ID_STMT FROM @TFTDCMIN_ID;
	EXECUTE TFTDCMIN_ID_STMT;
	SET TFTDC_MINID = @TFTDCMINID;
	SET @TFTDCMAX_ID = (SELECT CONCAT('SELECT MAX(TFTDC_ID) INTO @TFTDCMAXID FROM ',TEMP_UNTERM_CUSTOMER,''));
	PREPARE TFTDCMAX_ID_STMT FROM @TFTDCMAX_ID;
	EXECUTE TFTDCMAX_ID_STMT;
	SET TFTDC_MAXID = @TFTDCMAXID;
	SET @TADCMAXRECVER = (SELECT CONCAT('SELECT MAX(TADC_RECVER) INTO @TADC_MAXRECVER FROM ',ACTIVE_CUSTOMER,' WHERE TADC_CUSTOMERID=',CUST_ID,''));
	PREPARE TADCMAXRECVER_STMT FROM @TADCMAXRECVER;
	EXECUTE TADCMAXRECVER_STMT;
	SET TADC_MAX_RECVER = @TADC_MAXRECVER;
	SET CCNDATA = (SELECT CCN_DATA FROM CUSTOMER_CONFIGURATION WHERE CGN_ID=53);	
	SET @ACTIVECOUNT = (SELECT CONCAT('SELECT COUNT(*) INTO @TADCCOUNT FROM ',ACTIVE_CUSTOMER,' WHERE TADC_CUSTOMERID=',CUST_ID,''));
	PREPARE ACTIVECOUNTSTMT FROM @ACTIVECOUNT;
	EXECUTE ACTIVECOUNTSTMT;
	SET TADC_COUNT = @TADCCOUNT;
	SET @TFTDCMAXRECVER = (SELECT CONCAT('SELECT MAX(TFTDC_RECVER) INTO @TFTDC_MAXRECVER FROM ',TEMP_UNTERM_CUSTOMER,' WHERE IF(TFTDC_PRETERMINATEDATE IS NOT NULL,TFTDC_STARTDATE<TFTDC_PRETERMINATEDATE,TFTDC_STARTDATE<TFTDC_ENDDATE)'));	
	PREPARE TFTDCMAXRECVERSTMT FROM @TFTDCMAXRECVER;
	EXECUTE TFTDCMAXRECVERSTMT;
	SET TFTDC_MAX_RECVER = @TFTDC_MAXRECVER;
	WHILE(TFTDC_MINID <= TFTDC_MAXID)DO		
		SET @TICKUNIT_NO=(SELECT CONCAT('SELECT TFTDC_UNITNO INTO @TICK_UNITNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,''));
		PREPARE TICKUNIT_NO_STMT FROM @TICKUNIT_NO;
		EXECUTE TICKUNIT_NO_STMT;
		SET TICK_UNIT_NO = @TICK_UNITNO;
		SET @TICKREC_VER=(SELECT CONCAT('SELECT TFTDC_RECVER INTO @TICK_RECVER FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,''));
		PREPARE TICKREC_VER_STMT FROM @TICKREC_VER;
		EXECUTE TICKREC_VER_STMT;
		SET TICK_REC_VER = @TICK_RECVER;
		SET @TICKGUEST_CARD=(SELECT CONCAT('SELECT TFTDC_GUESTFLAG INTO @TICK_GUESTCARD FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,''));
		PREPARE TICKGUEST_CARD_STMT FROM @TICKGUEST_CARD;
		EXECUTE TICKGUEST_CARD_STMT;
		SET TICK_GUEST_CARD = @TICK_GUESTCARD;
		SET @TICKCARD_NO=(SELECT CONCAT('SELECT TFTDC_CARDNO INTO @TICK_CARDNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,''));
		PREPARE TICKCARD_NO_STMT FROM @TICKCARD_NO;
		EXECUTE TICKCARD_NO_STMT;
		SET TICK_CARD_NO = @TICK_CARDNO;
		SET @TICKPTD=(SELECT CONCAT('SELECT TFTDC_PRETERMINATEDATE INTO @PRETERMDATE FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,''));
		PREPARE TICKPTD_STMT FROM @TICKPTD;
		EXECUTE TICKPTD_STMT;
		SET TICK_PTD = @PRETERMDATE;
		SET COMMENTCARDNO=TICK_CARD_NO;
		SET OLDCOMMENTS = (SELECT CPD_COMMENTS FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CUST_ID);
		SET CPDID = (SELECT CPD_ID FROM CUSTOMER_PERSONAL_DETAILS WHERE CUSTOMER_ID=CUST_ID);
		IF(TICK_CARD_NO IS NULL) THEN
			SET TICK_CARD_NO=('null');
		END IF;
		IF(TICK_GUEST_CARD IS NULL) THEN
			SET TICK_GUEST_CARD=('null');
		END IF;		
		IF(TICK_PTD IS NULL) THEN
			SET TICK_PTD=('null');
		END IF;		
		SET COMMENTS = (SELECT REPLACE(CCNDATA,'[SYSDATE]',TDAYDATE));		
		IF COMMENTCARDNO IS NOT NULL THEN		
			SET COMMENTS=(SELECT CONCAT(COMMENTCARDNO,'-',COMMENTS));		
		END IF;		
		IF (OLDCOMMENTS IS NOT NULL)THEN			
			SET NEWCOMMENTS = (SELECT CONCAT(OLDCOMMENTS ,'   ',COMMENTS));		
		ELSE			
			SET NEWCOMMENTS = COMMENTS;			
		END IF;
		IF(OLDCOMMENTS IS NULL) THEN			
			SET TICK_OLD_COMTVALUE=(SELECT CONCAT('CPD_ID=',CPDID,',','CPD_COMMENTS=null'));		
		ELSE
			SET TICK_OLD_COMTVALUE=(SELECT CONCAT('CPD_ID=',CPDID,',','CPD_COMMENTS=',OLDCOMMENTS));
		END IF;		
		SET TICK_NEW_COMTVALUE=(SELECT CONCAT('CPD_COMMENTS=',NEWCOMMENTS));
		SET @CUST_ACCESSID = (SELECT CONCAT('SELECT CACD_ID INTO @CUSTACCESSID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE  CUSTOMER_ID=',CUST_ID,' AND UASD_ID=(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=(SELECT TFTDC_CARDNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,'))'));
		PREPARE CUST_ACCESSID_STMT FROM @CUST_ACCESSID;
		EXECUTE CUST_ACCESSID_STMT;
		SET CACDID = @CUSTACCESSID;
		SET @UNIT_ACCESSID = (SELECT CONCAT('SELECT UASD_ID INTO @UNITACCESSID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD=(SELECT TFTDC_CARDNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,')'));
		PREPARE UNIT_ACCESSID_STMT FROM @UNIT_ACCESSID;
		EXECUTE UNIT_ACCESSID_STMT;
		SET UASDID = @UNITACCESSID;
		SET @UNTERM_CUSTCOUNT = (SELECT CONCAT('SELECT COUNT(*) INTO @UNTERMCOUNT FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,''));
		PREPARE UNTERM_CUSTCOUNT_STMT FROM @UNTERM_CUSTCOUNT;
		EXECUTE UNTERM_CUSTCOUNT_STMT;
		SET TEMP_UNTERM_CUSTOMER_COUNT	= @UNTERMCOUNT;
		IF (TEMP_UNTERM_CUSTOMER_COUNT > 0)THEN
			SET @PRETERMDATE = (SELECT CONCAT('SELECT MAX(TFTDC_PRETERMINATEDATE) INTO @TFTDCPRETERMINATEDATE FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_UASDID=(SELECT TFTDC_UASDID FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,')'));
			PREPARE PRETERMDATE_STMT FROM @PRETERMDATE;
			EXECUTE PRETERMDATE_STMT;
			SET PTDDATE = @TFTDCPRETERMINATEDATE;
			SET @END_DATE = (SELECT CONCAT('SELECT MAX(TFTDC_ENDDATE) INTO @TFTDCENDDATE FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_UASDID=(SELECT TFTDC_UASDID FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,')'));				
			PREPARE END_DATE_STMT FROM @END_DATE;
			EXECUTE END_DATE_STMT;
			SET ENDDATE = @TFTDCENDDATE;
			IF (PTDDATE IS NOT NULL) THEN
				SET ENDDATE = PTDDATE;
			END IF;				
			SET @CUSTACCESSCOUNT = (SELECT CONCAT('SELECT COUNT(*) INTO @CACDCOUNT FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CUSTOMER_ID=',CUST_ID,' AND UASD_ID=(SELECT TFTDC_UASDID FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,') AND CACD_VALID_TILL IS NULL'));	
			PREPARE CUSTACCESSCOUNTSTMT FROM @CUSTACCESSCOUNT;
			EXECUTE CUSTACCESSCOUNTSTMT;
			SET CUST_ACCESS_COUNT = @CACDCOUNT;
			IF (CUST_ACCESS_COUNT > 0)THEN
				SET TICK_NEW_VALUE=(SELECT CONCAT('CACD_VALID_TILL=',ENDDATE,',ACN_ID=4'));
				IF (USERSTAMP_ID!=(SELECT ULD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CACD_ID=CACDID)) THEN
					SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',CACDID,',UASD_ID=',UASDID,',ACN_ID=null',',CACD_VALID_TILL=null',',CACD_GUEST_CARD=',TICK_GUEST_CARD,',ULD_ID=',(SELECT ULD_ID FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CACD_ID=CACDID),',CACD_TIMESTAMP=',(SELECT CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CACD_ID=CACDID)));
				ELSE
					SET TICK_OLD_VALUE=(SELECT CONCAT('CACD_ID=',CACDID,',UASD_ID=',UASDID,',ACN_ID=null',',CACD_VALID_TILL=null',',CACD_GUEST_CARD=',TICK_GUEST_CARD,',CACD_TIMESTAMP=',(SELECT CACD_TIMESTAMP FROM CUSTOMER_ACCESS_CARD_DETAILS WHERE CACD_ID=CACDID)));
				END IF;	
				INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)values(1,13,TICK_OLD_VALUE,TICK_NEW_VALUE,USERSTAMP_ID,CUST_ID);								
				SET @UPDATE_CACD = (SELECT CONCAT('UPDATE CUSTOMER_ACCESS_CARD_DETAILS SET CACD_VALID_TILL=','"',ENDDATE,'"',',ACN_ID=4,
				ULD_ID=',USERSTAMP_ID,' WHERE CUSTOMER_ID=',CUST_ID,' AND UASD_ID=(SELECT TFTDC_UASDID FROM ',TEMP_UNTERM_CUSTOMER,'
				WHERE TFTDC_ID=',TFTDC_MINID,') AND CACD_VALID_TILL IS NULL'));
				PREPARE UPDATE_CACD_STMT FROM @UPDATE_CACD;
				EXECUTE UPDATE_CACD_STMT;				
				SET @UPDATE_UASD = (SELECT CONCAT('UPDATE UNIT_ACCESS_STAMP_DETAILS SET UASD_ACCESS_ACTIVE=NULL,UASD_ACCESS_INVENTORY="X" WHERE 
				UASD_ID=(SELECT TFTDC_UASDID FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TFTDC_MINID,')'));	
				PREPARE UPDATE_UASD_STMT FROM @UPDATE_UASD;
				EXECUTE UPDATE_UASD_STMT;
				UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=NEWCOMMENTS WHERE CUSTOMER_ID=CUST_ID;						
				INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,15,TICK_OLD_COMTVALUE,TICK_NEW_COMTVALUE,USERSTAMP_ID,CUST_ID);												
				SET SUCCESSFLAG = 1;
			END IF;			
			IF (TADC_COUNT=0) THEN												
				SET @UNTERMCUSTOMER = (SELECT CONCAT('SELECT COUNT(*) INTO @FINALTERMCUSTOMER FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_RECVER=',TFTDC_MAX_RECVER,' AND TFTDC_UASDID IS NOT NULL AND TFTDC_GUESTFLAG IS NULL AND TFTDC_ID=',TFTDC_MINID,''));
				PREPARE UNTERMCUSTOMER_STMT FROM @UNTERMCUSTOMER;
				EXECUTE UNTERMCUSTOMER_STMT;
				SET UNTERM_CUST_WITH_CARD_COUNT = @FINALTERMCUSTOMER;
				IF (UNTERM_CUST_WITH_CARD_COUNT > 0) THEN
					SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TFTDC_MAX_RECVER AND CLP_GUEST_CARD IS NULL);
					UPDATE CUSTOMER_LP_DETAILS SET CLP_TERMINATE='X',ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TFTDC_MAX_RECVER AND CLP_GUEST_CARD IS NULL;						
					SET @UPDATEUNTERMCUST = (SELECT CONCAT('UPDATE ',TEMP_UNTERM_CUSTOMER,' SET TFTDC_TERMINATEFLAG="X" WHERE TFTDC_CUSTOMERID=',CUST_ID,' AND TFTDC_RECVER=',TFTDC_MAX_RECVER,' AND TFTDC_GUESTFLAG IS NULL'));
					PREPARE UPDATEUNTERMCUSTSTMT FROM @UPDATEUNTERMCUST;
					EXECUTE UPDATEUNTERMCUSTSTMT;
					SET SUCCESSFLAG = 1;
				ELSE 					 
					SET @UNTERMNULLCARD_CUST = (SELECT CONCAT('SELECT COUNT(*) INTO @NULLCARDCUST FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_RECVER=',TFTDC_MAX_RECVER,' AND TFTDC_UASDID IS NULL AND TFTDC_GUESTFLAG IS NULL AND TFTDC_ID=',TFTDC_MINID,''));
					PREPARE UNTERMNULLCARD_CUST_STMT FROM @UNTERMNULLCARD_CUST;
					EXECUTE UNTERMNULLCARD_CUST_STMT;
					SET UNTERM_NULL_CARD_CUST_COUNT = @NULLCARDCUST;
					IF(UNTERM_NULL_CARD_CUST_COUNT > 0)THEN
						SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TFTDC_MAX_RECVER AND CLP_GUEST_CARD IS NULL);
						UPDATE CUSTOMER_LP_DETAILS SET CLP_TERMINATE='X',ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TFTDC_MAX_RECVER AND CLP_GUEST_CARD IS NULL;
						SET @UPDATE_UNTERM_NULLCARDCUST = (SELECT CONCAT('UPDATE ',TEMP_UNTERM_CUSTOMER,' SET TFTDC_TERMINATEFLAG="X" WHERE TFTDC_CUSTOMERID=',CUST_ID,' AND TFTDC_RECVER=',TFTDC_MAX_RECVER,' AND TFTDC_GUESTFLAG IS NULL'));
						PREPARE UPDATE_UNTERM_NULLCARDCUST_STMT FROM @UPDATE_UNTERM_NULLCARDCUST;
						EXECUTE UPDATE_UNTERM_NULLCARDCUST_STMT;
						INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,15,TICK_OLD_COMTVALUE,TICK_NEW_COMTVALUE,USERSTAMP_ID,CUST_ID);						
						UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=NEWCOMMENTS WHERE CUSTOMER_ID=CUST_ID;					
						SET SUCCESSFLAG = 1;
					END IF;	
				SET SUCCESSFLAG = 1;
				END IF;	
			ELSE							
				SET @TADC_MAXRECVER = (SELECT CONCAT('SELECT COUNT(*) INTO @TADCMAXRECVER FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_RECVER=',TADC_MAX_RECVER,' AND TFTDC_UASDID IS NOT NULL AND TFTDC_GUESTFLAG IS NULL AND TFTDC_ID=',TFTDC_MINID,''));										   				
				PREPARE TADC_MAXRECVER_STMT FROM @TADC_MAXRECVER;
				EXECUTE TADC_MAXRECVER_STMT;
				SET ACTIVE_CUST_COUNT = @TADCMAXRECVER;
				IF(ACTIVE_CUST_COUNT > 0)THEN
					SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TADC_MAX_RECVER AND CLP_GUEST_CARD IS NULL);
					UPDATE CUSTOMER_LP_DETAILS SET CLP_TERMINATE='X',ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TADC_MAX_RECVER AND CLP_GUEST_CARD IS NULL;
					SET @UPDATE_QUERY = (SELECT CONCAT('UPDATE ',TEMP_UNTERM_CUSTOMER,' SET TFTDC_TERMINATEFLAG="X" WHERE TFTDC_CUSTOMERID=',CUST_ID,' AND TFTDC_RECVER=',TADC_MAX_RECVER,' AND TFTDC_GUESTFLAG IS NULL'));					
					PREPARE UPDATE_QUERY_STMT FROM @UPDATE_QUERY;
					EXECUTE UPDATE_QUERY_STMT;
					SET SUCCESSFLAG = 1;
				ELSE 					 
					SET @UNTERMCUST_SELECTQUERY = (SELECT CONCAT('SELECT COUNT(*) INTO @UNTERM_COUNT FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_RECVER=',TADC_MAX_RECVER,' AND TFTDC_UASDID IS NULL AND TFTDC_GUESTFLAG IS NULL AND TFTDC_ID=',TFTDC_MINID,''));
					PREPARE UNTERNCUST_SELECTQUERY_STMT FROM @UNTERMCUST_SELECTQUERY;
					EXECUTE UNTERNCUST_SELECTQUERY_STMT;
					SET UNTERMCUSTSELECTQUERY= @UNTERM_COUNT;
					IF (UNTERMCUSTSELECTQUERY > 0)THEN
						SET OLD_ULD_ID=(SELECT ULD_ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TADC_MAX_RECVER AND CLP_GUEST_CARD IS NULL);
						UPDATE CUSTOMER_LP_DETAILS SET CLP_TERMINATE='X',ULD_ID=USERSTAMP_ID WHERE CUSTOMER_ID=CUST_ID AND CED_REC_VER=TADC_MAX_RECVER AND CLP_GUEST_CARD IS NULL;
						SET @UPDATEQUERY = (SELECT CONCAT('UPDATE ',TEMP_UNTERM_CUSTOMER,' SET TFTDC_TERMINATEFLAG="X" WHERE TFTDC_CUSTOMERID=',CUST_ID,' AND TFTDC_RECVER=',TADC_MAX_RECVER,' AND TFTDC_GUESTFLAG IS NULL'));
						PREPARE UPDATEQUERYSTMT FROM @UPDATEQUERY;
						EXECUTE UPDATEQUERYSTMT;
						INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)VALUES(1,15,TICK_OLD_COMTVALUE,TICK_NEW_COMTVALUE,USERSTAMP_ID,CUST_ID);							
						UPDATE CUSTOMER_PERSONAL_DETAILS SET CPD_COMMENTS=NEWCOMMENTS WHERE CUSTOMER_ID=CUST_ID;
					SET SUCCESSFLAG = 1;
					END IF;					
				SET SUCCESSFLAG = 1;
				END IF;	
			SET SUCCESSFLAG = 1;
			END IF;	
		SET SUCCESSFLAG = 1;
		END IF;	
	SET TFTDC_MINID = TFTDC_MINID+1;	
	END WHILE; 
	SET @TUTDCMINID = (SELECT CONCAT('SELECT MIN(TFTDC_ID) INTO @MINTFTDCID FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_TERMINATEFLAG IS NOT NULL'));
	PREPARE TUTDCMINIDSTMT FROM @TUTDCMINID;
	EXECUTE TUTDCMINIDSTMT;
	SET TUTDC_MINID = @MINTFTDCID;
	SET @TUTDCMAXID = (SELECT CONCAT('SELECT MAX(TFTDC_ID) INTO @MAXTFTDCID FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_TERMINATEFLAG IS NOT NULL'));
	PREPARE TUTDCMAXIDSTMT FROM @TUTDCMAXID;
	EXECUTE TUTDCMAXIDSTMT;
	SET TUTDC_MAXID = @MAXTFTDCID;
	WHILE(TUTDC_MINID <= TUTDC_MAXID)DO		
		SET @TICK_UNITNUMBER=(SELECT CONCAT('SELECT UNIT_ID INTO @UNIT_NUMBER FROM UNIT WHERE UNIT_NO=(SELECT TFTDC_UNITNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,')'));
		PREPARE TICK_UNITNUMBER_STMT FROM @TICK_UNITNUMBER;
		EXECUTE TICK_UNITNUMBER_STMT;
		SET TICK_UNIT_NO = @TICK_UNIT_NO;
		SET @TICKLER_REC_VER=(SELECT CONCAT('SELECT TFTDC_RECVER INTO @TICKLERREC_VER FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,''));
		PREPARE TICKLER_REC_VER_STMT FROM @TICKLER_REC_VER;
		EXECUTE TICKLER_REC_VER_STMT;
		SET TICK_REC_VER = @TICKLERREC_VER;
		SET @TICKLER_GUESTCARD=(SELECT CONCAT('SELECT TFTDC_GUESTFLAG INTO @TICKLER_GUEST_CARD FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,''));
		PREPARE TICKLER_GUESTCARD_STMT FROM @TICKLER_GUESTCARD;
		EXECUTE TICKLER_GUESTCARD_STMT;
		SET TICK_GUEST_CARD = @TICKLER_GUEST_CARD;
		SET @TICKLER_CARD_NO=(SELECT CONCAT('SELECT TFTDC_CARDNO INTO @TICKLERCARD_NO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,''));
		PREPARE TICKLER_CARD_NO_STMT FROM @TICKLER_CARD_NO;
		EXECUTE TICKLER_CARD_NO_STMT;
		SET TICK_CARD_NO = @TICKLERCARD_NO;
		IF(TICK_CARD_NO IS NOT NULL)THEN
			SET @ACCESSCARD_ID = (SELECT CONCAT('SELECT UASD_ID INTO @ACCESSCARDID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD = (SELECT TFTDC_CARDNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,')'));
			PREPARE ACCESSCARD_ID_STMT FROM @ACCESSCARD_ID;
			EXECUTE ACCESSCARD_ID_STMT;
			SET TUTDCUASDID = @ACCESSCARDID;
			SET @CUSTOMER_LP_DTLS = (SELECT CONCAT('SELECT CLP_ID INTO @LPID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID =',CUST_ID,' AND CED_REC_VER=',TFTDC_MAX_RECVER,' AND UASD_ID = (SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ACCESS_CARD = (SELECT TFTDC_CARDNO FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,'))'));
			PREPARE CUSTOMER_LP_DTLS_STMT FROM @CUSTOMER_LP_DTLS;
			EXECUTE CUSTOMER_LP_DTLS_STMT;
			SET DCCTDID = @LPID;
		ELSE
			SET @CUST_LP_DTLS = (SELECT CONCAT('SELECT CLP_ID INTO @ID FROM CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID =',CUST_ID,' AND CED_REC_VER=',TICK_REC_VER,''));
			PREPARE CUST_LP_DTLS_STMT FROM @CUST_LP_DTLS;
			EXECUTE CUST_LP_DTLS_STMT;
			SET DCCTDID = @ID;
		END IF;
		SET @TFTDC_TD=(SELECT CONCAT('SELECT TFTDC_PRETERMINATEDATE INTO @TFTDC_PRETERMINATEDATE FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,''));
		PREPARE TFTDC_TD_STMT FROM @TFTDC_TD;
		EXECUTE TFTDC_TD_STMT;
		SET TICK_PTD = @TFTDC_PRETERMINATEDATE;
		SET @TICKENDDATE=(SELECT CONCAT('SELECT TFTDC_ENDDATE INTO @TFTDCENDDATE FROM ',TEMP_UNTERM_CUSTOMER,' WHERE TFTDC_ID=',TUTDC_MINID,''));
		PREPARE TICKENDDATE_STMT FROM @TICKENDDATE;
		EXECUTE TICKENDDATE_STMT;
		SET TICK_ENDDATE = @TFTDCENDDATE;
		IF(TICK_GUEST_CARD IS NULL) THEN
			SET TICK_GUEST_CARD=('null');
		END IF;		
		IF TICK_PTD IS NOT NULL THEN
			IF TICK_CARD_NO IS NOT NULL THEN
				IF (USERSTAMP_ID!=OLD_ULD_ID) THEN
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=',TUTDCUASDID,',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));	
				ELSE
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=',TUTDCUASDID,',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));	
				END IF;
			END IF;
			IF TICK_CARD_NO IS NULL THEN
				IF (USERSTAMP_ID!=OLD_ULD_ID) THEN
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=null',',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));	
				ELSE
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=null',',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_PRETERMINATE_DATE=',TICK_PTD,',CLP_TERMINATE=null',',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));	
				END IF;	
			END IF;
		ELSE
			IF TICK_CARD_NO IS NOT NULL THEN
				IF (USERSTAMP_ID!=OLD_ULD_ID) THEN
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=',TUTDCUASDID,',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_ENDDATE=',TICK_ENDDATE,',CLP_TERMINATE=null',',ULD_ID=',OLD_ULD_ID,',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));
				ELSE
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=',TUTDCUASDID,',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_ENDDATE=',TICK_ENDDATE,',CLP_TERMINATE=null',',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));
				END IF;	
			END IF;
			IF TICK_CARD_NO IS NULL THEN
				IF (USERSTAMP_ID!=OLD_ULD_ID) THEN
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=null',',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_ENDDATE=',TICK_ENDDATE,',CLP_TERMINATE=null'',ULD_ID=',OLD_ULD_ID,',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));
				ELSE
					SET TICK_OLD_TERMVALUE=(SELECT CONCAT('CLP_ID=',DCCTDID,',CED_REC_VER=',TICK_REC_VER,',UASD_ID=null',',CLP_GUEST_CARD=',TICK_GUEST_CARD,',CLP_ENDDATE=',TICK_ENDDATE,',CLP_TERMINATE=null',',CLP_TIMESTAMP=',(SELECT CLP_TIMESTAMP FROM CUSTOMER_LP_DETAILS WHERE CLP_ID=DCCTDID)));
				END IF;	
			END IF;
		END IF;
		SET TICK_NEW_TERMVALUE='CLP_TERMINATE=X';
		INSERT INTO TICKLER_HISTORY(TP_ID,TTIP_ID,TH_OLD_VALUE,TH_NEW_VALUE,ULD_ID,CUSTOMER_ID)values(1,14,TICK_OLD_TERMVALUE,TICK_NEW_TERMVALUE,USERSTAMP_ID,CUST_ID);
		SET SUCCESSFLAG = 1;
		SET TUTDC_MINID = TUTDC_MINID+1;
	END WHILE;
	SET @DROP_TEMP_UNTERM_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',TEMP_UNTERM_CUSTOMER,''));
	PREPARE DROP_TEMP_UNTERM_CUSTOMER_STMT FROM @DROP_TEMP_UNTERM_CUSTOMER;
	EXECUTE DROP_TEMP_UNTERM_CUSTOMER_STMT;
	SET @DROP_FINAL_TERMINATE_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',FINAL_TERMINATE_CUSTOMER,''));
	PREPARE DROP_FINAL_TERMINATE_CUSTOMER_STMT FROM @DROP_FINAL_TERMINATE_CUSTOMER;
	EXECUTE DROP_FINAL_TERMINATE_CUSTOMER_STMT;
	SET @DROP_TERMINATED_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',TERMINATED_CUSTOMER,''));
	PREPARE DROP_TERMINATED_CUSTOMER_STMT FROM @DROP_TERMINATED_CUSTOMER;
	EXECUTE DROP_TERMINATED_CUSTOMER_STMT;
	SET @DROP_ACTIVE_CUSTOMER = (SELECT CONCAT('DROP TABLE IF EXISTS ',ACTIVE_CUSTOMER,''));
	PREPARE DROP_ACTIVE_CUSTOMER_STMT FROM @DROP_ACTIVE_CUSTOMER;
	EXECUTE DROP_ACTIVE_CUSTOMER_STMT;
	SET @DROP_TEMP_NON_TERM=(SELECT CONCAT('DROP TABLE IF EXISTS ',NON_TERMINATE_CUSTOMER));
	PREPARE DROP_TEMP_NON_TERM_STMT FROM @DROP_TEMP_NON_TERM;
	EXECUTE DROP_TEMP_NON_TERM_STMT;
COMMIT;
END;