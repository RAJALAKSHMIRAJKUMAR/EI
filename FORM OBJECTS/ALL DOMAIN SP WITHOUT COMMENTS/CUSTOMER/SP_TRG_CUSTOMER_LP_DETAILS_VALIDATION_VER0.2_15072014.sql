DROP PROCEDURE IF EXISTS SP_TRG_CUSTOMER_LP_DETAILS_VALIDATION;
CREATE PROCEDURE SP_TRG_CUSTOMER_LP_DETAILS_VALIDATION(
IN NEWCLPID INTEGER,
IN NEWCUSTOMERID INTEGER,
IN NEWRECVER INTEGER,
IN NEWUASDID INTEGER,
IN NEWSTARTDATE DATE,
IN NEWENDDATE DATE,
IN NEWPRETERMINATEDATE DATE,
IN NEWTERMINATE CHAR(1),
IN NEWGUESTCARD CHAR(1),
IN PROCESS TEXT)
BEGIN
	DECLARE UNITID INTEGER;
	DECLARE UNITSTARTDATE DATE;
	DECLARE ENDDATE DATE;
	DECLARE UNITENDDATE DATE;
	DECLARE MESSAGE_TEXT VARCHAR(50);
	DECLARE OLDRECVER INTEGER;
	DECLARE RECVER INTEGER;
	SET OLDRECVER = (SELECT CED_REC_VER FROM CUSTOMER_LP_DETAILS WHERE CLP_ID = NEWCLPID);
	SET UNITID = (SELECT UNIT_ID FROM CUSTOMER_ENTRY_DETAILS WHERE CUSTOMER_ID = NEWCUSTOMERID AND CED_REC_VER = NEWRECVER);
	SET UNITSTARTDATE = (SELECT UD_START_DATE FROM UNIT_DETAILS WHERE UNIT_ID = UNITID);
	SET ENDDATE = (SELECT UD_END_DATE FROM UNIT_DETAILS WHERE UNIT_ID = UNITID);
	SET UNITENDDATE = (SELECT DATE_SUB(ENDDATE,INTERVAL 1 DAY));
	SET RECVER=(SELECT CED_REC_VER FROM  CUSTOMER_LP_DETAILS WHERE CUSTOMER_ID=NEWCUSTOMERID AND CED_REC_VER=NEWRECVER AND CLP_GUEST_CARD IS NULL);
    IF(PROCESS = 'INSERT') OR (PROCESS='UPDATE') THEN
        IF NEWUASDID IS NOT NULL THEN
            IF NOT EXISTS(SELECT UASD_ID FROM UNIT_ACCESS_STAMP_DETAILS WHERE UASD_ID = NEWUASDID) THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'UASD_ID NOT IN UNIT_ACCESS_STAMP_DETAILS';
            END IF;
        END IF;
        IF NEWENDDATE <= NEWSTARTDATE THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'CUSTOMER ENDDATE SHOULD GREATER THAN STARTDATE';
        END IF;    
        IF NEWSTARTDATE < UNITSTARTDATE THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'CUSTOMER STARTDATE SHOULD GREATER THAN UNIT STARTDATE';
        END IF;    
        IF NEWENDDATE > UNITENDDATE THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'CUSTOMER ENDDATE SHOULD LESS THAN UNIT ENDDATE';
        END IF;    
        IF NEWSTARTDATE > NEWPRETERMINATEDATE THEN
            IF NEWTERMINATE = 'X' THEN
                SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = 'INVALID PERIOD SHOULD NOT UPDATE AS TERMINATE="X"';
            END IF;    
        END IF;
	END IF;
	IF PROCESS = 'UPDATE' THEN
		IF OLDRECVER != NEWRECVER THEN
			IF (RECVER IS NOT NULL) OR (RECVER != ' ') THEN	
				IF NEWGUESTCARD IS NULL THEN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = 'GIVE VALID RECVER! THIS RECVER ALREADY EXISTS............';
				END IF;
			END IF;
		END IF; 
	END IF;
	IF PROCESS = 'INSERT' THEN
		IF (RECVER IS NOT NULL) OR (RECVER != ' ') THEN	
			IF NEWGUESTCARD IS NULL THEN
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'GIVE VALID RECVER! THIS RECVER ALREADY EXISTS';
			END IF;
		END IF; 
	END IF;
END;