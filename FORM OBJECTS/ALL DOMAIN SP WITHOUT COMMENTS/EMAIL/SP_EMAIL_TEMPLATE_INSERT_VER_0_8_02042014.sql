DROP PROCEDURE IF EXISTS SP_EMAIL_TEMPLATE_INSERT;
CREATE PROCEDURE SP_EMAIL_TEMPLATE_INSERT(
IN EMAIL_SCRIPT VARCHAR(100),
IN EMAIL_SUBJECT VARCHAR(1000),
IN EMAIL_BODY VARCHAR(1000),
IN USERSTAMP VARCHAR(50),
OUT FLAG INTEGER)
BEGIN
DECLARE USERSTAMP_ID INTEGER(2);
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
SET FLAG = 0;
CALL SP_CHANGE_USERSTAMP_AS_ULDID(USERSTAMP,@ULDID);
SET USERSTAMP_ID = (SELECT @ULDID);
IF (EMAIL_SCRIPT IS NOT NULL AND EMAIL_SUBJECT IS NOT NULL AND EMAIL_BODY IS NOT NULL AND USERSTAMP IS NOT NULL)THEN
IF NOT EXISTS(SELECT ET_EMAIL_SCRIPT FROM EMAIL_TEMPLATE WHERE ET_EMAIL_SCRIPT=EMAIL_SCRIPT)THEN
INSERT INTO EMAIL_TEMPLATE(ET_EMAIL_SCRIPT)VALUES(EMAIL_SCRIPT);
set flag=1;
END IF;
IF NOT EXISTS(SELECT ET_ID FROM EMAIL_TEMPLATE_DETAILS WHERE ET_ID=(SELECT ET_ID FROM EMAIL_TEMPLATE WHERE ET_EMAIL_SCRIPT=EMAIL_SCRIPT))THEN
INSERT INTO EMAIL_TEMPLATE_DETAILS(ET_ID,ETD_EMAIL_SUBJECT,ETD_EMAIL_BODY,ULD_ID)VALUES((SELECT ET_ID FROM EMAIL_TEMPLATE WHERE ET_EMAIL_SCRIPT=EMAIL_SCRIPT),EMAIL_SUBJECT,EMAIL_BODY,USERSTAMP_ID);
set flag=1;
END IF;
END IF;
COMMIT;
END;