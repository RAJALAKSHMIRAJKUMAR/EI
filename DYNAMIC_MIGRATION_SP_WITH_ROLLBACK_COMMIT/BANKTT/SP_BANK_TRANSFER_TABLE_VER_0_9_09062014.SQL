-- VERSION 0.9 -- SDATE:09-06-2014 -- EDATE:09-06-2014 -- ISSUE:566  -- DESC:IMPLEMENTING COMMIT AND ROLLBACK -- DONE BY:BHAVANI.R
--VERSION:0.8 --SDATE:21/05/2014 --EDATE:21/05/2014 --ISSUE --DESC:CHANGED TIME STAMP DATA TYPE (VARCHAR(50) TO TIMESTAMP) --DONEBY:RL
-- VERSION 0.7 -- SDATE:05-04-2014 -- EDATE:05-04-2014 -- ISSUE:802  -- DESC:CHANGING SP SP_BANK_TRANSFER_TABLE FOR WRONG MIGRATION OF TIMESTAMP -- DONE BY:BHAVANI.R
-- VERSION 0.6 -- SDATE:26-03-2014 -- EDATE:27-03-2014 -- ISSUE:765  -- COMMENT NO:#8 -- DESC:CHANGING SP SP_BANK_TRANSFER_TABLE AS PREPARED STATEMENTS FOR DYNAMIC RUNNING PURPOSE -- DONE BY:BHAVANI.R
-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
-- version:0.4 --sdate:25/02/2014 --edate:26/02/2014 --issue:750 COMMENT :#30 -desc:CHANGED TIMESTAMP AS SOURCE TIMESTAMP & ALTERED USERSTAMP COLUMN AS ULD_ID done by:dhivya

-- CREATE QUERY FOR BANK_TRANSFER AND BANK_TRANSFER_STATUS_DETAILS

DROP PROCEDURE IF EXISTS SP_BANK_TRANSFER_TABLE;
CREATE PROCEDURE SP_BANK_TRANSFER_TABLE(IN SOURCESCHEMA VARCHAR(50),IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(50))
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
SET FOREIGN_KEY_CHECKS=0;
-- STATEMENT FOR CHANGING MIGUSERSTAMP AS ULD_ID 
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
	PREPARE LOGINID FROM @LOGIN_ID;
	EXECUTE LOGINID;

-- STATEMENT FOR DROPPING BANK_TRANSFER 
	SET @DROP_BANK_TRANSFER=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.BANK_TRANSFER'));
	PREPARE DBANKTRANSFER FROM @DROP_BANK_TRANSFER;
    EXECUTE DBANKTRANSFER;
	
-- STATEMENT FOR CREATING BANK_TRANSFER
    SET @CREATE_BANK_TRANSFER=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.BANK_TRANSFER( 
	BT_ID INTEGER NOT NULL AUTO_INCREMENT,
	BTM_ID INTEGER,	
	BT_DATE	DATE NOT NULL,
	BT_AMOUNT DECIMAL(7,2) NOT NULL,
	BT_ACC_NAME	VARCHAR(40),
	BT_ACC_NO VARCHAR(25),
	BT_BANK_CODE VARCHAR(4),
	BT_BRANCH_CODE VARCHAR(3),
	BT_BANK_ADDRESS VARCHAR(250),
	BT_SWIFT_CODE VARCHAR(12),
	BT_CUST_REF	VARCHAR(200),
	BT_INV_DETAILS TEXT,
	BT_DEBITED_ON DATE,BT_COMMENTS	TEXT,
	ULD_ID INT(2) NOT NULL,
	BT_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(BT_ID),
	FOREIGN KEY(ULD_ID) REFERENCES USER_LOGIN_DETAILS(ULD_ID))'));
    PREPARE CBANKTRANSFER FROM @CREATE_BANK_TRANSFER;
    EXECUTE CBANKTRANSFER;
	
	
-- STATEMENT FOR DROPPING BANK_TRANSFER_STATUS_DETAILS
	SET @DROP_BANK_TRANSFER_STATUS_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.BANK_TRANSFER_STATUS_DETAILS'));
	PREPARE DBANKTRANSFERSTATUSDETAILS FROM @DROP_BANK_TRANSFER_STATUS_DETAILS;
    EXECUTE DBANKTRANSFERSTATUSDETAILS;
	
-- STATEMENT FOR CREATING BANK_TRANSFER_STATUS_DETAILS

    SET @CREATE_BANK_TRANSFER_STATUS_DETAILS=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.BANK_TRANSFER_STATUS_DETAILS( 
	BTSD_ID INTEGER NOT NULL AUTO_INCREMENT,
	BT_ID INTEGER NOT NULL,
	BCN_ID INTEGER NOT NULL,
	CGN_ID INTEGER NOT NULL,
	PRIMARY KEY(BTSD_ID),
	FOREIGN KEY(BT_ID) REFERENCES BANK_TRANSFER(BT_ID),
	FOREIGN KEY(BCN_ID) REFERENCES BANKTT_CONFIGURATION(BCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES CONFIGURATION(CGN_ID))'));
    PREPARE CBANKTRANSFERSTATUSDETAILS FROM @CREATE_BANK_TRANSFER_STATUS_DETAILS;
    EXECUTE CBANKTRANSFERSTATUSDETAILS;
	
SET FOREIGN_KEY_CHECKS=1;
COMMIT;
END;

CALL SP_BANK_TRANSFER_TABLE('SOURCE_SCHEMA','DESTINATION_SCHEMA','EXPATSINTEGRATED@GMAIL.COM');