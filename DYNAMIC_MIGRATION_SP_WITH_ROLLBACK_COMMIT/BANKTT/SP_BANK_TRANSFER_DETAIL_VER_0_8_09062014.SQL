-- VERSION 0.8 -- SDATE:09-06-2014 -- EDATE:09-06-2014 -- ISSUE:566  -- DESC:IMPLEMENTING COMMIT AND ROLLBACK -- DONE BY:BHAVANI.R
-- VERSION 0.7 -- SDATE:05-04-2014 -- EDATE:05-04-2014 -- ISSUE:802  -- DESC:CHANGING SP SP_BANK_TRANSFER_DETAIL FOR WRONG MIGRATION OF TIMESTAMP -- DONE BY:BHAVANI.R
-- VERSION 0.6 -- SDATE:26-03-2014 -- EDATE:27-03-2014 -- ISSUE:765  -- COMMENT NO:#8 -- DESC:CHANGING SP SP_BANK_TRANSFER_DETAIL AS PREPARED STATEMENTS FOR DYNAMIC RUNNING PURPOSE -- DONE BY:BHAVANI.R
-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
-- version:0.4 --sdate:25/02/2014 --edate:26/02/2014 --issue:750 COMMENT :#30 -desc:CHANGED TIMESTAMP AS SOURCE TIMESTAMP & ALTERED USERSTAMP COLUMN AS ULD_ID done by:dhivya

--INSERT QUERY FOR BANK_TRANSFER_DETAIL TABLE
DROP PROCEDURE IF EXISTS SP_BANK_TRANSFER_DETAIL;
CREATE PROCEDURE SP_BANK_TRANSFER_DETAIL(IN SOURCESCHEMA VARCHAR(50),IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(50))
BEGIN
 DECLARE  DONE INT DEFAULT FALSE;
 DECLARE UNITNO INTEGER;
 DECLARE CUSTOMERNAME VARCHAR(50);
 DECLARE BTID INTEGER;
 DECLARE CUSTOMERID INTEGER;
 DECLARE START_TIME TIME;
 DECLARE END_TIME TIME;
 DECLARE DURATION TIME;
 DECLARE FILTER_CURSOR CURSOR FOR
 	SELECT BT_SNO,BT_CUSTOMER,BT_UNIT FROM VW_TEMP_MIG_BANK_TRANSFER;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
 DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
-- STATEMENT FOR CHANGING MIGUSERSTAMP AS ULD_ID 
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
	PREPARE LOGINID FROM @LOGIN_ID;
	EXECUTE LOGINID;

	SET @VW_TEMP_BANKTT_CUSTOMER=(SELECT CONCAT('CREATE OR REPLACE VIEW VW_TEMP_BANKTT_CUSTOMER AS SELECT C.CC_CUST_ID,IF(C.CC_FIRST_NAME=C.CC_LAST_NAME, C.CC_FIRST_NAME, CONCAT(C.CC_FIRST_NAME,'"' '"',C.CC_LAST_NAME)) AS CUSTOMER_NAME,CC_UNIT_NO FROM ',DESTINATIONSCHEMA,'.TEMP_CUSTOMER_SCDB_FORMAT C'));
	PREPARE TEMP_BANKTT_CUSTOMER_STMT FROM @VW_TEMP_BANKTT_CUSTOMER;
	EXECUTE TEMP_BANKTT_CUSTOMER_STMT;


	SET @VW_TEMP_MIG_BANK_TRANSFER=(SELECT CONCAT('CREATE OR REPLACE VIEW VW_TEMP_MIG_BANK_TRANSFER AS SELECT BT_SNO,BT_CUSTOMER,BT_UNIT FROM ',DESTINATIONSCHEMA,'.TEMP_MIG_BANK_TRANSFER WHERE BT_TRANSACTION_TYPE='"'TT'"' OR BT_TRANSACTION_TYPE='"'GIRO'"));
	PREPARE TEMP_MIG_BANK_TRANSFER_STMT FROM @VW_TEMP_MIG_BANK_TRANSFER;
	EXECUTE TEMP_MIG_BANK_TRANSFER_STMT;


	SET START_TIME=(SELECT CURTIME());
	CALL SP_BANK_TRANSFER_DETAIL_TABLE(SOURCESCHEMA,DESTINATIONSCHEMA,MIGUSERSTAMP);
	OPEN FILTER_CURSOR;
	read_loop: LOOP
	FETCH FILTER_CURSOR INTO BTID,CUSTOMERNAME,UNITNO;
	SET @BT_ID=BTID;
	SET @CUSTOMER_NAME=CUSTOMERNAME;
	SET @BUNIT_NO=UNITNO;
IF DONE THEN
      LEAVE read_loop;
END IF;
    SET CUSTOMERID=(SELECT DISTINCT CC_CUST_ID FROM VW_TEMP_BANKTT_CUSTOMER WHERE CUSTOMER_NAME=@CUSTOMER_NAME AND CC_UNIT_NO=@BUNIT_NO);

	IF CUSTOMERID IS NOT NULL THEN
	SET @CUSTOMER_ID=CUSTOMERID;
	SET FOREIGN_KEY_CHECKS=0;
	
	SET @INSERT_BANK_TRANSFER_DETAIL=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER_DETAIL(UNIT_ID,CUSTOMER_ID,BT_ID) VALUES((SELECT UNIT_ID FROM ',DESTINATIONSCHEMA,'.UNIT WHERE UNIT_NO=@BUNIT_NO),@CUSTOMER_ID,@BT_ID)'));
    PREPARE INSERTBANKTRANSFERDETAIL FROM @INSERT_BANK_TRANSFER_DETAIL; 
    EXECUTE INSERTBANKTRANSFERDETAIL;
	
	ELSE
	SET @INSERT_BANK_TRANSFER_DETAIL=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER_DETAIL(UNIT_ID,CUSTOMER_ID,BT_ID) VALUES((SELECT UNIT_ID FROM ',DESTINATIONSCHEMA,'.UNIT WHERE UNIT_NO=@BUNIT_NO),(SELECT DISTINCT CC_CUST_ID FROM VW_TEMP_BANKTT_CUSTOMER WHERE CUSTOMER_NAME=@CUSTOMER_NAME),@BT_ID)'));
    PREPARE INSERTBANKTRANSFERDETAIL FROM @INSERT_BANK_TRANSFER_DETAIL; 
    EXECUTE INSERTBANKTRANSFERDETAIL;
	
	END IF;
END LOOP;
CLOSE FILTER_CURSOR;
	SET END_TIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

	SET @COUNT_SCDB_BTD=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_BTD FROM ',SOURCESCHEMA,'.MIG_BANK_TRANSFER WHERE BT_TRANSACTION_TYPE='"'GIRO'"' OR BT_TRANSACTION_TYPE='"'TT'"));
	PREPARE COUNTSCDBBTSD FROM @COUNT_SCDB_BTD;
	EXECUTE COUNTSCDBBTSD;
	SET @COUNT_SPITTED_BTD=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPITTED_BTD FROM ',DESTINATIONSCHEMA,'.BANK_TRANSFER_DETAIL'));
	PREPARE COUNTSPITTEDBTD FROM @COUNT_SPITTED_BTD;
	EXECUTE COUNTSPITTEDBTD;

	SET @REJECTION_COUNT=(@COUNT_SCDB_BTD-@COUNT_SPITTED_BTD);

UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_BTD WHERE PREASP_DATA='BANK_TRANSFER_DETAIL';
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE

    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'BANK_TRANSFER_DETAIL'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;
	
    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'BANK_TRANSFER_DETAIL'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'BANKTT'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPITTED_BTD,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);


SET FOREIGN_KEY_CHECKS=1;
COMMIT;
END;

CALL SP_BANK_TRANSFER_DETAIL('SOURCE_SCHEMA','DESTINATION_SCHEMA','EXPATSINTEGRATED@GMAIL.COM');