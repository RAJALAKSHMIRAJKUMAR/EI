-- VERSION 0.9 -- SDATE:17-06-2014 -- EDATE:17-06-2014 -- ISSUE:803  comment:105 -- DESC:CHANGED QUERY FOR INSERTING ULD_ID AND CHANGED VAR NAME FOR BANKCODE -- DONE BY:DHIVYA.A
-- VERSION 0.8 -- SDATE:09-06-2014 -- EDATE:09-06-2014 -- ISSUE:566  -- DESC:IMPLEMENTING COMMIT AND ROLLBACK -- DONE BY:BHAVANI.R
-- VERSION 0.7 -- SDATE:05-04-2014 -- EDATE:05-04-2014 -- ISSUE:802  -- DESC:CHANGING SP SP_MIG_BANKTT FOR WRONG MIGRATION OF TIMESTAMP -- DONE BY:BHAVANI.R
-- VERSION 0.6 -- SDATE:26-03-2014 -- EDATE:27-03-2014 -- ISSUE:765  -- COMMENT NO:#8 -- DESC:CHANGING SP SP_MIG_BANKTT AS PREPARED STATEMENTS FOR DYNAMIC RUNNING PURPOSE -- DONE BY:BHAVANI.R
-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
-- version:0.4 --sdate:25/02/2014 --edate:26/02/2014 --issue:750 COMMENT :#30 -desc:CHANGED TIMESTAMP AS SOURCE TIMESTAMP & ALTERED USERSTAMP COLUMN AS ULD_ID done by:dhivya

-- SP FOR INSERTING BANK_TRANSFER AND BANK_TRANSFER_STATUS_DETAILS
DROP PROCEDURE IF EXISTS SP_MIG_BANKTT;
CREATE PROCEDURE SP_MIG_BANKTT(IN SOURCESCHEMA VARCHAR(50),IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(50))
BEGIN
DECLARE  DONE INT DEFAULT FALSE;
DECLARE BTID INTEGER;
DECLARE BTTDATA VARCHAR(100);
DECLARE BTDATE DATE;
DECLARE BTACCNO VARCHAR(25);
DECLARE BTACCNAME VARCHAR(40);
DECLARE BTAMOUNT DECIMAL(7,2);
DECLARE BTSDATA VARCHAR(20);
DECLARE BTDEBITEDON DATE;
DECLARE BTBANKCODE VARCHAR(4);
DECLARE BTBRANCHCODE VARCHAR(3);
DECLARE BTBANKADDRESS VARCHAR(250);
DECLARE BTSWIFTCODE VARCHAR(12);
DECLARE BTCUSTREF VARCHAR(200);
DECLARE BTINVDETAILS TEXT;
DECLARE BTCOMMENTS TEXT;
DECLARE ULDID INTEGER;
DECLARE BTTIMESTAMP VARCHAR(50);
DECLARE BTCTDATA VARCHAR(50);
DECLARE BTCBDATA VARCHAR(50);
DECLARE FILTER_CURSOR CURSOR FOR 
SELECT BT_ID,BTT_DATA,BT_DATE,BT_ACC_NO,BT_ACC_NAME,BT_AMOUNT,BTS_DATA,BT_DEBITED_ON,BT_BANK_CODE,BT_BRANCH_CODE,BT_BANK_ADDRESS,BT_SWIFT_CODE,BTCT_DATA,BT_CUST_REF,BT_INV_DETAILS,BTCB_DATA,BT_COMMENTS,ULD_ID,BT_TIMESTAMP FROM VW_BANK_TRANSFER;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
SET @VW_BANK_TRANSFER=(SELECT CONCAT('CREATE OR REPLACE VIEW VW_BANK_TRANSFER AS SELECT BT_ID,BTT_DATA,BT_DATE,BT_ACC_NO,BT_ACC_NAME,BT_AMOUNT,BTS_DATA,BT_DEBITED_ON,BT_BANK_CODE,BT_BRANCH_CODE,BT_BANK_ADDRESS,BT_SWIFT_CODE,BTCT_DATA,BT_CUST_REF,BT_INV_DETAILS,BTCB_DATA,BT_COMMENTS,ULD_ID,BT_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_BANKTT_TABLE'));
PREPARE BANKTRANSFER_STMT FROM @VW_BANK_TRANSFER;
EXECUTE BANKTRANSFER_STMT;
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
	PREPARE LOGINID FROM @LOGIN_ID;
	EXECUTE LOGINID;
OPEN FILTER_CURSOR;
read_loop: LOOP
FETCH FILTER_CURSOR INTO BTID,BTTDATA,BTDATE,BTACCNO,BTACCNAME,BTAMOUNT,BTSDATA,BTDEBITEDON,BTBANKCODE,BTBRANCHCODE,BTBANKADDRESS,BTSWIFTCODE,BTCTDATA,BTCUSTREF,BTINVDETAILS,BTCBDATA,BTCOMMENTS,ULDID,BTTIMESTAMP;
IF DONE THEN
      LEAVE read_loop;
END IF;
SET @BT_ID=BTID;
SET @BT_TDATA=BTTDATA;
SET @BT_DATE=BTDATE;
SET @BT_ACCNO=BTACCNO;
SET @BT_ACCNAME=BTACCNAME;
SET @BT_AMOUNT=BTAMOUNT;
SET @BT_SDATA=BTSDATA;
SET @BT_DEBITEDON=BTDEBITEDON;
SET @BT_BANKCODE=BTBANKCODE;
SET @BT_BRANCHCODE=BTBRANCHCODE;
SET @BT_BANKADDRESS=BTBANKADDRESS;
SET @BT_SWIFTCODE=BTSWIFTCODE;
SET @BT_CUSTREF=BTCUSTREF;
SET @BT_INVDETAILS=BTINVDETAILS;
SET @BT_COMMENTS=BTCOMMENTS;
SET @BT_TIMESTAMP=BTTIMESTAMP;
SET @BT_CTDATA=BTCTDATA;
SET @BT_CBDATA=BTCBDATA;
SET @USERSTAMP_ID=ULDID;
 	SET @INSERT_BANK_TRANSFER=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER(BT_ID,BTM_ID,BT_DATE,BT_AMOUNT,BT_ACC_NAME,BT_ACC_NO,BT_BANK_CODE,BT_BRANCH_CODE,BT_BANK_ADDRESS,BT_SWIFT_CODE,BT_CUST_REF,BT_INV_DETAILS,BT_DEBITED_ON,BT_COMMENTS,ULD_ID,BT_TIMESTAMP) VALUES(@BT_ID,(SELECT BTM_ID FROM ',DESTINATIONSCHEMA,'.BANK_TRANSFER_MODELS WHERE BTM_DATA=@BT_TDATA),@BT_DATE,@BT_AMOUNT,@BT_ACCNAME,@BT_ACCNO,@BT_BANKCODE,@BT_BRANCHCODE,@BT_BANKADDRESS,@BT_SWIFTCODE,@BT_CUSTREF,@BT_INVDETAILS,@BT_DEBITEDON,@BT_COMMENTS,@USERSTAMP_ID,@BT_TIMESTAMP)'));
    PREPARE INSERTBANKTRANSFER FROM @INSERT_BANK_TRANSFER; 
    EXECUTE INSERTBANKTRANSFER;
	IF BTTDATA='GIRO' OR BTTDATA='TT' THEN
		SET @INSERT_BANK_TRANSFER_STATUS_DETAILS=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER_STATUS_DETAILS(BT_ID,CGN_ID,BCN_ID) VALUES(@BT_ID,(SELECT CGN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_TDATA),(SELECT BCN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_TDATA))'));
		PREPARE INSERTBANKTRANSFER FROM @INSERT_BANK_TRANSFER_STATUS_DETAILS; 
		EXECUTE INSERTBANKTRANSFER;
	END IF;
	IF @BT_SDATA!=' ' THEN
		SET @INSERT_BANK_TRANSFER_STATUS_DETAILS=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER_STATUS_DETAILS(BT_ID,CGN_ID,BCN_ID) VALUES(@BT_ID,(SELECT CGN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_SDATA),(SELECT BCN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_SDATA))'));
		PREPARE INSERTBANKTRANSFER FROM @INSERT_BANK_TRANSFER_STATUS_DETAILS; 
		EXECUTE INSERTBANKTRANSFER;
	END IF;
	IF @BT_CTDATA!=' ' THEN
		SET @INSERT_BANK_TRANSFER_STATUS_DETAILS=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER_STATUS_DETAILS(BT_ID,CGN_ID,BCN_ID) VALUES(@BT_ID,(SELECT CGN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_CTDATA),(SELECT BCN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_CTDATA))'));
		PREPARE INSERTBANKTRANSFER FROM @INSERT_BANK_TRANSFER_STATUS_DETAILS; 
		EXECUTE INSERTBANKTRANSFER;
	END IF;
	IF @BT_CBDATA!=' '  THEN
		SET @INSERT_BANK_TRANSFER_STATUS_DETAILS=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANK_TRANSFER_STATUS_DETAILS(BT_ID,CGN_ID,BCN_ID) VALUES(@BT_ID,(SELECT CGN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_CBDATA),(SELECT BCN_ID FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION WHERE BCN_DATA=@BT_CBDATA))'));
		PREPARE INSERTBANKTRANSFER FROM @INSERT_BANK_TRANSFER_STATUS_DETAILS; 
		EXECUTE INSERTBANKTRANSFER;
	END IF;
END LOOP;
CLOSE FILTER_CURSOR;
COMMIT;
END;

CALL SP_MIG_BANKTT('SOURCE_SCHEMA','DESTINATION_SCHEMA','EXPATSINTEGRATED@GMAIL.COM');