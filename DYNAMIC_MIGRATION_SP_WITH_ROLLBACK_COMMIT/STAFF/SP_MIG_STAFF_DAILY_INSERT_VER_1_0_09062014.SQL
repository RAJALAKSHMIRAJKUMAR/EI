-- VER:1.0 STARTDATE:09/06/2014 ENDDATE:09/06/2014 ISSUENO:566 COMMENTNO:#14 DESC:IMPLEMENTING ROLLBACK AND COMMIT  DONE BY:BHAVANI.R
--VER 0.9 ISSUE NO:765 STARTDATE:22/04/2014 ENDDATE:22/04/2014 DESC:CHANGED EXPENSE_STAFF SALARY JOIN QUERY DONE BY:DHIVYA
-- VER:0.8 STARTDATE:21/04/2014 ENDDATE:21/04/2014 ISSUENO:765 COMMENTNO:#93 DESC:UPDATED TIMESTAMP DONE BY:SASIKALA
-- VER:0.7 STARTDATE:28/03/2014 ENDDATE:28/03/2014 ISSUENO:765 COMMENTNO:#8 DESC:CHANGED THE SP:SP_MIG_STAFF_DAILY_INSERT CHANGED THE SCHEMA FOR INSERTION IN POST AUDIT HISTORY AND UPDATION IN PRE AUDIT SUB PROFILE DONE  AND PUT SCHEMA IN FOREIGN KEYS DONE BY:LALITHA
-- VER:0.6 STARTDATE:19/03/2014 ENDDATE:20/03/2014 ISSUENO:765 COMMENTNO:#8 DESC:CHANGED THE SP:SP_MIG_STAFF_DAILY_INSERT AS PREPARED STMT FOR DYNAMIC RUNNING PURPOSE  DONE BY:LALITHA
-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
-- VERSION 0.4- sdate:25/02/2014 --edate:25/02/2014--ISSUE:750--DESC-ADDING SOURCE TIMESTAMP AND CHANGING USAERSTAMP TO ULD_ID-SAFI
-- version:0.3 --sdate:22/02/2014 --edate:22/02/2014 --issue:750 --desc:implementing audit queries --doneby:RL
-- VER 0.2 ISSUE NO:594 COMMENT NO:#54 STARTDATE:22/01/2014 ENDDATE:22/01/2014 DESC:INVOICE ITEMS AND ITEM FROM UPDATION DONE IN THE TEMP TABLE AND CHANGED MIGRATION.STAFF_DAILY_SCDB_FORMAT AS STAFF_DAILY_SCDB_FORMAT AND  MIGRATION.STAFF_DETAIL_SCDB_FORMAT AS STAFF_DETAIL_SCDB_FORMAT DONE BY DHIVYA



DROP PROCEDURE IF EXISTS SP_MIG_STAFF_DAILY_INSERT;
CREATE PROCEDURE SP_MIG_STAFF_DAILY_INSERT(IN SOURCESCHEMA  VARCHAR(40),IN DESTINATIONSCHEMA  VARCHAR(40),IN USER_STAMP VARCHAR(50))
BEGIN
-- DECLARING VARIABLES
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
  DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
	SET FOREIGN_KEY_CHECKS=0;
-- STATEMENT FOR CHANGING USERSTAMP AS ULD_ID
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',USER_STAMP,'"'));
    PREPARE LOGINID FROM @LOGIN_ID;
    EXECUTE LOGINID;
-- 1.QUERY FOR DROP EXPENSE_STAFF_SALARY
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_EXPENSE_STAFF_SALARY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_STAFF_SALARY'));
	PREPARE DROP_EXPENSE_STAFF_SALARY_STMT FROM @DROP_EXPENSE_STAFF_SALARY;
    EXECUTE DROP_EXPENSE_STAFF_SALARY_STMT;
-- QUERY FOR CREATE EXPENSE_STAFF_SALARY
    SET @CREATE_EXPENSE_STAFF_SALARY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_STAFF_SALARY(ESS_ID	INTEGER NOT NULL AUTO_INCREMENT,EDSS_ID	INTEGER NOT NULL,ESS_INVOICE_DATE DATE NOT NULL,ESS_FROM_PERIOD	DATE NOT NULL,ESS_TO_PERIOD DATE NOT NULL,ESS_CPF_AMOUNT DECIMAL(7,2) NULL,ESS_LEVY_AMOUNT	DECIMAL(7,2) NULL,ESS_SALARY_AMOUNT DECIMAL(7,2) NOT NULL,ESS_SALARY_COMMENTS	TEXT NULL,ULD_ID INT(2) NOT NULL,ESS_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY(ESS_ID),FOREIGN KEY(EDSS_ID) REFERENCES ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_STAFF_SALARY (EDSS_ID),FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID ))'));
	PREPARE CREATE_EXPENSE_STAFF_SALARY_STMT FROM @CREATE_EXPENSE_STAFF_SALARY;
    EXECUTE CREATE_EXPENSE_STAFF_SALARY_STMT;
-- QUERY FOR INSERT VALUES IN EXPENSE_STAFF_SALARY
	SET @INSERT_EXPENSE_STAFF_SALARY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_STAFF_SALARY(EDSS_ID, ESS_INVOICE_DATE, ESS_FROM_PERIOD, ESS_TO_PERIOD, ESS_CPF_AMOUNT, ESS_LEVY_AMOUNT, ESS_SALARY_AMOUNT, ESS_SALARY_COMMENTS, ULD_ID,ESS_TIMESTAMP)SELECT SDES.EDSS_ID,STAFFDLY.SE_SALARY_INVOICE_DATE,
STAFFDLY.SE_SALARY_FROM_PERIOD, STAFFDLY.SE_SALARY_TO_PERIOD,
STAFFDLY.SE_CPF_AMOUNT, STAFFDLY.SE_LEVY_AMOUNT, STAFFDLY.SE_SALARY_AMOUNT, STAFFDLY.SE_SALARY_COMMENTS,
ULD.ULD_ID,STAFFDLY.TIMESTAMP FROM ',DESTINATIONSCHEMA,'.EMPLOYEE_DETAILS ED,',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_STAFF_SALARY SDES,',
SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT STAFFDLY,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE STAFFDLY.SE_SALARY_FIRST_NAME=ED.EMP_FIRST_NAME AND STAFFDLY.SE_SALARY_LAST_NAME=ED.EMP_LAST_NAME AND STAFFDLY.SE_TYPE_OF_EXPENSE="SALARY ENTRY" AND ULD.ULD_LOGINID=STAFFDLY.USERSTAMP AND ED.EMP_ID=SDES.EMP_ID
'));
   SET @UPDATETIMESTAMPSALARY=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'. EXPENSE_STAFF_SALARY SET ESS_TIMESTAMP=(SELECT CONVERT_TZ(ESS_TIMESTAMP, "+08:00","+0:00"))'));
PREPARE UPDATETIMESTAMPSALARYSTMT FROM @UPDATETIMESTAMPSALARY;
EXECUTE UPDATETIMESTAMPSALARYSTMT;
	PREPARE INSERT_EXPENSE_STAFF_SALARY_STMT FROM @INSERT_EXPENSE_STAFF_SALARY;
    EXECUTE INSERT_EXPENSE_STAFF_SALARY_STMT;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR EXPENSE_STAFF_SALARY DETAILS
	SET @COUNTEXPENSESTAFFSALARYSCDBFORMAT =(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_EXPENSE_STAFF_SALARY_SCDB_FORMAT FROM ',SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT WHERE SE_TYPE_OF_EXPENSE=''SALARY ENTRY'''));
	PREPARE COUNTEXPENSESTAFFSALARYSCDBFORMAT_STMT FROM @COUNTEXPENSESTAFFSALARYSCDBFORMAT;
    EXECUTE COUNTEXPENSESTAFFSALARYSCDBFORMAT_STMT;
-- COUNT SPLITING FOR EXPENSE_STAFF_SALARY DETAILS 
    SET @COUNTSPLITINGEXPENSESTAFFSALARY =(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_EXPENSE_STAFF_SALARY FROM ',DESTINATIONSCHEMA,'.EXPENSE_STAFF_SALARY'));
	PREPARE COUNTSPLITINGEXPENSESTAFFSALARY_STMT FROM @COUNTSPLITINGEXPENSESTAFFSALARY;
    EXECUTE COUNTSPLITINGEXPENSESTAFFSALARY_STMT;
	SET @REJECTION_COUNT=(@COUNT_EXPENSE_STAFF_SALARY_SCDB_FORMAT-@COUNT_SPLITING_EXPENSE_STAFF_SALARY);
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'EXPENSE_STAFF_SALARY'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;
    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'EXPENSE_STAFF_SALARY'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;
    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'STAFF DAILY'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
	EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_EXPENSE_STAFF_SALARY_SCDB_FORMAT WHERE PREASP_DATA='EXPENSE_STAFF_SALARY';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_EXPENSE_STAFF_SALARY,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);   
		
-- 2.QUERY FOR CREATE EXPENSE_AGENT
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_EXPENSE_AGENT=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_AGENT'));				
	PREPARE DROP_EXPENSE_AGENT_STMT FROM @DROP_EXPENSE_AGENT;
    EXECUTE DROP_EXPENSE_AGENT_STMT;
-- QUERY FOR CREATE EXPENSE_AGENT
	SET @CREATE_EXPENSE_AGENT=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_AGENT(EA_ID INTEGER NOT NULL AUTO_INCREMENT,EA_DATE	DATE NOT NULL,EA_COMM_AMOUNT DECIMAL(6,2) NOT NULL,EA_COMMENTS	TEXT NULL,ULD_ID INT(2) NOT NULL NOT NULL,EA_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY(EA_ID),FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID ))'));
	PREPARE CREATE_EXPENSE_AGENT_STMT FROM @CREATE_EXPENSE_AGENT;
    EXECUTE CREATE_EXPENSE_AGENT_STMT;
-- QUERY FOR INSERT VALUES IN EXPENSE_AGENT
	SET @INSERT_EXPENSE_AGENT=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_AGENT(EA_DATE, EA_COMM_AMOUNT, EA_COMMENTS, ULD_ID,EA_TIMESTAMP)SELECT SDSF.SE_AGENT_DATE, SDSF.SE_AGENT_COMM_AMOUNT, SDSF.SE_AGENT_COMMENTS, ULD.ULD_ID,SDSF.TIMESTAMP FROM ',SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT SDSF,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE SE_TYPE_OF_EXPENSE=''AGENT COMMISSION'' AND SDSF.USERSTAMP=ULD.ULD_LOGINID'));
	PREPARE INSERT_EXPENSE_AGENT_STMT FROM @INSERT_EXPENSE_AGENT;
    EXECUTE INSERT_EXPENSE_AGENT_STMT;
	 SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'. EXPENSE_AGENT SET EA_TIMESTAMP=(SELECT CONVERT_TZ(EA_TIMESTAMP, "+08:00","+0:00"))'));
PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
EXECUTE UPDATETIMESTAMPSTMT;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  CHECKING FOR EXPENSE_AGENT DETAILS
	SET @COUNTEXPENSEAGENTSCDBFORMAT =(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_EXPENSE_AGENT_SCDB_FORMAT FROM ',SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT WHERE SE_TYPE_OF_EXPENSE=''AGENT COMMISSION'''));
	PREPARE COUNTEXPENSEAGENTSCDBFORMAT_STMT FROM @COUNTEXPENSEAGENTSCDBFORMAT;
    EXECUTE COUNTEXPENSEAGENTSCDBFORMAT_STMT;
-- COUNT SPLITING FOR EXPENSE_AGENT DETAILS 
	SET @COUNTSPLITINGEXPENSEAGENT =(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_EXPENSE_AGENT FROM ',DESTINATIONSCHEMA,'.EXPENSE_AGENT'));
	PREPARE COUNTSPLITINGEXPENSEAGENT_STMT FROM @COUNTSPLITINGEXPENSEAGENT;
    EXECUTE COUNTSPLITINGEXPENSEAGENT_STMT;
	SET @REJECTION_COUNT=(@COUNT_EXPENSE_AGENT_SCDB_FORMAT-@COUNT_SPLITING_EXPENSE_AGENT);
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'EXPENSE_AGENT'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;
    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'EXPENSE_AGENT'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;
    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'STAFF DAILY'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
	EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_EXPENSE_AGENT_SCDB_FORMAT WHERE PREASP_DATA='EXPENSE_AGENT';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_EXPENSE_AGENT,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);   

-- 3.QUERY FOR DROP TEMP_STAFF_DAILY_SCDB_FORMAT
	SET START_TIME = (SELECT CURTIME());
	SET @DROP_TEMP_STAFF_DAILY_SCDB_FORMAT=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'. TEMP_STAFF_DAILY_SCDB_FORMAT'));
	PREPARE DROP_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT FROM @DROP_TEMP_STAFF_DAILY_SCDB_FORMAT;
    EXECUTE DROP_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT;
-- QUERY FOR CREATE TEMP_STAFF_DAILY_SCDB_FORMAT
	SET @CREATE_TEMP_STAFF_DAILY_SCDB_FORMAT=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_STAFF_DAILY_SCDB_FORMAT (LIKE ',SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT)'));
    PREPARE CREATE_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT FROM @CREATE_TEMP_STAFF_DAILY_SCDB_FORMAT;
    EXECUTE CREATE_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT;
-- QUERY FOR INSERT VALUES IN TEMP_STAFF_DAILY_SCDB_FORMAT
	SET @INSERT_TEMP_STAFF_DAILY_SCDB_FORMAT=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'. TEMP_STAFF_DAILY_SCDB_FORMAT SELECT * FROM ',SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT'));
    PREPARE INSERT_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT FROM @INSERT_TEMP_STAFF_DAILY_SCDB_FORMAT;
    EXECUTE INSERT_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT;
-- QUERY FOR UPDATE VALUES IN TEMP_STAFF_DAILY_SCDB_FORMAT
	SET @UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'. TEMP_STAFF_DAILY_SCDB_FORMAT SET SE_STAFF_INVOICE_FROM=''NO FROM'' WHERE SE_STAFF_INVOICE_FROM IS NULL'));
	PREPARE UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT FROM @UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT;
    EXECUTE UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT;
	SET @UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'. TEMP_STAFF_DAILY_SCDB_FORMAT SET SE_STAFF_INVOICE_ITEMS=''NO ITEM'' WHERE SE_STAFF_INVOICE_ITEMS IS NULL'));
    PREPARE UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT FROM @UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT;
    EXECUTE UPDATE_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT;
-- QUERY FOR DROP EXPENSE_STAFF	
	SET @DROP_EXPENSE_STAFF=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_STAFF'));						
	PREPARE DROP_EXPENSE_STAFF_STMT FROM @DROP_EXPENSE_STAFF;
    EXECUTE DROP_EXPENSE_STAFF_STMT;
-- QUERY FOR CREATE EXPENSE_STAFF
	SET @CREATE_EXPENSE_STAFF=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_STAFF(ES_ID INTEGER NOT NULL AUTO_INCREMENT,ECN_ID INTEGER NOT NULL,ES_INVOICE_DATE DATE NOT NULL,ES_INVOICE_AMOUNT DECIMAL(5,2) NOT NULL,ES_INVOICE_ITEMS TEXT NOT NULL,ES_INVOICE_FROM	VARCHAR(200) NOT NULL,ES_COMMENTS	TEXT NULL,ULD_ID INT(2) NOT NULL,ES_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY(ES_ID),FOREIGN KEY(ECN_ID) REFERENCES ',DESTINATIONSCHEMA,'.EXPENSE_CONFIGURATION (ECN_ID),FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID ))'));
	PREPARE CREATE_EXPENSE_STAFF_STMT FROM @CREATE_EXPENSE_STAFF;
    EXECUTE CREATE_EXPENSE_STAFF_STMT;
-- QUERY FOR INSERT VALUES IN EXPENSE_STAFF
	SET @INSERT_EXPENSE_STAFF=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_STAFF(ECN_ID, ES_INVOICE_DATE, ES_INVOICE_AMOUNT, ES_INVOICE_ITEMS, ES_INVOICE_FROM, ES_COMMENTS, ULD_ID,ES_TIMESTAMP) 
	SELECT EC.ECN_ID, TSTAFFDLY.SE_STAFF_INVOICE_DATE, TSTAFFDLY.SE_STAFF_INVOICE_AMOUNT, TSTAFFDLY.SE_STAFF_INVOICE_ITEMS, TSTAFFDLY.SE_STAFF_INVOICE_FROM, TSTAFFDLY.SE_STAFF_COMMENTS, ULD.ULD_ID ,TSTAFFDLY.TIMESTAMP
	FROM ',DESTINATIONSCHEMA,'.EXPENSE_CONFIGURATION AS EC INNER JOIN ',DESTINATIONSCHEMA,'.TEMP_STAFF_DAILY_SCDB_FORMAT AS TSTAFFDLY,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE SE_TYPE_OF_EXPENSE=''STAFF'' AND EC.ECN_DATA=TSTAFFDLY.SE_STAFF_EXPENSE and EC.CGN_ID=26 AND TSTAFFDLY.USERSTAMP=ULD.ULD_LOGINID'));
	PREPARE INSERT_EXPENSE_STAFF_STMT FROM @INSERT_EXPENSE_STAFF;
    EXECUTE INSERT_EXPENSE_STAFF_STMT;
     SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'. EXPENSE_STAFF SET ES_TIMESTAMP=(SELECT CONVERT_TZ(ES_TIMESTAMP, "+08:00","+0:00"))'));
PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
EXECUTE UPDATETIMESTAMPSTMT;
-- QUERY FOR DROP EXPENSE_STAFF		
	SET @DROP_TEMP_STAFF_DAILY_SCDB_FORMAT=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_STAFF_DAILY_SCDB_FORMAT'));
	PREPARE DROP_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT FROM @DROP_TEMP_STAFF_DAILY_SCDB_FORMAT;
    EXECUTE DROP_TEMP_STAFF_DAILY_SCDB_FORMAT_STMT;
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
-- COUNT CHECKING FOR EXPENSE_STAFF DETAILS
	SET @COUNTEXPENSESTAFFSCDBFORMAT =(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_EXPENSE_STAFF_SCDB_FORMAT FROM ',SOURCESCHEMA,'.STAFF_DAILY_SCDB_FORMAT WHERE SE_TYPE_OF_EXPENSE=''STAFF'''));
	PREPARE COUNTEXPENSESTAFFSCDBFORMAT_STMT FROM @COUNTEXPENSESTAFFSCDBFORMAT;
     EXECUTE COUNTEXPENSESTAFFSCDBFORMAT_STMT;
-- COUNT SPLITING FOR EXPENSE_STAFF DETAILS
	SET @COUNTSPLITINGEXPENSESTAFF =(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_EXPENSE_STAFF FROM ',DESTINATIONSCHEMA,'.EXPENSE_STAFF'));
	PREPARE COUNTSPLITINGEXPENSESTAFF_STMT FROM @COUNTSPLITINGEXPENSESTAFF;
    EXECUTE COUNTSPLITINGEXPENSESTAFF_STMT;
	SET @REJECTION_COUNT=(@COUNT_EXPENSE_STAFF_SCDB_FORMAT-@COUNT_SPLITING_EXPENSE_STAFF);
-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'EXPENSE_STAFF'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;
    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'EXPENSE_STAFF'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;
    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'STAFF DAILY'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
	EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_EXPENSE_STAFF_SCDB_FORMAT WHERE PREASP_DATA='EXPENSE_STAFF';	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_EXPENSE_STAFF,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);  
  COMMIT;
   END;

CALL SP_MIG_STAFF_DAILY_INSERT('SAFI_SOURCE','SAFI_DEST','expatsintegrated@gmail.com')
