-- VERSION:1.1 -- SDATE:09-06-2014 --EDATE:09-06-2014 --ISSUE:566 -- Desc:IMPLEMENTING ROLLBACK AND COMMIT DONE BY:BHAVANI.R
-- VERSION:1.0 -- SDATE:10-04-2014 --EDATE:10-04-2014 --ISSUE:765 -- Desc:ADD ALL MENU FRO SUPER ADMIN AND ADDED TIMSTAMP
-- VERSION:0.9 -- SDATE:25/03/2014 -- EDATE:25/03/2014 -- ISSUE:765 -- COMMENT NO:#8 -- DESC:CHANGING THE DESTINATION SCHEMA FOR UPDATION IN PRE AUDIT SUB PROFILE AND INSERTION IN POST AUDIT HISTORY -- DONE BY BHAVANI.R
-- version:0.8 -- sdate:22/03/2014 -- edate:22/03/2014 -- issue:765 -- COMMENT NO:#8 --desc:ALTERING THE FOREIGN KEY TABLE --doneby:BHAVANI.R
-- version:0.7 -- sdate:20/03/2014 -- edate:20/03/2014 -- issue:765 -- COMMENT NO:#8 --desc:CHANGING SP AS STORED PROCEDURES FOR DYNAMIC RUNNING PURPOSE  --doneby:BHAVANI.R
-- version:0.6 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--VERSION 0.5--sdate:04/03/2014 --edate:04/03/2014--CHANGING header datatype as int(2)- DONE BY SAFI
--VERSION 0.4--sdate:25/02/2014 --edate:25/02/2014--CHANGING USAERSTAMP TO ULD_ID- DONE BY SAFI
--VERSION 0.3--sdate:20/02/2014 --edate:21/02/2014--IMPLEMENT AUDIT QUREY - DONE BY SAFI
--version:0.2 --sdate:31/01/2014 --edate:31/01/2014 --issue:522 --desc:added PUBLIC_HOLIDAY,STORED_PROCEDURE_PROFILE,VIEW_PROFILE,PLATFORM_MANAGEMENT table insert quereis --doneby:RL
--version:0.1 --sdate:23/01/2014 --edate:23/01/2014 --desc:all user rights table insert queries --doneby:RL



DROP PROCEDURE IF EXISTS SP_INSERT_USER_RIGHTS_SQL_FORMAT;
CREATE PROCEDURE SP_INSERT_USER_RIGHTS_SQL_FORMAT (IN SOURCESCHEMA VARCHAR(50),IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(50))
BEGIN
DECLARE START_TIME TIME;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
SET FOREIGN_KEY_CHECKS=0;
-- STATEMENT FOR CHANGING MIGUSERSTAMP AS ULD_ID 
	SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
	PREPARE LOGINID FROM @LOGIN_ID;
	EXECUTE LOGINID;
	SET START_TIME = (SELECT CURTIME());
-- STATEMENT FOR DROPPING MENU_PROFILE    
	SET @DROP_MENU_PROFILE=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.MENU_PROFILE'));
	PREPARE DMENUPROFILE FROM @DROP_MENU_PROFILE;
    EXECUTE DMENUPROFILE;
-- STATEMENT FOR CREATING MENU_PROFILE
    SET @CREATE_MENU_PROFILE=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.MENU_PROFILE(MP_ID INTEGER(2) NOT NULL AUTO_INCREMENT, EP_ID INTEGER NULL, FP_ID VARCHAR(10) NULL, MP_MNAME VARCHAR(25) NOT NULL, MP_MSUB	VARCHAR(35) NULL, MP_MSUBMENU	VARCHAR(35) NULL, MP_MFILENAME VARCHAR(100) NOT NULL, MP_SCRIPT_FLAG CHAR(1) NULL, PRIMARY KEY(MP_ID))'));
    PREPARE CMENUPROFILE FROM @CREATE_MENU_PROFILE;
    EXECUTE CMENUPROFILE;
--  INSERT QUERY FOR MENU_PROFILE TABLE
    SET @INSERT_MENU_PROFILE=( SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.MENU_PROFILE (EP_ID, FP_ID, MP_MNAME, MP_MSUB, MP_MSUBMENU, MP_MFILENAME)SELECT EP_ID, FP_ID, MP_MNAME, MP_MSUB, MP_MSUBMENU, MP_MFILENAME FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE MP_MNAME IS NOT NULL AND MP_MFILENAME IS NOT NULL'));
    PREPARE INSERTMENUPROFILE FROM @INSERT_MENU_PROFILE;
    EXECUTE INSERTMENUPROFILE;
	
    SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
    SET @COUNT_MENU_PROFILE_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_MENU_PROFILE_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE MP_MNAME IS NOT NULL AND MP_MFILENAME IS NOT NULL '));
	PREPARE COUNTMENUPROFILESQLFORMAT FROM @COUNT_MENU_PROFILE_SQL_FORMAT;
	EXECUTE COUNTMENUPROFILESQLFORMAT;
	
    SET @COUNT_SPLITING_MENU_PROFILE=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_MENU_PROFILE FROM ',DESTINATIONSCHEMA,'.MENU_PROFILE'));
	PREPARE COUNTSPLITINGMENUPROFILE FROM @COUNT_SPLITING_MENU_PROFILE;
	EXECUTE COUNTSPLITINGMENUPROFILE;
    SET @REJECTION_COUNT=(@COUNT_MENU_PROFILE_SQL_FORMAT-@COUNT_SPLITING_MENU_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
    UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_MENU_PROFILE_SQL_FORMAT WHERE PREASP_DATA='MENU_PROFILE';

-- QUERY FOR INSERTING VALUES IN POST AUDIT HISTORY TABLE
	
    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'MENU_PROFILE'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;
	
    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'MENU_PROFILE'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;
    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_MENU_PROFILE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
 	
--  CREATE QUERY FOR FILE PROFILE
    SET START_TIME = (SELECT CURTIME());
	
    SET @DROP_FILE_PROFILE=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.FILE_PROFILE'));
	PREPARE DFILEPROFILE FROM @DROP_FILE_PROFILE;
    EXECUTE DFILEPROFILE;
	
    SET @CREATE_FILE_PROFILE=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.FILE_PROFILE(FP_ID INTEGER(2) NOT NULL AUTO_INCREMENT, FP_FOLDER_ID TEXT NOT NULL, FP_FILE_ID TEXT, FP_FILE_FLAG TEXT, PRIMARY KEY(FP_ID))'));
    PREPARE CFILEPROFILE FROM @CREATE_FILE_PROFILE;
    EXECUTE CFILEPROFILE;
	
    SET @INSERT_FILE_PROFILE=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.FILE_PROFILE(FP_FOLDER_ID,FP_FILE_ID,FP_FILE_FLAG)SELECT FP_FOLDER_ID,FP_FILE_ID,FP_FILE_FLAG FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE FP_FOLDER_ID IS NOT NULL'));
    PREPARE INSERTFILEPROFILE FROM @INSERT_FILE_PROFILE;
    EXECUTE INSERTFILEPROFILE;
	
    SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	
--  COUNT CHECKING FOR FILE_PROFILE DETAILS

    SET @COUNT_FILE_PROFILE_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_FILE_PROFILE_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE FP_FOLDER_ID IS NOT NULL'));
	PREPARE COUNTFILEPROFILESQLFORMAT FROM @COUNT_FILE_PROFILE_SQL_FORMAT;
	EXECUTE COUNTFILEPROFILESQLFORMAT;
	
    SET @COUNT_SPLITING_FILE_PROFILE=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_FILE_PROFILE FROM ',DESTINATIONSCHEMA,'.FILE_PROFILE'));
	PREPARE COUNTSPLITINGFILEPROFILE FROM @COUNT_SPLITING_FILE_PROFILE;
	EXECUTE COUNTSPLITINGFILEPROFILE;
	
    SET @REJECTION_COUNT=(@COUNT_FILE_PROFILE_SQL_FORMAT-@COUNT_SPLITING_FILE_PROFILE);
	
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE

    UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_FILE_PROFILE_SQL_FORMAT WHERE PREASP_DATA='FILE_PROFILE';

--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE

    
    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'FILE_PROFILE'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'FILE_PROFILE'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_FILE_PROFILE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);

	
--  BASIC_ROLE_PROFILE
    SET START_TIME = (SELECT CURTIME());
	
    SET @DROP_BASIC_ROLE_PROFILE=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.BASIC_ROLE_PROFILE'));
	PREPARE DBASICROLEPROFILE FROM @DROP_BASIC_ROLE_PROFILE;
    EXECUTE DBASICROLEPROFILE;
    
    SET @CREATE_BASIC_ROLE_PROFILE=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.BASIC_ROLE_PROFILE(BRP_ID INTEGER NOT NULL AUTO_INCREMENT, URC_ID INTEGER(2) NOT NULL, BRP_BR_ID INTEGER NOT NULL, ULD_ID INT(2) NOT NULL,	BRP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY(BRP_ID),FOREIGN KEY(URC_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_RIGHTS_CONFIGURATION (URC_ID), FOREIGN KEY(BRP_BR_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_RIGHTS_CONFIGURATION (URC_ID), FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
    PREPARE CBASICROLEPROFILE FROM @CREATE_BASIC_ROLE_PROFILE;
    EXECUTE CBASICROLEPROFILE;
--  INSERT QUERY FOR BASIC_ROLE_PROFILE TABLE

    SET @INSERT_BASIC_ROLE_PROFILE=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BASIC_ROLE_PROFILE(URC_ID, BRP_BR_ID, ULD_ID,BRP_TIMESTAMP)SELECT URSF.URC_ID, URSF.BRP_BR_ID, ULD.ULD_ID ,URSF.TIMESTAMP FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD , ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT URSF WHERE ULD.ULD_LOGINID=URSF.USERSTAMP AND URSF.URC_ID IS NOT NULL AND URSF.BRP_BR_ID IS NOT NULL AND URSF.USERSTAMP IS NOT NULL'));
    PREPARE INSERTBASICROLEPROFILE FROM @INSERT_BASIC_ROLE_PROFILE;
    EXECUTE INSERTBASICROLEPROFILE;
    
    SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
    
--  COUNT CHECKING FOR BASIC_ROLE_PROFILE DETAILS

    SET @COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE URC_ID IS NOT NULL AND BRP_BR_ID IS NOT NULL AND USERSTAMP IS NOT NULL'));
	PREPARE COUNTBASICROLEPROFILESQLFORMAT FROM @COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT;
	EXECUTE COUNTBASICROLEPROFILESQLFORMAT;
    SET @COUNT_SPLITING_BASIC_ROLE_PROFILE=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_BASIC_ROLE_PROFILE FROM ',DESTINATIONSCHEMA,'.BASIC_ROLE_PROFILE'));
	PREPARE COUNTSPLITINGBASICROLEPROFILE FROM @COUNT_SPLITING_BASIC_ROLE_PROFILE;
	EXECUTE COUNTSPLITINGBASICROLEPROFILE;

    SET @REJECTION_COUNT=(@COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT-@COUNT_SPLITING_BASIC_ROLE_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	
    UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_BASIC_ROLE_PROFILE_SQL_FORMAT WHERE PREASP_DATA='BASIC_ROLE_PROFILE';

--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE

    
    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'BASIC_ROLE_PROFILE'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'BASIC_ROLE_PROFILE'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_BASIC_ROLE_PROFILE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);

	
--  BASIC_MENU_PROFILE
    SET START_TIME = (SELECT CURTIME());
    SET @DROP_BASIC_MENU_PROFILE=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.BASIC_MENU_PROFILE'));
	PREPARE DBASICMENUPROFILE FROM @DROP_BASIC_MENU_PROFILE;
    EXECUTE DBASICMENUPROFILE;
    
    SET @CREATE_BASIC_MENU_PROFILE=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.BASIC_MENU_PROFILE(BMP_ID INTEGER NOT NULL AUTO_INCREMENT, URC_ID INTEGER(2) NOT NULL, MP_ID INTEGER(2) NOT NULL, ULD_ID INT(2) NOT NULL,	BMP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY(BMP_ID),FOREIGN KEY(URC_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_RIGHTS_CONFIGURATION (URC_ID),FOREIGN KEY(MP_ID) REFERENCES ',DESTINATIONSCHEMA,'.MENU_PROFILE (MP_ID),FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
    PREPARE CBASICMENUPROFILE FROM @CREATE_BASIC_MENU_PROFILE;
    EXECUTE CBASICMENUPROFILE;
 
--  INSERT QUERY FOR BASIC_MENU_PROFILE TABLE

    SET @INSERT_BASIC_MENU_PROFILE=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BASIC_MENU_PROFILE(URC_ID,MP_ID,ULD_ID,BMP_TIMESTAMP)SELECT URSF.URC_ID,URSF.MP_ID,ULD.ULD_ID,URSF.TIMESTAMP FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD,',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT URSF WHERE ULD.ULD_LOGINID=URSF.USERSTAMP AND URC_ID IS NOT NULL AND MP_ID IS NOT NULL AND USERSTAMP IS NOT NULL'));
    PREPARE INSERTBASICMENUPROFILE FROM @INSERT_BASIC_MENU_PROFILE;
    EXECUTE INSERTBASICMENUPROFILE;
	SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR BASIC_MENU_PROFILE DETAILS
    SET @COUNT_BASIC_MENU_PROFILE_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_BASIC_MENU_PROFILE_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE URC_ID IS NOT NULL AND MP_ID IS NOT NULL AND USERSTAMP IS NOT NULL'));
	PREPARE COUNTBASICMENUPROFILESQLFORMAT FROM @COUNT_BASIC_MENU_PROFILE_SQL_FORMAT;
	EXECUTE COUNTBASICMENUPROFILESQLFORMAT;
    
    SET @COUNT_SPLITING_BASIC_MENU_PROFILE=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_BASIC_MENU_PROFILE FROM ',DESTINATIONSCHEMA,'.BASIC_MENU_PROFILE'));
	PREPARE COUNTSPLITINGBASICMENUPROFILE FROM @COUNT_SPLITING_BASIC_MENU_PROFILE;
	EXECUTE COUNTSPLITINGBASICMENUPROFILE;
    SET @REJECTION_COUNT=(@COUNT_BASIC_MENU_PROFILE_SQL_FORMAT-@COUNT_SPLITING_BASIC_MENU_PROFILE);
	
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE	

	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_BASIC_MENU_PROFILE_SQL_FORMAT WHERE PREASP_DATA='BASIC_MENU_PROFILE';
	
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE

    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'BASIC_MENU_PROFILE'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'BASIC_MENU_PROFILE'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_BASIC_MENU_PROFILE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
   
--  PUBLIC_HOLIDAY
    SET START_TIME = (SELECT CURTIME());
    SET @DROP_PUBLIC_HOLIDAY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.PUBLIC_HOLIDAY'));
	PREPARE DPUBLICHOLIDAY FROM @DROP_PUBLIC_HOLIDAY;
    EXECUTE DPUBLICHOLIDAY;

    SET @CREATE_PUBLIC_HOLIDAY=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.PUBLIC_HOLIDAY(PH_ID INTEGER(2) NOT NULL AUTO_INCREMENT,PH_DESCRIPTION VARCHAR(20) NOT NULL,PH_DATE DATE NOT NULL,PRIMARY KEY(PH_ID))'));
    PREPARE CPUBLICHOLIDAY FROM @CREATE_PUBLIC_HOLIDAY;
    EXECUTE CPUBLICHOLIDAY;
  
--  INSERT QUERY FOR PUBLIC_HOLIDAY TABLE
    SET @INSERT_PUBLIC_HOLIDAY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.PUBLIC_HOLIDAY(PH_DESCRIPTION,PH_DATE)SELECT PH_DESCRIPTION,PH_DATE FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE PH_DESCRIPTION IS NOT NULL AND PH_DATE IS NOT NULL'));
    PREPARE INSERTBASICMENUPROFILE FROM @INSERT_PUBLIC_HOLIDAY;
    EXECUTE INSERTBASICMENUPROFILE;

    SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR PUBLIC_HOLIDAY DETAILS
    SET @COUNT_PUBLIC_HOLIDAY_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_PUBLIC_HOLIDAY_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE PH_DESCRIPTION IS NOT NULL AND PH_DATE IS NOT NULL'));
	PREPARE COUNTPUBLICHOLIDAYSQLFORMAT FROM @COUNT_PUBLIC_HOLIDAY_SQL_FORMAT;
	EXECUTE COUNTPUBLICHOLIDAYSQLFORMAT;
	
    SET @COUNT_SPLITING_PUBLIC_HOLIDAY=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_PUBLIC_HOLIDAY FROM ',DESTINATIONSCHEMA,'.PUBLIC_HOLIDAY'));
	PREPARE COUNTPUBLICHOLIDAYSQLFORMAT FROM @COUNT_SPLITING_PUBLIC_HOLIDAY;
	EXECUTE COUNTPUBLICHOLIDAYSQLFORMAT;
    SET @REJECTION_COUNT=(@COUNT_PUBLIC_HOLIDAY_SQL_FORMAT-@COUNT_SPLITING_PUBLIC_HOLIDAY);
    
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	
    UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_PUBLIC_HOLIDAY_SQL_FORMAT WHERE PREASP_DATA='PUBLIC_HOLIDAY';

--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE

    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'PUBLIC_HOLIDAY'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'PUBLIC_HOLIDAY'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_PUBLIC_HOLIDAY,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);

 

--  STORED_PROCEDURE_PROFILE
    SET START_TIME = (SELECT CURTIME());
    SET @DROP_STORED_PROCEDURE_PROFILE=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.STORED_PROCEDURE_PROFILE'));
	PREPARE DSTOREDPROCEDUREPROFILE FROM @DROP_STORED_PROCEDURE_PROFILE;
    EXECUTE DSTOREDPROCEDUREPROFILE;

    SET @CREATE_STORED_PROCEDURE_PROFILE=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.STORED_PROCEDURE_PROFILE(SPP_ID INTEGER NOT NULL AUTO_INCREMENT, SPP_NAME VARCHAR(100) NOT NULL,PRIMARY KEY(SPP_ID))'));
    PREPARE CSTOREDPROCEDUREPROFILE FROM @CREATE_STORED_PROCEDURE_PROFILE;
    EXECUTE CSTOREDPROCEDUREPROFILE;

--  INSERT QUERY FOR STORED_PROCEDURE_PROFILE TABLE	
    SET @INSERT_STORED_PROCEDURE_PROFILE=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.STORED_PROCEDURE_PROFILE(SPP_NAME)SELECT SPP_NAME FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE SPP_NAME IS NOT NULL'));
    PREPARE INSERTSTOREDPROCEDUREPROFILE FROM @INSERT_STORED_PROCEDURE_PROFILE;
    EXECUTE INSERTSTOREDPROCEDUREPROFILE;


    SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR STORED_PROCEDURE_PROFILE DETAILS
    SET @COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE SPP_NAME IS NOT NULL'));
	PREPARE COUNTSTOREDPROCEDUREPROFILESQLFORMAT FROM @COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT;
	EXECUTE COUNTSTOREDPROCEDUREPROFILESQLFORMAT;

    SET @COUNT_SPLITING_STORED_PROCEDURE_PROFILE=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_STORED_PROCEDURE_PROFILE FROM ',DESTINATIONSCHEMA,'.STORED_PROCEDURE_PROFILE'));
	PREPARE COUNTSPLITINGSTOREDPROCEDUREPROFILE FROM @COUNT_SPLITING_STORED_PROCEDURE_PROFILE;
	EXECUTE COUNTSPLITINGSTOREDPROCEDUREPROFILE;
	SET @REJECTION_COUNT=(@COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT-@COUNT_SPLITING_STORED_PROCEDURE_PROFILE);
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE	
    UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_STORED_PROCEDURE_PROFILE_SQL_FORMAT WHERE PREASP_DATA='STORED_PROCEDURE_PROFILE';

--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
     SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'STORED_PROCEDURE_PROFILE'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'STORED_PROCEDURE_PROFILE'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_STORED_PROCEDURE_PROFILE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);

	
	--  VIEW_PROFILE

    SET START_TIME = (SELECT CURTIME());
    SET @DROP_VIEW_PROFILE=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.VIEW_PROFILE'));
	PREPARE DVIEWPROFILE FROM @DROP_VIEW_PROFILE;
    EXECUTE DVIEWPROFILE;
	
	SET @CREATE_VIEW_PROFILE=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.VIEW_PROFILE(VP_ID INTEGER NOT NULL AUTO_INCREMENT,VP_NAME VARCHAR(100) NOT NULL,PRIMARY KEY(VP_ID))'));
    PREPARE CVIEWPROFILE FROM @CREATE_VIEW_PROFILE;
    EXECUTE CVIEWPROFILE;


--  INSERT QUERY FOR VIEW_PROFILE TABLE	

     SET @INSERT_VIEW_PROFILE=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.VIEW_PROFILE(VP_NAME)SELECT VP_NAME FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE VP_NAME IS NOT NULL'));
    PREPARE INSERTVIEWPROFILE FROM @INSERT_VIEW_PROFILE;
    EXECUTE INSERTVIEWPROFILE;

    SET END_TIME = (SELECT CURTIME());
    SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
--  COUNT CHECKING FOR VIEW_PROFILE DETAILS

	SET @COUNT_VIEW_PROFILE_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_VIEW_PROFILE_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE VP_NAME IS NOT NULL'));
	PREPARE COUNTVIEWPROFILESQLFORMAT FROM @COUNT_VIEW_PROFILE_SQL_FORMAT;
	EXECUTE COUNTVIEWPROFILESQLFORMAT;

	SET @COUNT_SPLITING_VIEW_PROFILE=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_VIEW_PROFILE FROM ',DESTINATIONSCHEMA,'.VIEW_PROFILE'));
	PREPARE COUNTSPLITINGVIEWPROFILE FROM @COUNT_SPLITING_VIEW_PROFILE;
	EXECUTE COUNTSPLITINGVIEWPROFILE;


    SET @REJECTION_COUNT=(@COUNT_VIEW_PROFILE_SQL_FORMAT-@COUNT_SPLITING_VIEW_PROFILE);
	
--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE	

	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_VIEW_PROFILE_SQL_FORMAT WHERE PREASP_DATA='VIEW_PROFILE';

--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
     SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'VIEW_PROFILE'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'VIEW_PROFILE'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

    INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_VIEW_PROFILE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
   	
	--  PLATFORM_MANAGEMENT
	
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_PLATFORM_MANAGEMENT=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.PLATFORM_MANAGEMENT'));
	PREPARE DPLATFORMMANAGEMENT FROM @DROP_PLATFORM_MANAGEMENT;
    EXECUTE DPLATFORMMANAGEMENT;
	
	SET @CREATE_PLATFORM_MANAGEMENT=(SELECT CONCAT('CREATE TABLE  ',DESTINATIONSCHEMA,'.PLATFORM_MANAGEMENT(PM_ID INTEGER NOT NULL AUTO_INCREMENT,MP_ID INTEGER(2) NOT NULL,POSTAP_ID INTEGER,SPP_ID INTEGER,VP_ID INTEGER,PRIMARY KEY(PM_ID),FOREIGN KEY(MP_ID) REFERENCES ',DESTINATIONSCHEMA,'.MENU_PROFILE (MP_ID))'));
	PREPARE CPLATFORMMANAGEMENT FROM @CREATE_PLATFORM_MANAGEMENT;
    EXECUTE CPLATFORMMANAGEMENT;


--  INSERT QUERY FOR PLATFORM_MANAGEMENT TABLE

	SET @INSERT_PLATFORM_MANAGEMENT=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.PLATFORM_MANAGEMENT(MP_ID,POSTAP_ID,SPP_ID,VP_ID)SELECT MP_ID,POSTAP_ID,SPP_ID,VP_ID FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE MP_ID IS NOT NULL AND PM_ID IS NOT NULL'));
    PREPARE INSERTPLATFORMMANAGEMENT FROM @INSERT_PLATFORM_MANAGEMENT;
    EXECUTE INSERTPLATFORMMANAGEMENT;
	
	SET END_TIME = (SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
	
--  COUNT CHECKING FOR PLATFORM_MANAGEMENT DETAILS

	SET @COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT FROM ',SOURCESCHEMA,'.USER_RIGHTS_SQL_FORMAT WHERE MP_ID IS NOT NULL AND PM_ID IS NOT NULL'));
	PREPARE COUNTPLATFORMMANAGEMENTSQLFORMAT FROM @COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT;
	EXECUTE COUNTPLATFORMMANAGEMENTSQLFORMAT;
	
	SET @COUNT_SPLITING_PLATFORM_MANAGEMENT=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_PLATFORM_MANAGEMENT FROM ',DESTINATIONSCHEMA,'.PLATFORM_MANAGEMENT'));
	PREPARE COUNTSPLITINGPLATFORMMANAGEMENT FROM @COUNT_SPLITING_PLATFORM_MANAGEMENT;
	EXECUTE COUNTSPLITINGPLATFORMMANAGEMENT;

	SET @REJECTION_COUNT=(@COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT-@COUNT_SPLITING_PLATFORM_MANAGEMENT);

--  QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_PLATFORM_MANAGEMENT_SQL_FORMAT WHERE PREASP_DATA='PLATFORM_MANAGEMENT';
	
--  QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE

    SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'PLATFORM_MANAGEMENT'"));
    PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
    EXECUTE POSTAPSTMT;

    SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'PLATFORM_MANAGEMENT'"));
    PREPARE PREASPIDSTMT FROM @PREASPSTMT;
    EXECUTE PREASPIDSTMT;

    SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'USER RIGHTS'"));
    PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
    EXECUTE PREAMPIDSTMT;
    SET @DUR=DURATION;

	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_PLATFORM_MANAGEMENT,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
 
   SET FOREIGN_KEY_CHECKS=1; 
   COMMIT;
END;

CALL SP_INSERT_USER_RIGHTS_SQL_FORMAT('SOURCE_SCHEMA','DESTINATION_SCHEMA','EXPATSINTEGRATED@GMAIL.COM');