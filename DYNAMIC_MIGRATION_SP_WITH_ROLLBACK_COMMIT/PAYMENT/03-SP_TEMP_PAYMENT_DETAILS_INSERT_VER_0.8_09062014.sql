-- version:0.8 -- sdate:09/06/2014 -- edate:09/06/2014 -- issue:566 --COMMENT NO: 12--desc:IMPLEMENTED ROLL BACK AND COMMIT --doneby:DHIVYA
-- version:0.7 -- sdate:19/03/2014 -- edate:22/03/2014 -- issue:810 --COMMENT NO: 8--desc:CALCULATED DURATION OF THIS SP --doneby:DHIVYA
-- version:0.6 -- sdate:19/03/2014 -- edate:26/03/2014 -- issue:765 --COMMENT NO: 8--desc:UPDATED SP DYNAMICALLY --doneby:SAFI
-- version:0.5 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
--version:0.4 --sdate:26/02/2014 --edate:26/02/2014 --issue:750 --desc:userstamp changed as uld_id --done by:RL
--version:0.3 --sdate:20/02/2014 --edate:20/02/2014 --issue:594 --comment:104 --done by:DHIVYA
--version:0.2 --sdate:24/01/2014 --edate:30/01/2014 --issue:594 --desc:changed migration.rental_scdb_format as rental_scdb_format n update rec version --doneby:RL


DROP PROCEDURE IF EXISTS SP_TEMP_PAYMENT_DETAILS_INSERT;
CREATE PROCEDURE SP_TEMP_PAYMENT_DETAILS_INSERT(IN SOURCESCHEMA  VARCHAR(40),IN DESTINATIONSCHEMA  VARCHAR(40))
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
	DECLARE CUSTOMERNAME CHAR(100);
	DECLARE UNIT_NUMBER INTEGER;
	DECLARE FORPERIOD DATE;
	DECLARE PAIDDATE DATE;
	DECLARE RPPID INTEGER;
	DECLARE RDAMOUNT DECIMAL(7,2);
	DECLARE COMMENTS TEXT;
	DECLARE USER_STAMP VARCHAR(50);
	DECLARE CUSTID INTEGER;
	DECLARE RENTALID INTEGER;
	DECLARE FORPERIOD_MONTH INTEGER;
	DECLARE FORPERIOD_YEAR INTEGER;
	DECLARE FORPERIOD_DATE INTEGER;
	DECLARE FORPERIODDATE DATE;
	DECLARE RTIMESTAMP VARCHAR(50); 
	DECLARE STARTTIME TIME;
	DECLARE ENDTIME TIME;
	DECLARE DURATION TIME;
	DECLARE FILTER_CURSOR CURSOR FOR 
	SELECT RENTAL_ID,RENTAL_CUSTOMER, RENTAL_UNIT, RENTAL_FOR_PERIOD, RENTAL_PAID_DATE,  RPP_ID, RD_AMOUNT,RENTAL_COMMENTS,USERSTAMP,TIMESTAMP FROM VW_TEMP_PAYMENT_DETAILS_INSERT;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
	END;
	START TRANSACTION;
	SET @VW_TEMP_PAYMENT_DETAILS=(SELECT CONCAT('CREATE OR REPLACE VIEW VW_TEMP_PAYMENT_DETAILS_INSERT AS SELECT RENTAL_ID,RENTAL_CUSTOMER,RENTAL_UNIT,RENTAL_FOR_PERIOD,RENTAL_PAID_DATE,RPP_ID,RD_AMOUNT,RENTAL_COMMENTS,USERSTAMP,TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_RENTAL_SCDB_FORMAT'));
    PREPARE VW_TEMP_PAYMENT_DETAILS_STMT FROM @VW_TEMP_PAYMENT_DETAILS;
    EXECUTE VW_TEMP_PAYMENT_DETAILS_STMT;		
	OPEN FILTER_CURSOR;
    SET FOREIGN_KEY_CHECKS=0;
	SET STARTTIME=(SELECT CURTIME());	
    SET @DROP_TEMP_PAYMENT_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS'));
	PREPARE DROP_TEMP_PAYMENT_DETAILS_STMT FROM @DROP_TEMP_PAYMENT_DETAILS;
    EXECUTE DROP_TEMP_PAYMENT_DETAILS_STMT;	
	SET @CREATE_TEMP_PAYMENT_DETAILS=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS(
	PD_ID INTEGER NOT NULL AUTO_INCREMENT,
	UNIT_ID	INTEGER NOT NULL,
	CUSTOMER_ID	INTEGER NOT NULL,
	PP_ID INTEGER NOT NULL,
	CED_REC_VER	INTEGER NULL,
	PD_AMOUNT DECIMAL(7,2) NOT NULL,
	PD_FOR_PERIOD DATE NOT NULL,
	PD_PAID_DATE DATE NOT NULL,
	PD_HIGHLIGHT_FLAG CHAR(1) NULL,
	PD_COMMENTS	TEXT NULL,
	PD_USERSTAMP VARCHAR(50) NOT NULL,
	PD_TIMESTAMP VARCHAR(50) NOT NULL,
	PRIMARY KEY(PD_ID),
	FOREIGN KEY(UNIT_ID) REFERENCES UNIT (UNIT_ID),
	FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
	FOREIGN KEY(PP_ID) REFERENCES PAYMENT_PROFILE (PP_ID))ENGINE=MYISAM'));
	PREPARE CREATE_TEMP_PAYMENT_DETAILS_STMT FROM @CREATE_TEMP_PAYMENT_DETAILS;
    EXECUTE CREATE_TEMP_PAYMENT_DETAILS_STMT;	
	read_loop: LOOP
		FETCH FILTER_CURSOR INTO RENTALID, CUSTOMERNAME, UNIT_NUMBER, FORPERIOD, PAIDDATE,  RPPID, RDAMOUNT,
		COMMENTS, USER_STAMP, RTIMESTAMP;
		SET @RENTAL_ID=RENTALID;
		SET @RENTAL_CUSTOMERNAME=CUSTOMERNAME;
		SET @RENTAL_UNIT_NUMBER=UNIT_NUMBER;
		SET @RENTAL_FORPERIOD=FORPERIOD;
		SET @RENTAL_PAIDDATE=PAIDDATE;
		SET @RENTAL_RPPID=RPPID;
		SET @RENTAL_RDAMOUNT=RDAMOUNT;
		SET @RENTAL_COMMENTS=COMMENTS;
		SET @RENTAL_USER_STAMP=USER_STAMP;
		SET @RENTAL_RTIMESTAMP=RTIMESTAMP;		
		IF DONE THEN
			LEAVE read_loop;
		END IF;
        SET @CUSTID=NULL;
		SET @FORPERIOD_MONTH = (SELECT MONTH(@RENTAL_FORPERIOD));
		SET @FORPERIOD_YEAR = (SELECT YEAR(@RENTAL_FORPERIOD));
		SET @FORPERIOD_DATE = (SELECT DAY(@RENTAL_FORPERIOD));
		SET @SELECT_CUSTID = (SELECT CONCAT('SELECT DISTINCT(CUST_ID) INTO @CUSTID FROM ',DESTINATIONSCHEMA,'.TEMP_RENTAL_CUSTOMER WHERE CUSTOMER_NAME=@RENTAL_CUSTOMERNAME AND UNITNO=@RENTAL_UNIT_NUMBER'));
		PREPARE SELECT_CUSTID_STMT FROM @SELECT_CUSTID;
        EXECUTE SELECT_CUSTID_STMT;
		IF (@FORPERIOD_DATE!=1)THEN
			IF(LENGTH(@FORPERIOD_MONTH>1))THEN			    
				SET @FORPERIODDATE = (SELECT CONCAT(@FORPERIOD_YEAR,'-',@FORPERIOD_MONTH,'-','01'));
			ELSE
				SET @FORPERIODDATE = (SELECT CONCAT(@FORPERIOD_YEAR,'-','0',@FORPERIOD_MONTH,'-','01'));
			END IF;
			SET FOREIGN_KEY_CHECKS=0;
            SET @SELECT_UNITID=(SELECT CONCAT('SELECT UNIT_ID INTO @UNITID FROM ',DESTINATIONSCHEMA,'.UNIT WHERE UNIT_NO=@RENTAL_UNIT_NUMBER'));
            PREPARE SELECT_UNITID_STMT FROM @SELECT_UNITID;
            EXECUTE SELECT_UNITID_STMT;						
			SET @INSERT_TEMP_PAYMENT_DETAILS=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_COMMENTS,PD_USERSTAMP,PD_TIMESTAMP)VALUES
			(@UNITID, @CUSTID ,@RENTAL_RPPID,@RENTAL_RDAMOUNT,@FORPERIODDATE,@RENTAL_PAIDDATE,@RENTAL_COMMENTS, @RENTAL_USER_STAMP ,@RENTAL_RTIMESTAMP)'));
			PREPARE INSERT_TEMP_PAYMENT_DETAILS_STMT FROM @INSERT_TEMP_PAYMENT_DETAILS;
            EXECUTE INSERT_TEMP_PAYMENT_DETAILS_STMT;		
		ELSE 
			SET FOREIGN_KEY_CHECKS=0;
			SET @SELECT_UNITID=(SELECT CONCAT('SELECT UNIT_ID INTO @UNITID FROM ',DESTINATIONSCHEMA,'.UNIT WHERE UNIT_NO=@RENTAL_UNIT_NUMBER'));
            PREPARE SELECT_UNITID_STMT FROM @SELECT_UNITID;
            EXECUTE SELECT_UNITID_STMT;
			SET @INSERT_TEMP_PAYMENT_DETAILS=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_PAYMENT_DETAILS(UNIT_ID,CUSTOMER_ID,PP_ID,PD_AMOUNT,PD_FOR_PERIOD,PD_PAID_DATE,PD_COMMENTS,PD_USERSTAMP,PD_TIMESTAMP)VALUES(@UNITID, @CUSTID ,@RENTAL_RPPID,@RENTAL_RDAMOUNT,@RENTAL_FORPERIOD, @RENTAL_PAIDDATE, @RENTAL_COMMENTS, @RENTAL_USER_STAMP ,@RENTAL_RTIMESTAMP)'));
			PREPARE INSERT_TEMP_PAYMENT_DETAILS_STMT FROM @INSERT_TEMP_PAYMENT_DETAILS;
            EXECUTE INSERT_TEMP_PAYMENT_DETAILS_STMT;
		END IF;
	END LOOP;
	CLOSE FILTER_CURSOR;
    DROP VIEW VW_TEMP_PAYMENT_DETAILS_INSERT;
    SET FOREIGN_KEY_CHECKS=1;
	SET ENDTIME=(SELECT CURTIME());
	SET DURATION=(SELECT TIMEDIFF(ENDTIME,STARTTIME));
	DROP TABLE IF EXISTS TEMP_DURATION_PAYMENT_PART3;
CREATE TABLE TEMP_DURATION_PAYMENT_PART3(ID INTEGER PRIMARY KEY AUTO_INCREMENT,SPLITTING_DURATION3 TIME);
INSERT INTO TEMP_DURATION_PAYMENT_PART3(SPLITTING_DURATION3)VALUES(DURATION);
COMMIT;
END;
