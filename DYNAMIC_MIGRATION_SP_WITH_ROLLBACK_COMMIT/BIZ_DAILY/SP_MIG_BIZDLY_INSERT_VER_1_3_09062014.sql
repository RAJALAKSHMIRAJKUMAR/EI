-- version:1.3 -- sadte:09/06/2014 -- edate:09/06/2014  -- issue:566 COMMENT:12  --desc: IMPLEMENTED ROLLBACK AND COMMIT --doneby:DHIVYA
-- version:1.2 -- sadte:17/05/2014 -- edate:17/05/2014 --desc: REMOVED expense_petty_cash table UPDATE TIMESTAMP QUERY BECOZ IN TEMP_BIZ_DAILY_SCDB_FORMAT SP ITSELF TIMESTAMP UPDATED --doneby:DHIVYA
-- version:1.1 -- sadte:08/05/2014 -- edate:08/05/2014 --desc: changed expense_petty_cash table query --doneby:DHIVYA
-- version:1.0 -- sadte:23/04/2014 -- edate:23/04/2014 --desc: UPDATED TIMESTAMP --doneby:SASIKALA
-- version:0.9 -- sadte:27/03/2014 -- edate:27/03/2014 --desc: changed audit into source --doneby:RL
-- version:0.8 -- sdate:19/03/2014 -- edate:19/03/2014 -- issue:765 --desc:dynamically get source nd destination schema --doneby:RL
-- version:0.7 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 --desc:droped temp table --doneby:RL
-- version:0.6 --sdate:04/03/2014 --edate:04/03/2014 --Desc:ISSUE CORRECTED INUNIT EXPENSE- DONE BY SAFI
-- version:0.5 --sdate:28/02/2014 --edate:28/02/2014 --issue:750 --desc:changed userstamp as ULD_ID and timestamp get from scdb done by:RL
-- version:0.4--sdate:21/02/2014 --edate:22/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
-- version:0.3 --sdate:18/02/2014 --edate:18/02/2014 --issue:276 --commentno:26 --desc:ADD USERSTAMP N TIMESTAMP IN EXPENSE_HOUSEKEEPING_UNIT --doneby:RL
-- version:0.2 --sdate:21/01/2014 --edate:21/01/2014 --issue:594 --commentno:50 & 54 --doneby:RL

DROP PROCEDURE IF EXISTS SP_MIG_BIZDLY_INSERT;
CREATE PROCEDURE SP_MIG_BIZDLY_INSERT(IN SOURCESCHEMA VARCHAR(50), IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(50))
BEGIN	
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
	END;
	START TRANSACTION;	
		SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
		PREPARE LOGINID FROM @LOGIN_ID;
		EXECUTE LOGINID;	
    -- 1.QUERY FOR CREATE EXPENSE_STARHUB

		SET START_TIME=(SELECT CURTIME());	
		SET FOREIGN_KEY_CHECKS=0;	
		SET @ESH_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_STARHUB'));
		PREPARE ESHDROPQUERY FROM @ESH_DROPQUERY;
		EXECUTE ESHDROPQUERY;	
		SET @ESH_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_STARHUB(
		ESH_ID INTEGER NOT NULL	AUTO_INCREMENT,
		EDSH_ID	INTEGER NOT NULL,
		ESH_INVOICE_DATE DATE NOT NULL,	
		ESH_FROM_PERIOD	DATE NOT NULL,	
		ESH_TO_PERIOD DATE NOT NULL,
		ESH_AMOUNT DECIMAL(6,2) NOT NULL,	
		ESH_COMMENTS TEXT NULL,	
		ULD_ID INTEGER(2) NOT NULL,	
		ESH_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(ESH_ID),
		FOREIGN KEY(EDSH_ID) REFERENCES ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_STARHUB(EDSH_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE ESHCREATEQUERY FROM @ESH_CREATEQUERY;
		EXECUTE ESHCREATEQUERY;	
    -- INSERT QUERY FOR EXPENSE_STARHUB TABLE

		SET @ESH_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_STARHUB
		(EDSH_ID, ESH_INVOICE_DATE, ESH_FROM_PERIOD, ESH_TO_PERIOD, ESH_AMOUNT, ESH_COMMENTS, ULD_ID,ESH_TIMESTAMP) 
		SELECT EDSH.EDSH_ID, BSF.EXP_SHB_INVOICE_DATE, BSF.EXP_SHB_FROM_PERIOD, BSF.EXP_SHB_TO_PERIOD, BSF.EXP_SHB_AMOUNT, BSF.EXP_SHB_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_STARHUB EDSH INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF 
		JOIN ',DESTINATIONSCHEMA,'.UNIT U, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE U.UNIT_ID=EDSH.UNIT_ID and BSF.EXP_UNIT_NO=U.UNIT_NO AND BSF.EXP_TYPE_OF_EXPENSE="STAR HUB"
		AND ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE ESHINSERTQUERY FROM @ESH_INSERTQUERY;
		EXECUTE ESHINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_STARHUB SET ESH_TIMESTAMP=(SELECT CONVERT_TZ(ESH_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @DUR=DURATION;
    -- COUNT CHECKING FOR EXPENSE_STARHUB

		SET @COUNT_SCDB_ESH=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_STARHUB FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"STAR HUB"'));
		PREPARE COUNT_SCDBESH FROM @COUNT_SCDB_ESH;
		EXECUTE COUNT_SCDBESH;    
		SET @COUNT_SPLITTING_ESH=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_STARHUB FROM ',DESTINATIONSCHEMA,'.EXPENSE_STARHUB'));
		PREPARE COUNT_SPLITTINGESH FROM @COUNT_SPLITTING_ESH;
		EXECUTE COUNT_SPLITTINGESH;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_STARHUB-@SPLITTED_STARHUB);       
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_STARHUB');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_STARHUB');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');		
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_STARHUB WHERE PREASP_DATA='EXPENSE_STARHUB';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_STARHUB,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);	
    -- 2.QUERY FOR CREATE 	EXPENSE_DIGITAL_VOICE TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @EDV_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_DIGITAL_VOICE'));
		PREPARE EDVDROPQUERY FROM @EDV_DROPQUERY;
		EXECUTE EDVDROPQUERY;	
		SET @EDV_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_DIGITAL_VOICE(
		EDV_ID INTEGER NOT NULL	AUTO_INCREMENT,
		EDDV_ID	INTEGER NOT NULL,
		EDV_INVOICE_DATE DATE NOT NULL,	
		EDV_FROM_PERIOD DATE NOT NULL,	
		EDV_TO_PERIOD DATE NOT NULL,
		EDV_AMOUNT DECIMAL(5,2) NOT NULL,	
		EDV_COMMENTS TEXT NULL,	
		ULD_ID INTEGER(2) NOT NULL,	
		EDV_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(EDV_ID),
		FOREIGN KEY(EDDV_ID) REFERENCES ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_DIGITAL_VOICE (EDDV_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE EDVCREATEQUERY FROM @EDV_CREATEQUERY;
		EXECUTE EDVCREATEQUERY;		
    -- INSERT QUERY FOR EXPENSE_DIGITAL_VOICE TABLE

		SET @EDV_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_DIGITAL_VOICE
		(EDDV_ID, EDV_INVOICE_DATE, EDV_FROM_PERIOD, EDV_TO_PERIOD, EDV_AMOUNT, EDV_COMMENTS,ULD_ID,EDV_TIMESTAMP) 
		SELECT EDDV.EDDV_ID, BSF.EXP_DIGITAL_INVOICE_DATE, BSF.EXP_DIGITAL_FROM_PERIOD, BSF.EXP_DIGITAL_TO_PERIOD, 
		BSF.EXP_DIGITAL_AMOUNT, BSF.EXP_DIGITAL_COMMENTS,ULD.ULD_ID, BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_DIGITAL_VOICE EDDV INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF 
		JOIN ',DESTINATIONSCHEMA,'.UNIT U, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE U.UNIT_ID=EDDV.UNIT_ID AND BSF.EXP_UNIT_NO=U.UNIT_NO AND BSF.EXP_TYPE_OF_EXPENSE="DIGITAL VOICE"
		AND ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE EDVINSERTQUERY FROM @EDV_INSERTQUERY;
		EXECUTE EDVINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_DIGITAL_VOICE SET EDV_TIMESTAMP=(SELECT CONVERT_TZ(EDV_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @DUR = DURATION;	
    -- COUNT CHECKING FOR EXPENSE_STARHUB

		SET @COUNT_SCDB_EDV=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_DIGITALVOICE FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"DIGITAL VOICE"'));
		PREPARE COUNT_SCDBEDV FROM @COUNT_SCDB_EDV;
		EXECUTE COUNT_SCDBEDV;    
		SET @COUNT_SPLITTING_EDV=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_DIGITALVOICE FROM ',DESTINATIONSCHEMA,'.EXPENSE_DIGITAL_VOICE'));
		PREPARE COUNT_SPLITTINGEDV FROM @COUNT_SPLITTING_EDV;
		EXECUTE COUNT_SPLITTINGEDV;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_DIGITALVOICE-@SPLITTED_DIGITALVOICE);		
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_DIGITAL_VOICE');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_DIGITAL_VOICE');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');       
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_DIGITALVOICE WHERE PREASP_DATA='EXPENSE_DIGITAL_VOICE';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_DIGITALVOICE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);	
    -- 3.QUERY FOR CREATE 	EXPENSE_FACILITY_USE TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @EFU_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_FACILITY_USE'));
		PREPARE EFUDROPQUERY FROM @EFU_DROPQUERY;
		EXECUTE EFUDROPQUERY;	
		SET @EFU_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_FACILITY_USE(
		EFU_ID	INTEGER NOT NULL AUTO_INCREMENT,
		UNIT_ID	INTEGER NOT NULL,
		EFU_INVOICE_DATE DATE NOT NULL,	
		EFU_DEPOSIT	DECIMAL(7,2) NULL,	
		EFU_AMOUNT	DECIMAL(5,2) NULL,	
		EFU_COMMENTS TEXT NULL,	
		ULD_ID INTEGER(2) NOT NULL,	
		EFU_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(EFU_ID),
		FOREIGN KEY(UNIT_ID) REFERENCES ',DESTINATIONSCHEMA,'.UNIT (UNIT_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE EFUCREATEQUERY FROM @EFU_CREATEQUERY;
		EXECUTE EFUCREATEQUERY;			
    -- INSERT QUERY FOR EXPENSE_FACILITY_USE TABLE

		SET @EFU_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_FACILITY_USE
		(UNIT_ID, EFU_INVOICE_DATE, EFU_DEPOSIT, EFU_AMOUNT, EFU_COMMENTS, ULD_ID,EFU_TIMESTAMP) 
		SELECT U.UNIT_ID, BSF.EXP_FACILITY_INVOICE_DATE, BSF.EXP_FACILITY_DEPOSIT, BSF.EXP_FACILITY_AMOUNT, BSF.EXP_FACILITY_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.UNIT U INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE 
		BSF.EXP_TYPE_OF_EXPENSE="FACILITY USE" AND U.UNIT_NO=BSF.EXP_UNIT_NO AND ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE EFUINSERTQUERY FROM @EFU_INSERTQUERY;
		EXECUTE EFUINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_FACILITY_USE SET EFU_TIMESTAMP=(SELECT CONVERT_TZ(EFU_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
		SET @DUR = DURATION;
    -- COUNT CHECKING FOR EXPENSE_FACILITY_USE

		SET @COUNT_SCDB_EFU=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_FACILITYUSE FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"FACILITY USE"'));
		PREPARE COUNT_SCDBEFU FROM @COUNT_SCDB_EFU;
		EXECUTE COUNT_SCDBEFU;    
		SET @COUNT_SPLITTING_EFU=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_FACILITYUSE FROM ',DESTINATIONSCHEMA,'.EXPENSE_FACILITY_USE'));
		PREPARE COUNT_SPLITTINGEFU FROM @COUNT_SPLITTING_EFU;
		EXECUTE COUNT_SPLITTINGEFU;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_FACILITYUSE-@SPLITTED_FACILITYUSE);		
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_FACILITY_USE');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_FACILITY_USE');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');       
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_FACILITYUSE WHERE PREASP_DATA='EXPENSE_FACILITY_USE';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_FACILITYUSE,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);	
    -- 4.QUERY FOR CREATE EXPENSE_CARPARK TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @ECP_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_CARPARK'));
		PREPARE ECPDROPQUERY FROM @ECP_DROPQUERY;
		EXECUTE ECPDROPQUERY;	
		SET @ECP_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_CARPARK(
		ECP_PARK_ID	INT NOT NULL AUTO_INCREMENT,
		EDCP_ID	INTEGER NOT NULL,
		ECP_INVOICE_DATE DATE NOT NULL,	
		ECP_FROM_PERIOD DATE NOT NULL,	
		ECP_TO_PERIOD DATE NOT NULL,	
		ECP_AMOUNT DECIMAL(5,2) NOT NULL,	
		ECP_COMMENTS TEXT,			
		ULD_ID INTEGER(2) NOT NULL,	
		ECP_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(ECP_PARK_ID),
		FOREIGN KEY(EDCP_ID) REFERENCES ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_CARPARK (EDCP_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE ECPCREATEQUERY FROM @ECP_CREATEQUERY;
		EXECUTE ECPCREATEQUERY;			
    -- INSERT QUERY FOR EXPENSE_CARPARK TABLE

		SET @ECP_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_CARPARK
		(EDCP_ID, ECP_INVOICE_DATE, ECP_FROM_PERIOD, ECP_TO_PERIOD, ECP_AMOUNT, ECP_COMMENTS, ULD_ID,ECP_TIMESTAMP) 
		SELECT EDCP.EDCP_ID, BSF.EXP_CAR_INVOICE_DATE, BSF.EXP_CAR_START_PERIOD, BSF.EXP_CAR_END_PERIOD, BSF.EXP_CAR_AMOUNT, BSF.EXP_CAR_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.EXPENSE_DETAIL_CARPARK EDCP INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF JOIN ',DESTINATIONSCHEMA,'.UNIT U,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD
		WHERE U.UNIT_ID=EDCP.UNIT_ID AND BSF.EXP_UNIT_NO=U.UNIT_NO AND BSF.EXP_TYPE_OF_EXPENSE="CAR PARK" AND EDCP.EDCP_CAR_NO=BSF.EXP_CAR_NO AND ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE ECPINSERTQUERY FROM @ECP_INSERTQUERY;
		EXECUTE ECPINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_CARPARK SET ECP_TIMESTAMP=(SELECT CONVERT_TZ(ECP_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
    -- COUNT CHECKING FOR EXPENSE_CARPARK

		SET @COUNT_SCDB_ECP=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_CARPARK FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"CAR PARK"'));
		PREPARE COUNT_SCDBECP FROM @COUNT_SCDB_ECP;
		EXECUTE COUNT_SCDBECP;    
		SET @COUNT_SPLITTING_ECP=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_CARPARK FROM ',DESTINATIONSCHEMA,'.EXPENSE_CARPARK'));
		PREPARE COUNT_SPLITTINGECP FROM @COUNT_SPLITTING_ECP;
		EXECUTE COUNT_SPLITTINGECP;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_CARPARK-@SPLITTED_CARPARK);		
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_CARPARK');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_CARPARK');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');		
		SET @DUR = DURATION;        
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_CARPARK WHERE PREASP_DATA='EXPENSE_CARPARK';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_CARPARK,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);	
    -- 5.QUERY FOR CREATE EXPENSE_MOVING_IN_AND_OUT TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @EMIO_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_MOVING_IN_AND_OUT'));
		PREPARE EMIODROPQUERY FROM @EMIO_DROPQUERY;
		EXECUTE EMIODROPQUERY;	
		SET @EMIO_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_MOVING_IN_AND_OUT(
		EMIO_ID	INTEGER NOT NULL AUTO_INCREMENT,
		UNIT_ID	INTEGER NOT NULL,
		EMIO_INVOICE_DATE DATE NOT NULL,	
		EMIO_AMOUNT	DECIMAL(5,2) NOT NULL,	
		EMIO_COMMENTS TEXT NULL,	
		ULD_ID INTEGER(2) NOT NULL,
		EMIO_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(EMIO_ID),
		FOREIGN KEY(UNIT_ID) REFERENCES ',DESTINATIONSCHEMA,'.UNIT (UNIT_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE EMIOCREATEQUERY FROM @EMIO_CREATEQUERY;
		EXECUTE EMIOCREATEQUERY;	
    -- INSERT QUERY FOR EXPENSE_MOVING_IN_AND_OUT TABLE

		SET @EMIO_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_MOVING_IN_AND_OUT
		(UNIT_ID, EMIO_INVOICE_DATE, EMIO_AMOUNT, EMIO_COMMENTS, ULD_ID,EMIO_TIMESTAMP) 
		SELECT U.UNIT_ID, BSF.EXP_MOVI_IN_OUT_INVOICE_DATE, BSF.EXP_MOVI_IN_OUT_AMOUNT, BSF.EXP_MOVI_IN_OUT_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.UNIT U INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD
		WHERE BSF.EXP_TYPE_OF_EXPENSE="MOVING IN OUT" AND U.UNIT_NO=BSF.EXP_UNIT_NO AND ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE EMIOINSERTQUERY FROM @EMIO_INSERTQUERY;
		EXECUTE EMIOINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_MOVING_IN_AND_OUT SET EMIO_TIMESTAMP=(SELECT CONVERT_TZ(EMIO_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));
    -- COUNT CHECKING FOR EXPENSE_MOVING_IN_AND_OUT

		SET @COUNT_SCDB_EMIO=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_EMIO FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"MOVING IN OUT"'));
		PREPARE COUNT_SCDBEMIO FROM @COUNT_SCDB_EMIO;
		EXECUTE COUNT_SCDBEMIO;    
		SET @COUNT_SPLITTING_EMIO=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_EMIO FROM ',DESTINATIONSCHEMA,'.EXPENSE_MOVING_IN_AND_OUT'));
		PREPARE COUNT_SPLITTINGEMIO FROM @COUNT_SPLITTING_EMIO;
		EXECUTE COUNT_SPLITTINGEMIO;	
		SET @REJECTION_COUNT=(@COUNT_EMIO-@SPLITTED_EMIO);		
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_MOVING_IN_AND_OUT');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_MOVING_IN_AND_OUT');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');		
		SET @DUR = DURATION;       
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_EMIO WHERE PREASP_DATA='EXPENSE_MOVING_IN_AND_OUT';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_EMIO,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);        	
    -- 6.QUERY FOR CREATE EXPENSE_PURCHASE_NEW_CARD TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @EPNC_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_PURCHASE_NEW_CARD'));
		PREPARE EPNCDROPQUERY FROM @EPNC_DROPQUERY;
		EXECUTE EPNCDROPQUERY;	
		SET @EPNC_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_PURCHASE_NEW_CARD(
		EPNC_ID	INTEGER NOT NULL AUTO_INCREMENT,
		UNIT_ID	INTEGER NOT NULL,
		EPNC_NUMBER	INTEGER(7) UNIQUE NOT NULL,	
		EPNC_INVOICE_DATE DATE NOT NULL,	
		EPNC_AMOUNT	DECIMAL(5,2) NOT NULL,	
		EPNC_COMMENTS TEXT NULL	,
		ULD_ID INTEGER(2) NOT NULL,	
		EPNC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(EPNC_ID),
		FOREIGN KEY(UNIT_ID) REFERENCES ',DESTINATIONSCHEMA,'.UNIT (UNIT_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE EPNCCREATEQUERY FROM @EPNC_CREATEQUERY;
		EXECUTE EPNCCREATEQUERY;		
    -- INSERT QUERY FOR EXPENSE_PURCHASE_NEW_CARD TABLE

		SET @EPNC_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_PURCHASE_NEW_CARD
		(UNIT_ID, EPNC_NUMBER, EPNC_INVOICE_DATE, EPNC_AMOUNT, EPNC_COMMENTS, ULD_ID,EPNC_TIMESTAMP) 
		SELECT U.UNIT_ID, BSF.EXP_CARD_NUMBER, BSF.EXP_CARD_PURCHASE_DATE, BSF.EXP_CARD_AMOUNT, BSF.EXP_CARD_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.UNIT U INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD
		WHERE  BSF.EXP_TYPE_OF_EXPENSE="PURCHASE NEW ACCESS CARD" AND U.UNIT_NO=BSF.EXP_UNIT_NO AND ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE EPNCINSERTQUERY FROM @EPNC_INSERTQUERY;
		EXECUTE EPNCINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_PURCHASE_NEW_CARD SET EPNC_TIMESTAMP=(SELECT CONVERT_TZ(EPNC_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));	
    -- COUNT CHECKING FOR EXPENSE_PURCHASE_NEW_CARD

		SET @COUNT_SCDB_EPNC=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_PURCHASECARD FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"PURCHASE NEW ACCESS CARD"'));
		PREPARE COUNT_SCDBEPNC FROM @COUNT_SCDB_EPNC;
		EXECUTE COUNT_SCDBEPNC;    
		SET @COUNT_SPLITTING_EPNC=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_EPNC FROM ',DESTINATIONSCHEMA,'.EXPENSE_PURCHASE_NEW_CARD'));
		PREPARE COUNT_SPLITTINGEPNC FROM @COUNT_SPLITTING_EPNC;
		EXECUTE COUNT_SPLITTINGEPNC;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_PURCHASECARD-@SPLITTED_EPNC);        
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_PURCHASE_NEW_CARD');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_PURCHASE_NEW_CARD');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');		
		SET @DUR = DURATION;        
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_PURCHASECARD WHERE PREASP_DATA='EXPENSE_PURCHASE_NEW_CARD';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_EPNC,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);	
    -- 7.QUERY FOR CREATE EXPENSE_PETTY_CASH TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @EPC_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_PETTY_CASH'));
		PREPARE EPCDROPQUERY FROM @EPC_DROPQUERY;
		EXECUTE EPCDROPQUERY;	
		SET @EPNC_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_PETTY_CASH(
		EPC_ID INTEGER NOT NULL	AUTO_INCREMENT,
		EPC_DATE DATE NOT NULL,	
		EPC_CASH_IN	DECIMAL(6,2) NULL,	
		EPC_CASH_OUT DECIMAL(6,2) NULL,	
		EPC_BALANCE	DECIMAL(6,2) NOT NULL,	
		EPC_INVOICE_ITEMS TEXT NOT NULL,	
		EPC_COMMENTS TEXT NULL,	
		ULD_ID INTEGER(2) NOT NULL,	
		EPC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(EPC_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE EPNCCREATEQUERY FROM @EPNC_CREATEQUERY;
		EXECUTE EPNCCREATEQUERY;	
    -- INSERT QUERY FOR EXPENSE_PETTY_CASH TABLE

		SET @EPC_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_PETTY_CASH
		(EPC_DATE, EPC_CASH_IN, EPC_CASH_OUT, EPC_BALANCE, EPC_INVOICE_ITEMS, EPC_COMMENTS, ULD_ID,EPC_TIMESTAMP)
		SELECT BSF.EXP_PETTY_DATE, BSF.EXP_PETTY_CASH_IN, BSF.EXP_PETTY_CASH_OUT, BSF.EXP_PETTY_CURRENT_BAL, BSF.EXP_PETTY_INVOICE_ITEMS, BSF.EXP_PETTY_COMMENTS, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.TEMP_BIZ_DAILY_SCDB_FORMAT BSF,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD
		WHERE BSF.EXP_TYPE_OF_EXPENSE="PETTY CASH" AND ULD.ULD_LOGINID=BSF.USERSTAMP ORDER BY BSF.EXP_PETTY_ID'));        
		PREPARE EPCINSERTQUERY FROM @EPC_INSERTQUERY;
		EXECUTE EPCINSERTQUERY;	
    
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));		
    -- COUNT CHECKING FOR EXPENSE_PETTY_CASH

		SET @COUNT_SCDB_EPC=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_PETTYCASH FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"PETTY CASH"'));
		PREPARE COUNT_SCDBEPC FROM @COUNT_SCDB_EPC;
		EXECUTE COUNT_SCDBEPC;    
		SET @COUNT_SPLITTING_EPC=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_EPC FROM ',DESTINATIONSCHEMA,'.EXPENSE_PETTY_CASH'));
		PREPARE COUNT_SPLITTINGEPC FROM @COUNT_SPLITTING_EPC;
		EXECUTE COUNT_SPLITTINGEPC;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_PETTYCASH-@SPLITTED_EPC);        
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_PETTY_CASH');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_PETTY_CASH');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');		
		SET @DUR = DURATION;        
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_PETTYCASH WHERE PREASP_DATA='EXPENSE_PETTY_CASH';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_EPC,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);	
    -- 8.QUERY FOR CREATE EXPENSE_HOUSEKEEPING TABLE		

		SET START_TIME=(SELECT CURTIME());		
		SET @EHK_DROPQUERY=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.EXPENSE_HOUSEKEEPING'));
		PREPARE EHKDROPQUERY FROM @EHK_DROPQUERY;
		EXECUTE EHKDROPQUERY;	
		SET @EHK_CREATEQUERY=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.EXPENSE_HOUSEKEEPING(
		EHK_ID INTEGER NOT NULL	AUTO_INCREMENT,
		EMP_ID INTEGER NOT NULL,
		EHK_WORK_DATE DATE NOT NULL,
		EHK_DURATION DECIMAL(4,2) NOT NULL,	
		EHK_DESCRIPTION TEXT NOT NULL,	
		ULD_ID INTEGER(2) NOT NULL,	
		EHK_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		PRIMARY KEY(EHK_ID),
		FOREIGN KEY(EMP_ID) REFERENCES ',DESTINATIONSCHEMA,'.EMPLOYEE_DETAILS (EMP_ID),
		FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS (ULD_ID))'));
		PREPARE EHKCREATEQUERY FROM @EHK_CREATEQUERY;
		EXECUTE EHKCREATEQUERY;	
    -- INSERT QUERY FOR EXPENSE_HOUSEKEEPING TABLE

		SET @EHK_INSERTQUERY=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.EXPENSE_HOUSEKEEPING
		(EMP_ID, EHK_WORK_DATE, EHK_DURATION, EHK_DESCRIPTION, ULD_ID,EHK_TIMESTAMP) 
		SELECT ED.EMP_ID, BSF.EXP_HK_WORK_DATE, BSF.EXP_HK_DURATION, BSF.EXP_HK_DESCRIPTION, ULD.ULD_ID,BSF.TIMESTAMP
		FROM ',DESTINATIONSCHEMA,'.EMPLOYEE_DETAILS ED INNER JOIN ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT BSF,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD
		WHERE  BSF.EXP_TYPE_OF_EXPENSE="HOUSE KEEPING" AND BSF.EXP_HK_CLEANER_NAME=ED.EMP_FIRST_NAME AND
		ULD.ULD_LOGINID=BSF.USERSTAMP'));        
		PREPARE EHKINSERTQUERY FROM @EHK_INSERTQUERY;
		EXECUTE EHKINSERTQUERY;	
    SET @UPDATETIMESTAMP=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.EXPENSE_HOUSEKEEPING SET EHK_TIMESTAMP=(SELECT CONVERT_TZ(EHK_TIMESTAMP, "+08:00","+0:00"))'));
    PREPARE UPDATETIMESTAMPSTMT FROM @UPDATETIMESTAMP;
    EXECUTE UPDATETIMESTAMPSTMT;
		SET END_TIME=(SELECT CURTIME());
		SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));		
    -- COUNT CHECKING FOR EXPENSE_HOUSEKEEPING

		SET @COUNT_SCDB_EHK=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_HOUSEKEEPING FROM ',SOURCESCHEMA,'.BIZ_DAILY_SCDB_FORMAT WHERE EXP_TYPE_OF_EXPENSE=','"HOUSE KEEPING"'));
		PREPARE COUNT_SCDBEHK FROM @COUNT_SCDB_EHK;
		EXECUTE COUNT_SCDBEHK;    
		SET @COUNT_SPLITTING_EHK=(SELECT CONCAT('SELECT COUNT(*)INTO @SPLITTED_HOUSEKEEPING FROM ',DESTINATIONSCHEMA,'.EXPENSE_HOUSEKEEPING'));
		PREPARE COUNT_SPLITTINGEHK FROM @COUNT_SPLITTING_EHK;
		EXECUTE COUNT_SPLITTINGEHK;	
		SET @REJECTION_COUNT=(@COUNT_SCDB_HOUSEKEEPING-@SPLITTED_HOUSEKEEPING);       
		SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='EXPENSE_HOUSEKEEPING');	
		SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING');	
		SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='BIZ DAILY');		
		SET @DUR = DURATION;        
		UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_HOUSEKEEPING WHERE PREASP_DATA='EXPENSE_HOUSEKEEPING';	
		INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)
		VALUES(@POSTAPID,@SPLITTED_HOUSEKEEPING,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);		
		SET FOREIGN_KEY_CHECKS=1;
		COMMIT;
END;
