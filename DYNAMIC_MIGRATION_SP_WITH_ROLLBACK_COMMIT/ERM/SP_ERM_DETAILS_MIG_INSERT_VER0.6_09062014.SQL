--version:0.6 --sdate:09/06/2014 --edate:09/06/2014 --issue:566 comment:#12 -desc:IMPLEMENTING ROLLBACK AND COMMIT by:BHAVANI.R
--version:0.5 --sdate:29/03/2014 --edate:29/03/2014 --issue:765 comment:#8 -desc:get source and destination dynamically by:dhivya
--version:0.4 --sdate:25/02/2014 --edate:26/02/2014 --issue:750 comment:#30 -desc:added uld_id header and source timestamp by:dhivya
--version:0.3 --sdate:20/02/2014 --edate:21/02/2014 --issue:750 -desc:added preaudit and post audit queries done by:dhivya
--VER 0.2 ISSUE NO:594 COMMENT NO:#54 STARTDATE:22/01/2014 ENDDATE:22/01/2014 DESC:CHANGED MIGRATION.MIG_ERM_OCCUPATION_DETAILS TABLE NAME AS MIG_ERM_OCCUPATION_DETAILS AND MIGRATION.MIG_ERM_ENTRY_DETAILS AS MIG_ERM_ENTRY_DETAILS DONE BY DHIVYA


DROP PROCEDURE IF EXISTS SP_ERM_DETAILS_MIG_INSERT;
CREATE PROCEDURE SP_ERM_DETAILS_MIG_INSERT(IN SOURCESCHEMA VARCHAR(50),IN DESTINATIONSCHEMA VARCHAR(50),IN MIGUSERSTAMP VARCHAR(100))
BEGIN
-- VARIABLE DECLARATION
DECLARE STR INT;
DECLARE STR_UPDATE INT;
DECLARE  MINID INTEGER;
DECLARE MAXID INTEGER;
DECLARE ERMODATA VARCHAR(40);
DECLARE ERMOID VARCHAR(40);
DECLARE ERMOLENGTH INTEGER;
DECLARE START_TIME TIME;
DECLARE EXISTERMOID INTEGER;
DECLARE OCCERM_ID INTEGER;
DECLARE END_TIME TIME;
DECLARE DURATION TIME;
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN 
ROLLBACK;
END;
START TRANSACTION;
SET START_TIME=(SELECT CURTIME());
SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
 PREPARE LOGINID FROM @LOGIN_ID;
 EXECUTE LOGINID;

SET @DROP_ERM_ENTRY_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.ERM_ENTRY_DETAILS'));
PREPARE DROP_ERM_ENTRY_DETAILS_STMT FROM @DROP_ERM_ENTRY_DETAILS;
EXECUTE DROP_ERM_ENTRY_DETAILS_STMT;
SET FOREIGN_KEY_CHECKS=0;

SET @DROP_ERM_OCCUPATION_DETAILS=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS'));
PREPARE DROP_ERM_OCCUPATION_DETAILS_STMT FROM @DROP_ERM_OCCUPATION_DETAILS;
EXECUTE DROP_ERM_OCCUPATION_DETAILS_STMT;


SET @CREATE_ERM_OCCUPATION_DETAILS=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS(ERMO_ID INTEGER NOT NULL AUTO_INCREMENT,ERMO_DATA VARCHAR(40) NOT NULL,ULD_ID INT(2) NOT NULL,ERMO_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY(ERMO_ID),FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
PREPARE CREATE_ERM_OCCUPATION_DETAILS_STMT FROM @CREATE_ERM_OCCUPATION_DETAILS;
EXECUTE CREATE_ERM_OCCUPATION_DETAILS_STMT;
--  ERM_ENTRY_DETAILS                        
SET @CREATE_ERM_ENTRY_DETAILS=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.ERM_ENTRY_DETAILS(ERM_ID INTEGER NOT NULL AUTO_INCREMENT, ERM_CUST_NAME VARCHAR(40) NOT NULL, ERM_RENT DECIMAL(7,2) NOT NULL, ERM_MOVING_DATE DATE NOT NULL, ERM_MIN_STAY VARCHAR(10) NOT NULL, ERMO_ID INTEGER NOT NULL, NC_ID INTEGER NULL, ERM_NO_OF_GUESTS VARCHAR(10) NULL, ERM_AGE VARCHAR(10) NULL, ERM_CONTACT_NO BIGINT(15) NULL, ERM_EMAIL_ID VARCHAR(40) NULL, ERM_COMMENTS TEXT NOT NULL, ULD_ID INT(2) NOT NULL, ERM_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY(ERM_ID), FOREIGN KEY(ERMO_ID) REFERENCES ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS (ERMO_ID), FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
PREPARE CREATE_ERM_ENTRY_DETAILS_STMT FROM @CREATE_ERM_ENTRY_DETAILS;
EXECUTE CREATE_ERM_ENTRY_DETAILS_STMT;


UPDATE MIG_ERM_ENTRY_DETAILS SET ERM_COMMENTS=' ' WHERE ERM_COMMENTS IS NULL;

SET @INSERTERMOCCDETAILS=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS(ERMO_ID,ERMO_DATA,ULD_ID,ERMO_TIMESTAMP)SELECT EOD.ERMO_ID,EOD.ERMO_DATA,ULD.ULD_ID,EOD.ERMO_TIMESTAMP FROM MIG_ERM_OCCUPATION_DETAILS EOD,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=EOD.ERMO_USERSTAMP')) ;
PREPARE INSERTERMOCCDETAILSSTMT FROM @INSERTERMOCCDETAILS;
EXECUTE INSERTERMOCCDETAILSSTMT;

DROP TABLE IF EXISTS ERM_ENTRY_DETAILS_SAMPLE;
CREATE TABLE ERM_ENTRY_DETAILS_SAMPLE(ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,ERM_SNO INTEGER NOT NULL,ERM_CUST_NAME VARCHAR(40) NOT NULL,ERM_RENT DECIMAL(7,2)NOT NULL,ERM_MOVING_DATE DATE NOT NULL,ERM_MIN_STAY VARCHAR(10)NOT NULL,
ERMO_ID VARCHAR(40) NOT NULL,NC_SNO VARCHAR(40)NULL,ERM_NO_OF_GUESTS VARCHAR(10)NULL,ERM_AGE VARCHAR(10)NULL,ERM_CONTACT_NO BIGINT(15)NULL,
ERM_EMAIL_ID VARCHAR(40)NULL,ERM_COMMENTS TEXT NOT NULL,ULD_ID INTEGER NOT NULL,ERM_TIMESTAMP VARCHAR(50) NOT NULL);

SET @INSERTERMDETAILSSAMPLE=(SELECT CONCAT('INSERT INTO ERM_ENTRY_DETAILS_SAMPLE(ERM_SNO,ERM_CUST_NAME,ERM_RENT,ERM_MOVING_DATE,ERM_MIN_STAY,ERMO_ID,NC_SNO,ERM_NO_OF_GUESTS,ERM_AGE,ERM_CONTACT_NO,
ERM_EMAIL_ID,ERM_COMMENTS,ULD_ID,ERM_TIMESTAMP)SELECT ERM.ERM_SNO,ERM.ERM_CUST_NAME,ERM.ERM_RENT,ERM.ERM_MOVING_DATE,ERM.ERM_MIN_STAY,ERM.ERMO_ID,ERM.NC_SNO,ERM.ERM_NO_OF_GUESTS,ERM.ERM_AGE,ERM.ERM_CONTACT_NO,ERM.ERM_EMAIL_ID,
ERM_COMMENTS,ULD.ULD_ID,ERM.ERM_TIMESTAMP FROM MIG_ERM_ENTRY_DETAILS ERM,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=ERM.ERM_USERSTAMP'));
PREPARE INSERTERMDETAILSSAMPLESTMT FROM @INSERTERMDETAILSSAMPLE;
EXECUTE INSERTERMDETAILSSAMPLESTMT;

SET MINID=(SELECT MIN(ID) FROM ERM_ENTRY_DETAILS_SAMPLE);
SET MAXID=(SELECT MAX(ID) FROM ERM_ENTRY_DETAILS_SAMPLE);
WHILE MINID<=MAXID DO

SET ERMOID=(SELECT ERMO_ID FROM ERM_ENTRY_DETAILS_SAMPLE WHERE ID=MINID);
SET ERMOLENGTH=(SELECT LENGTH(ERMOID));
IF ERMOLENGTH>=4 THEN
	SET @SELECTEXISTERMOIDSTMT=(SELECT CONCAT('SELECT ERMO_ID INTO @EXIST_ERMOID FROM ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS WHERE ERMO_DATA=','"',ERMOID,'"'));
	PREPARE EXISTERMOIDSTMT FROM @SELECTEXISTERMOIDSTMT;
	EXECUTE EXISTERMOIDSTMT;
	SET EXISTERMOID=@EXIST_ERMOID;
		IF EXISTERMOID IS NULL THEN
			--  INSERT OCCUPATION DETAILS
			SET @INSERTERMOCC=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS(ERMO_DATA,ULD_ID)VALUES (','"',ERMOID,'"',',(SELECT ULD_ID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID="expatsintegrated@gmail.com"))'));
			PREPARE INSERTERMOCCSTMT FROM @INSERTERMOCC;
			EXECUTE INSERTERMOCCSTMT;
			
			SET @SELECT_ERM_ID=(SELECT CONCAT('SELECT ERMO_ID INTO @OCCERMID FROM ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS WHERE ERMO_DATA=','"',ERMOID,'"'));
			PREPARE SELECT_ERM_ID_STMT FROM @SELECT_ERM_ID;
			EXECUTE SELECT_ERM_ID_STMT;
			
			SET OCCERM_ID=@OCCERMID;
		ELSE
		SET OCCERM_ID=EXISTERMOID;
		END IF;
		UPDATE ERM_ENTRY_DETAILS_SAMPLE SET ERMO_ID=OCCERM_ID WHERE ID=MINID;
	END IF;
	SET @OCCERMID=NULL;
	SET @EXIST_ERMOID=NULL;
SET MINID=MINID+1;
END WHILE;
SET @INSERT_ERM_ENTRY_DETAILS=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERM_ENTRY_DETAILS(ERM_ID,ERM_CUST_NAME,ERM_RENT,ERM_MOVING_DATE,ERM_MIN_STAY,ERMO_ID,NC_ID,ERM_NO_OF_GUESTS,ERM_AGE,ERM_CONTACT_NO,ERM_EMAIL_ID,ERM_COMMENTS,ULD_ID,ERM_TIMESTAMP)SELECT ERM_SNO,ERM_CUST_NAME,ERM_RENT,ERM_MOVING_DATE,ERM_MIN_STAY,ERMO_ID,NC_SNO,ERM_NO_OF_GUESTS,ERM_AGE,ERM_CONTACT_NO,ERM_EMAIL_ID,ERM_COMMENTS,ULD_ID,ERM_TIMESTAMP FROM ERM_ENTRY_DETAILS_SAMPLE'));
PREPARE INSERT_ERM_ENTRY_DETAILS_STMT FROM @INSERT_ERM_ENTRY_DETAILS;
EXECUTE INSERT_ERM_ENTRY_DETAILS_STMT;

 SET END_TIME=(SELECT CURTIME());
SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

--  POST_AUDIT_HISTORY
SET @ERMOCSTMT=(SELECT CONCAT('SELECT COUNT(DISTINCT( t1.ERMO_ID)) INTO @ERMOC FROM ',SOURCESCHEMA,'.MIG_ERM_ENTRY_DETAILS t1 LEFT JOIN ',SOURCESCHEMA,'.MIG_ERM_OCCUPATION_DETAILS t2 ON t2.ERMO_DATA = t1.ERMO_ID WHERE t2.ERMO_DATA IS NULL AND LENGTH(t1.ERMO_ID)>=4'));
PREPARE ERMOC_STMT FROM @ERMOCSTMT;
EXECUTE ERMOC_STMT;

SET @ERMSTMT=(SELECT CONCAT('SELECT COUNT(*) INTO @ERM FROM ',SOURCESCHEMA,'.MIG_ERM_OCCUPATION_DETAILS'));
PREPARE ERM_STMT FROM @ERMSTMT;
EXECUTE ERM_STMT;

SET @COUNT_SCDB_ERMOC=(SELECT SUM(@ERM+@ERMOC));
SET @COUNT_SPLITTING_ERM_OC=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITTING_ERMOC FROM ',DESTINATIONSCHEMA,'.ERM_OCCUPATION_DETAILS'));
PREPARE COUNT_SPLITTING_ERM_OC_STMT FROM @COUNT_SPLITTING_ERM_OC;
EXECUTE COUNT_SPLITTING_ERM_OC_STMT;

SET @REJECTION_COUNT=(@COUNT_SCDB_ERMOC-@COUNT_SPLITTING_ERMOC);

SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'ERM_OCCUPATION_DETAILS'"));
PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
EXECUTE POSTAPSTMT;
SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'ERM_OCCUPATION_DETAILS'"));
PREPARE PREASPIDSTMT FROM @PREASPSTMT;
EXECUTE PREASPIDSTMT;
SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'ERM'"));
PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
EXECUTE PREAMPIDSTMT;
SET @DUR=DURATION;    
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_ERMOC WHERE PREASP_DATA='ERM_OCCUPATION_DETAILS';
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITTING_ERMOC,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID); 
SET @COUNT_SCDB_ERM_ENTRY=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SCDB_ERMENTRY FROM ',SOURCESCHEMA,'.MIG_ERM_ENTRY_DETAILS'));
PREPARE COUNT_SCDB_ERM_ENTRY_STMT FROM @COUNT_SCDB_ERM_ENTRY;
EXECUTE COUNT_SCDB_ERM_ENTRY_STMT;
SET @COUNT_SPLITTING_ERM_ENTRY=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITTING_ERMENTRY FROM ',DESTINATIONSCHEMA,'.ERM_ENTRY_DETAILS'));
PREPARE COUNT_SPLITTING_ERM_ENTRY_STMT FROM @COUNT_SPLITTING_ERM_ENTRY;
EXECUTE COUNT_SPLITTING_ERM_ENTRY_STMT;
SET @REJECTION_COUNT=(@COUNT_SCDB_ERMENTRY-@COUNT_SPLITTING_ERMENTRY);
SET @POSTAPIDSTMT=(SELECT CONCAT('SELECT POSTAP_ID INTO @POSTAPID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA=',"'ERM_ENTRY_DETAILS'"));
PREPARE POSTAPSTMT FROM @POSTAPIDSTMT;
EXECUTE POSTAPSTMT;
SET @PREASPSTMT=(SELECT CONCAT('SELECT PREASP_ID INTO @PREASPID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA=',"'ERM_ENTRY_DETAILS'"));
PREPARE PREASPIDSTMT FROM @PREASPSTMT;
EXECUTE PREASPIDSTMT;
SET @PREAMPSTMT=(SELECT CONCAT('SELECT PREAMP_ID INTO @PREAMPID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA=',"'ERM'"));
PREPARE PREAMPIDSTMT FROM @PREAMPSTMT;
EXECUTE PREAMPIDSTMT;
SET @DUR=DURATION;    
UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_SCDB_ERMENTRY WHERE PREASP_DATA='ERM_ENTRY_DETAILS';
SET FOREIGN_KEY_CHECKS=0;
INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITTING_ERMENTRY,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
SET @DROP_ERM_ENTRY_DETAILS_SAMPLE=(SELECT CONCAT('DROP TABLE ',SOURCESCHEMA,'.ERM_ENTRY_DETAILS_SAMPLE'));
PREPARE DROP_ERM_ENTRY_DETAILS_SAMPLE_STMT FROM @DROP_ERM_ENTRY_DETAILS_SAMPLE;
EXECUTE DROP_ERM_ENTRY_DETAILS_SAMPLE_STMT;
COMMIT;
END;