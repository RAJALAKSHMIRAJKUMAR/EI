-- version:1.1 -- sdate:09/06/2014 -- edate:09/06/2014 -- issue:566 --comment no#12 --desc:IMPLEMENTED ROLLBACK AND COMMIT --done by:DHIVYA
-- version:1.0 -- sdate:19/04/2014 -- edate:19/04/2014 -- issue:765 --desc:REMOVE THE VALUE CGNID 48 IN DEPOSIT_DEDUCTION_CONFIGURATION--done by:BHAVANI.R
-- version:0.9 -- sdate:10/04/2014 -- edate:10/04/2014 -- issue:765 --desc:added SCDB  1/4/2014 TIME STAMP FOR ALL SS RECORDS --done by:RL
-- version:0.8 --sdate:01/04/2014 --edate:01/04/2014 --issue:765 --commentno#53 --desc:SPLIT THE CONFIG MIG  SP INTO 4 PART. --dONEBY:RL
-- version:0.7 --sdate:28/03/2013 --edate:28/03/2014 --issue:783 --desc:changed ALL FOREIGN KEY REFERENCES TABLE SHOULD IN DESTINATION SCHEMA --doneby:RL
--VER:0.6 STARTDATE:28/03/2014 ENDDATE:28/03/2014 ISSUENO:783 DESC:CHANGED THE SP:SP_MIG_CONFIG_INSERT  REMOVED THE DESTINATION SCHEMA IN POST_AUDIT_HISTORY DONE BY:LALITHA
--VER:0.5 STARTDATE:25/03/2014 ENDDATE:25/03/2014 ISSUENO:765 COMMENTNO:#8 DESC:CHANGED THE SP:SP_MIG_CONFIG_INSERT CHANGED THE SCHEMA FOR INSERTION IN POST AUDIT HISTORY AND UPDATION IN PRE AUDIT SUB PROFILE  DONE BY:LALITHA
-- version:0.4 -- sdate:20/03/2014 -- edate:22/03/2014 -- issue:765 -- desc:Changed the SP:SP_MIG_CONFIG_INSERT As prepared stmt for dynamic running purpose --Doneby:Lalitha
-- version:0.3 -- sdate:17/03/2014 -- edate:17/03/2014 -- issue:765 -- desc:droped temp table -- doneby:RL
-- version:0.2 -- sdate:25/02/2014 -- edate:25/02/2014 -- issue:750 -- desc:getting userstamp n time stamp from db & userstamp changed as uld_id -- doneby:RL
-- version:0.1 -- sdate:20/02/2014 -- edate:21/02/2014 -- issue:750 -- desc:Implementing audit table insert -- doneby:RL

DROP PROCEDURE IF EXISTS SP_MIG_CONFIG_INSERT2;
CREATE PROCEDURE SP_MIG_CONFIG_INSERT2(IN SOURCESCHEMA  VARCHAR(40),IN DESTINATIONSCHEMA  VARCHAR(40),IN MIGUSERSTAMP VARCHAR(50))
BEGIN

-- DECLARING VARIABLES
	DECLARE START_TIME TIME;
	DECLARE END_TIME TIME;
	DECLARE DURATION TIME;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
	ROLLBACK;
	END;
	START TRANSACTION;
	
	SET FOREIGN_KEY_CHECKS=0;

-- QUERY FOR CHANGING USERSTAMP AS ULD_ID
    SET @LOGIN_ID=(SELECT CONCAT('SELECT ULD_ID INTO @ULDID FROM ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS WHERE ULD_LOGINID=','"',MIGUSERSTAMP,'"'));
    PREPARE LOGINID FROM @LOGIN_ID;
    EXECUTE LOGINID;
	
--  7.QUERY FOR CREATE TEMP_DEPOSIT_DEDUCTION_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;	
	
	SET @CREATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION(
	TDDC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TDDC_DATA TEXT NOT NULL,
	TDDC_SUB_DATA TEXT NULL,
	TDDC_INITIALIZE_FLAG CHAR(1) NULL,
	TDDC_USERSTAMP	VARCHAR(50)NULL,
	TDDC_TIMESTAMP VARCHAR(50),
	PRIMARY KEY(TDDC_ID),FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID))'));
	PREPARE CREATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @CREATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE CREATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;

--  QUERY FOR INSERT VALUES IN TEMP_DEPOSIT_DEDUCTION_CONFIGURATION TABLE	
	SET @INSERT_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION(CGN_ID,TDDC_DATA,TDDC_SUB_DATA,TDDC_INITIALIZE_FLAG,TDDC_USERSTAMP,TDDC_TIMESTAMP)
	(SELECT CGN_ID,DATA,SUB_DATA,INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN(30,42))'));
    PREPARE INSERT_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @INSERT_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE INSERT_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;

--  QUERY FOR UPDATE VALUES IN TEMP_DEPOSIT_DEDUCTION_CONFIGURATION TABLE		
	SET @UPDATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION SET TDDC_USERSTAMP=''expatsintegrated@gmail.com'' WHERE TDDC_USERSTAMP IS NULL'));	
    PREPARE UPDATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @UPDATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE UPDATE_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;
	
	SET @TSTAMP = (SELECT CONCAT('SELECT DISTINCT(TIMESTAMP) INTO @T_STAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID=2'));
	PREPARE TSTAMPSTMT FROM @TSTAMP;
	EXECUTE TSTAMPSTMT;
	
-- QUERY FOR UPDATE TEMP_DEPOSIT_DEDUCTION_CONFIGURATION
	SET @UPDATE_TEMP_DEPOSIT_DEDUCTIONCONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION SET TDDC_TIMESTAMP=@T_STAMP WHERE TDDC_TIMESTAMP IS NULL'));
    PREPARE UPDATE_TEMP_DEPOSIT_DEDUCTIONCONFIGURATIONSTMT FROM @UPDATE_TEMP_DEPOSIT_DEDUCTIONCONFIGURATION;
    EXECUTE UPDATE_TEMP_DEPOSIT_DEDUCTIONCONFIGURATIONSTMT;

-- QUERY FOR DROP DEPOSIT_DEDUCTION_CONFIGURATION
	SET @DROP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE DROP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @DROP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE DROP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;

-- QUERY FOR CREATE DEPOSIT_DEDUCTION_CONFIGURATION
	SET @CREATE_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION(
	DDC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	DDC_DATA TEXT NOT NULL,
	DDC_SUB_DATA TEXT NULL,
	DDC_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	DDC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(DDC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @CREATE_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE CREATE_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;

-- QUERY FOR INSERT VALUES IN DEPOSIT_DEDUCTION_CONFIGURATION TABLE
	SET @INSERT_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION(CGN_ID,DDC_DATA,DDC_SUB_DATA,DDC_INITIALIZE_FLAG,ULD_ID,DDC_TIMESTAMP)
	(SELECT TDDCN.CGN_ID,TDDCN.TDDC_DATA,TDDCN.TDDC_SUB_DATA,TDDCN.TDDC_INITIALIZE_FLAG,ULD.ULD_ID,TDDCN.TDDC_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION  TDDCN , ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TDDCN.TDDC_USERSTAMP)'));
	PREPARE INSERT_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @INSERT_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE INSERT_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;

-- QUERY FOR DROP TEMP_DEPOSIT_DEDUCTION_CONFIGURATION
	SET @DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT FROM @DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION;
    EXECUTE DROP_TEMP_DEPOSIT_DEDUCTION_CONFIGURATION_STMT;
	
	SET END_TIME = (SELECT CURTIME());
	
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

-- COUNT CHECKING FOR DEPOSIT_DEDUCTION_CONFIGURATION DETAILS
	SET @COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(DATA) INTO @COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.DATA IS NOT NULL AND CGN_ID IN(30,42)'));
	PREPARE COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT_STMT FROM @COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT;
    EXECUTE COUNTDEPOSITDEDUCTIONCONFIGURATION_SQL_FORMAT_STMT;

-- COUNT SPLITING FOR DEPOSIT_DEDUCTION_CONFIGURATION DETAILS
    SET @COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.DEPOSIT_DEDUCTION_CONFIGURATION'));
	PREPARE COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION_STMT FROM @COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION;
    EXECUTE COUNT_SPLITING_DEPOSITDEDUCTIONCONFIGURATION_STMT;
	SET @REJECTION_COUNT=(@COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION);

-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION');
	
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION');
	
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	
	SET @DUR=DURATION;

-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_DEPOSIT_DEDUCTION_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='DEPOSIT_DEDUCTION_CONFIGURATION';	
	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_DEPOSIT_DEDUCTION_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);     	   		

-- 8.QUERY FOR CREATE TEMP_ERROR_MESSAGE_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_TEMP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION'));
	PREPARE DROP_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @DROP_TEMP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE DROP_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT;	
	
	SET @CREATE_TEMP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION(
	TEMC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	TEMC_CODE INTEGER NOT NULL,
	TEMC_DATA TEXT NOT NULL,
	TEMC_USERSTAMP VARCHAR(50) NULL,
	TEMC_TIMESTAMP VARCHAR(50),
	PRIMARY KEY(TEMC_ID),
	FOREIGN KEY(CNP_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION_PROFILE(CNP_ID))'));
	PREPARE CREATE_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @CREATE_TEMP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE CREATE_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT;

--  QUERY FOR INSERT VALUES IN TEMP_ERROR_MESSAGE_CONFIGURATION TABLE	
	SET @INSERT_TEMP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION(CNP_ID,TEMC_CODE,TEMC_DATA,TEMC_USERSTAMP,TEMC_TIMESTAMP)
	(SELECT CSQL.CNP_ID,CSQL.EMC_CODE,CSQL.EMC_DATA,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',SOURCESCHEMA,'.CONFIG_SCDB_FORMAT TCSCDB ON CSQL.EMC_DATA = TCSCDB.CF_DATA WHERE CSQL.EMC_DATA IS NOT NULL)'));
    PREPARE INSERT_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @INSERT_TEMP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE INSERT_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT;

--  QUERY FOR UPDATE VALUES IN TEMP_ERROR_MESSAGE_CONFIGURATION TABLE		
	SET @UPDATE_TEMP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION SET TEMC_USERSTAMP=''expatsintegrated@gmail.com'' WHERE TEMC_USERSTAMP IS NULL'));	
    PREPARE UPDATE_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @UPDATE_TEMP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE UPDATE_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT;
	
	SET @TSTAMP = (SELECT CONCAT('SELECT DISTINCT(TIMESTAMP) INTO @T_STAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID=2'));
	PREPARE TSTAMPSTMT FROM @TSTAMP;
	EXECUTE TSTAMPSTMT;
	
-- QUERY FOR UPDATE TEMP_ERROR_MESSAGE_CONFIGURATION
	SET @UPDATE_TEMP_ERROR_MESSAGECONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION SET TEMC_TIMESTAMP=@T_STAMP WHERE TEMC_TIMESTAMP IS NULL'));
    PREPARE UPDATE_TEMP_ERROR_MESSAGECONFIGURATIONSTMT FROM @UPDATE_TEMP_ERROR_MESSAGECONFIGURATION;
    EXECUTE UPDATE_TEMP_ERROR_MESSAGECONFIGURATIONSTMT;

-- QUERY FOR DROP ERROR_MESSAGE_CONFIGURATION	
	SET @DROP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION'));
	PREPARE DROP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @DROP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE DROP_ERROR_MESSAGE_CONFIGURATION_STMT;

-- QUERY FOR CREATE ERROR_MESSAGE_CONFIGURATION	
	SET @CREATE_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION(
	EMC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CNP_ID INTEGER NOT NULL,
	EMC_CODE INTEGER NOT NULL,
	EMC_DATA TEXT NOT NULL,
	ULD_ID INTEGER(2) NOT NULL,
	EMC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(EMC_ID),
	FOREIGN KEY(CNP_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION_PROFILE(CNP_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_ERROR_MESSAGE_CONFIGURATION_STMT FROM @CREATE_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE CREATE_ERROR_MESSAGE_CONFIGURATION_STMT;

-- QUERY FOR INSERT VALUES IN ERROR_MESSAGE_CONFIGURATION TABLE
	SET @INSERT_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION(CNP_ID,EMC_CODE,EMC_DATA,ULD_ID,EMC_TIMESTAMP)
	(SELECT TEMC.CNP_ID,TEMC.TEMC_CODE,TEMC.TEMC_DATA,ULD.ULD_ID,TEMC.TEMC_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION TEMC,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TEMC.TEMC_USERSTAMP)'));
	PREPARE INSERT_ERROR_MESSAGE_CONFIGURATION_STMT FROM @INSERT_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE INSERT_ERROR_MESSAGE_CONFIGURATION_STMT;

-- QUERY FOR DROP TEMP_ERROR_MESSAGE_CONFIGURATION	
    SET @DROP_TEMP_ERROR_MESSAGE_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_ERROR_MESSAGE_CONFIGURATION'));
	PREPARE DROP_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT FROM @DROP_TEMP_ERROR_MESSAGE_CONFIGURATION;
    EXECUTE DROP_TEMP_ERROR_MESSAGE_CONFIGURATION_STMT;
	
	SET END_TIME = (SELECT CURTIME());
	
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

-- COUNT CHECKING FOR ERROR_MESSAGE_CONFIGURATION DETAILS
	SET @COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT=(SELECT CONCAT('SELECT COUNT(EMC_DATA) INTO @COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',SOURCESCHEMA,'.CONFIG_SCDB_FORMAT TCSCDB ON CSQL.EMC_DATA = TCSCDB.CF_DATA WHERE CSQL.EMC_DATA IS NOT NULL'));
	PREPARE COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT_STMT FROM @COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT;
    EXECUTE COUNTERRORMESSAGECONFIGURATION_SQL_FORMAT_STMT;

-- COUNT SPLITING FOR ERROR_MESSAGE_CONFIGURATION DETAILS
    SET @COUNT_SPLITING_ERRORMESSAGECONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.ERROR_MESSAGE_CONFIGURATION'));
	PREPARE COUNT_SPLITING_ERRORMESSAGECONFIGURATION_STMT FROM @COUNT_SPLITING_ERRORMESSAGECONFIGURATION;
    EXECUTE COUNT_SPLITING_ERRORMESSAGECONFIGURATION_STMT;
    
	SET @REJECTION_COUNT=(@COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION);

-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERROR_MESSAGE_CONFIGURATION');
	
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERROR_MESSAGE_CONFIGURATION');
	
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	
	SET @DUR=DURATION;

-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_ERROR_MESSAGE_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ERROR_MESSAGE_CONFIGURATION';	
	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_ERROR_MESSAGE_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);   	
	
-- 9.QUERY FOR CREATE TRIGGER_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_TEMP_TRIGGER_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_TRIGGER_CONFIGURATION'));
	PREPARE DROP_TEMP_TRIGGER_CONFIGURATIONSTMT FROM @DROP_TEMP_TRIGGER_CONFIGURATION;
    EXECUTE DROP_TEMP_TRIGGER_CONFIGURATIONSTMT;
	
	SET @CREATE_TEMP_TRIGGER_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_TRIGGER_CONFIGURATION(
	TTC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TTC_DATA	TEXT NOT NULL,
	TTC_INITIALIZE_FLAG CHAR(1) NULL,
	TULD_ID INTEGER(2) NOT NULL,
	TTC_TIMESTAMP VARCHAR(50),
	PRIMARY KEY(TTC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID))'));
	PREPARE CREATE_TEMP_TRIGGER_CONFIGURATIONSTMT FROM @CREATE_TEMP_TRIGGER_CONFIGURATION;
    EXECUTE CREATE_TEMP_TRIGGER_CONFIGURATIONSTMT;
	
	SET @INSERT_TEMP_TRIGGER_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_TRIGGER_CONFIGURATION
	(CGN_ID,TTC_DATA,TTC_INITIALIZE_FLAG,TULD_ID,TTC_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,TCSCDB.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA ,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN(31,74) AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID = CSQL.USER_STAMP)'));
    PREPARE INSERT_TEMP_TRIGGER_CONFIGURATIONSTMT FROM @INSERT_TEMP_TRIGGER_CONFIGURATION;
    EXECUTE INSERT_TEMP_TRIGGER_CONFIGURATIONSTMT;
	
	SET @TSTAMP = (SELECT CONCAT('SELECT DISTINCT(TIMESTAMP) INTO @T_STAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID=2'));
	PREPARE TSTAMPSTMT FROM @TSTAMP;
	EXECUTE TSTAMPSTMT;
	
-- QUERY FOR UPDATE TEMP_TRIGGER_CONFIGURATION
	SET @UPDATE_TEMP_TRIGGER_CONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_TRIGGER_CONFIGURATION SET TTC_TIMESTAMP=@T_STAMP WHERE TTC_TIMESTAMP IS NULL'));
    PREPARE UPDATE_TEMP_TRIGGER_CONFIGURATIONSTMT FROM @UPDATE_TEMP_TRIGGER_CONFIGURATION;
    EXECUTE UPDATE_TEMP_TRIGGER_CONFIGURATIONSTMT;
	
	SET @DROP_TRIGGER_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION'));
	PREPARE DROP_TRIGGER_CONFIGURATION_STMT FROM @DROP_TRIGGER_CONFIGURATION;
    EXECUTE DROP_TRIGGER_CONFIGURATION_STMT;
	
	SET @CREATE_TRIGGER_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION(
	TC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TC_DATA	TEXT NOT NULL,
	TC_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	TC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(TC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_TRIGGER_CONFIGURATION_STMT FROM @CREATE_TRIGGER_CONFIGURATION;
    EXECUTE CREATE_TRIGGER_CONFIGURATION_STMT;

-- QUERY FOR INSERT VALUES IN TRIGGER_CONFIGURATION TABLE
	SET @INSERT_TRIGGER_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION(CGN_ID,TC_DATA,TC_INITIALIZE_FLAG,ULD_ID,TC_TIMESTAMP)
	(SELECT CGN_ID,TTC_DATA,TTC_INITIALIZE_FLAG,TULD_ID,TTC_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_TRIGGER_CONFIGURATION)'));
    PREPARE INSERT_TRIGGER_CONFIGURATION_STMT FROM @INSERT_TRIGGER_CONFIGURATION;
    EXECUTE INSERT_TRIGGER_CONFIGURATION_STMT;
	
	SET @DROP_TEMP_TRIGGERCONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_TRIGGER_CONFIGURATION'));
	PREPARE DROP_TEMP_TRIGGERCONFIGURATIONSTMT FROM @DROP_TEMP_TRIGGERCONFIGURATION;
    EXECUTE DROP_TEMP_TRIGGERCONFIGURATIONSTMT;
	
	SET END_TIME = (SELECT CURTIME());
	
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

-- COUNT CHECKING FOR TRIGGER_CONFIGURATION DETAILS
	SET @COUNT_TRIGGERCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(CSQL.DATA) INTO @COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID IN(31,74) AND CSQL.DATA IS NOT NULL'));
	PREPARE COUNT_TRIGGERCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_TRIGGERCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_TRIGGERCONFIGURATIONSQLFORMAT_STMT;
	
	SET @COUNT_SPLITING_TRIGGERCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_TRIGGER_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.TRIGGER_CONFIGURATION'));
	PREPARE COUNT_SPLITING_TRIGGERCONFIGURATION_STMT FROM @COUNT_SPLITING_TRIGGERCONFIGURATION;
    EXECUTE COUNT_SPLITING_TRIGGERCONFIGURATION_STMT;
	
	SET @REJECTION_COUNT=(@COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_TRIGGER_CONFIGURATION);

-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='TRIGGER_CONFIGURATION');
	
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='TRIGGER_CONFIGURATION');
	
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	
	SET @DUR=DURATION;
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_TRIGGER_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='TRIGGER_CONFIGURATION';	
	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES(@POSTAPID,@COUNT_SPLITING_TRIGGER_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);
	
-- 10.QUERY FOR CREATE TEMP_NATIONALITY_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_TEMP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION'));
	PREPARE DROP_TEMP_NATIONALITY_CONFIGURATION_STMT FROM @DROP_TEMP_NATIONALITY_CONFIGURATION;
    EXECUTE DROP_TEMP_NATIONALITY_CONFIGURATION_STMT;
	
	SET @CREATE_TEMP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION(
	TNC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	TNC_DATA TEXT NOT NULL,
	TNC_INITIALIZE_FLAG	CHAR(1) NULL,
	TNC_USERSTAMP VARCHAR(50) NULL,
	TNC_TIMESTAMP VARCHAR(50),
	PRIMARY KEY(TNC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID))'));
	PREPARE CREATE_TEMP_NATIONALITY_CONFIGURATION_STMT FROM @CREATE_TEMP_NATIONALITY_CONFIGURATION;
    EXECUTE CREATE_TEMP_NATIONALITY_CONFIGURATION_STMT;

--  QUERY FOR INSERT VALUES IN TEMP_NATIONALITY_CONFIGURATION TABLE	
	SET @INSERT_TEMP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION(CGN_ID,TNC_DATA,TNC_INITIALIZE_FLAG,TNC_USERSTAMP,TNC_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,TCSCDB.USERSTAMP,TCSCDB.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID=15 AND CSQL.DATA IS NOT NULL)'));
    PREPARE INSERT_TEMP_NATIONALITY_CONFIGURATION_STMT FROM @INSERT_TEMP_NATIONALITY_CONFIGURATION;
    EXECUTE INSERT_TEMP_NATIONALITY_CONFIGURATION_STMT;

--  QUERY FOR UPDATE VALUES IN TEMP_NATIONALITY_CONFIGURATION TABLE		
	SET @UPDATE_TEMP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION SET TNC_USERSTAMP=''expatsintegrated@gmail.com'' WHERE TNC_USERSTAMP IS NULL'));	
    PREPARE UPDATE_TEMP_NATIONALITY_CONFIGURATION_STMT FROM @UPDATE_TEMP_NATIONALITY_CONFIGURATION;
    EXECUTE UPDATE_TEMP_NATIONALITY_CONFIGURATION_STMT;
	
	SET @TSTAMP = (SELECT CONCAT('SELECT DISTINCT(TIMESTAMP) INTO @T_STAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID=2'));
	PREPARE TSTAMPSTMT FROM @TSTAMP;
	EXECUTE TSTAMPSTMT;
	
-- QUERY FOR UPDATE TEMP_NATIONALITY_CONFIGURATION
	SET @UPDATE_TEMP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('UPDATE ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION SET TNC_TIMESTAMP=@T_STAMP WHERE TNC_TIMESTAMP IS NULL'));
    PREPARE UPDATE_TEMP_NATIONALITY_CONFIGURATIONSTMT FROM @UPDATE_TEMP_NATIONALITY_CONFIGURATION;
    EXECUTE UPDATE_TEMP_NATIONALITY_CONFIGURATIONSTMT;

-- QUERY FOR DROP TEMP_NATIONALITY_CONFIGURATION	
	SET @DROP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION'));
	PREPARE DROP_NATIONALITY_CONFIGURATION_STMT FROM @DROP_NATIONALITY_CONFIGURATION;
    EXECUTE DROP_NATIONALITY_CONFIGURATION_STMT;

-- QUERY FOR CREATE TEMP_NATIONALITY_CONFIGURATION	
	SET @CREATE_NATIONALITY_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION(
	NC_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	NC_DATA	TEXT NOT NULL,
	NC_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	NC_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(NC_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_NATIONALITY_CONFIGURATION_STMT FROM @CREATE_NATIONALITY_CONFIGURATION;
    EXECUTE CREATE_NATIONALITY_CONFIGURATION_STMT;

-- QUERY FOR INSERT VALUES IN NATIONALITY_CONFIGURATION TABLE
	SET @INSERT_NATIONALITY_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION(CGN_ID,NC_DATA,NC_INITIALIZE_FLAG,ULD_ID,NC_TIMESTAMP)
	(SELECT TNCN.CGN_ID,TNCN.TNC_DATA,TNCN.TNC_INITIALIZE_FLAG,ULD.ULD_ID,TNCN.TNC_TIMESTAMP FROM ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION TNCN,',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE ULD.ULD_LOGINID=TNCN.TNC_USERSTAMP)'));
    PREPARE INSERT_NATIONALITY_CONFIGURATION_STMT FROM @INSERT_NATIONALITY_CONFIGURATION;
    EXECUTE INSERT_NATIONALITY_CONFIGURATION_STMT;

-- QUERY FOR DROP TEMP_NATIONALITY_CONFIGURATION	
	SET @DROP_TEMP_NATIONALITY_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.TEMP_NATIONALITY_CONFIGURATION'));
	PREPARE DROP_TEMP_NATIONALITY_CONFIGURATION_STMT FROM @DROP_TEMP_NATIONALITY_CONFIGURATION;
    EXECUTE DROP_TEMP_NATIONALITY_CONFIGURATION_STMT;
	
	SET END_TIME = (SELECT CURTIME());
	
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

-- COUNT CHECKING FOR NATIONALITY_CONFIGURATION DETAILS
	SET @COUNT_NATIONALITYCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(CSQL.DATA) INTO @COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL  LEFT JOIN ',DESTINATIONSCHEMA,'.TEMP_CONFIG_SCDB_FORMAT TCSCDB ON CSQL.DATA = TCSCDB.CF_DATA WHERE CSQL.CGN_ID=15 AND CSQL.DATA IS NOT NULL'));
	PREPARE COUNT_NATIONALITYCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_NATIONALITYCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_NATIONALITYCONFIGURATIONSQLFORMAT_STMT;

-- COUNT SPLITING FOR NATIONALITY_CONFIGURATION DETAILS
	SET @COUNT_SPLITING_NATIONALITYCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_NATIONALITY_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.NATIONALITY_CONFIGURATION'));
	PREPARE COUNT_SPLITING_NATIONALITYCONFIGURATION_STMT FROM @COUNT_SPLITING_NATIONALITYCONFIGURATION;
    EXECUTE COUNT_SPLITING_NATIONALITYCONFIGURATION_STMT;
	
	SET @REJECTION_COUNT=(@COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_NATIONALITY_CONFIGURATION);

-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='NATIONALITY_CONFIGURATION');
	
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='NATIONALITY_CONFIGURATION');
	
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	
	SET @DUR=DURATION;

-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_NATIONALITY_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='NATIONALITY_CONFIGURATION';	

	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_NATIONALITY_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);     	

-- 11.QUERY FOR CREATE ERM_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_ERM_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION'));
	PREPARE DROP_ERM_CONFIGURATION_STMT FROM @DROP_ERM_CONFIGURATION;
    EXECUTE DROP_ERM_CONFIGURATION_STMT;
	
	SET @CREATE_ERM_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION(
	ERMCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	ERMCN_DATA TEXT NOT NULL,
	ERMCN_INITIALIZE_FLAG CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	ERMCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(ERMCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_ERM_CONFIGURATION_STMT FROM @CREATE_ERM_CONFIGURATION;
    EXECUTE CREATE_ERM_CONFIGURATION_STMT;

-- QUERY FOR INSERT VALUES IN ERM_CONFIGURATION TABLE
	SET @INSERT_ERM_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION(CGN_ID,ERMCN_DATA,ERMCN_INITIALIZE_FLAG,ULD_ID,ERMCN_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID=55 AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP)'));
	PREPARE INSERT_ERM_CONFIGURATION_STMT FROM @INSERT_ERM_CONFIGURATION;
    EXECUTE INSERT_ERM_CONFIGURATION_STMT;
	
	SET END_TIME = (SELECT CURTIME());
	
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

-- COUNT CHECKING FOR ERM_CONFIGURATION DETAILS
	SET @COUNT_ERMCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(DATA) INTO @COUNT_ERM_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID=55 AND DATA IS NOT NULL'));
	PREPARE COUNT_ERMCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_ERMCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_ERMCONFIGURATIONSQLFORMAT_STMT;

-- COUNT SPLITING FOR ERM_CONFIGURATION DETAILS
	SET @COUNT_SPLITING_ERMCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_ERM_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.ERM_CONFIGURATION'));
	PREPARE COUNT_SPLITING_ERMCONFIGURATION_STMT FROM @COUNT_SPLITING_ERMCONFIGURATION;
    EXECUTE COUNT_SPLITING_ERMCONFIGURATION_STMT;
	
	SET @REJECTION_COUNT=(@COUNT_ERM_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_ERM_CONFIGURATION);

-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
    SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='ERM_CONFIGURATION');
	
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='ERM_CONFIGURATION');
	
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	
	SET @DUR=DURATION;
-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_ERM_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='ERM_CONFIGURATION';	
	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_ERM_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);     	   		
    	
-- 12.QUERY FOR CREATE BANKTT_CONFIGURATION
	SET START_TIME = (SELECT CURTIME());
	
	SET @DROP_BANKTT_CONFIGURATION=(SELECT CONCAT('DROP TABLE IF EXISTS ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION'));
	PREPARE DROP_BANKTT_CONFIGURATION_STMT FROM @DROP_BANKTT_CONFIGURATION;
    EXECUTE DROP_BANKTT_CONFIGURATION_STMT;
	
	SET @CREATE_BANKTT_CONFIGURATION=(SELECT CONCAT('CREATE TABLE ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION(
	BCN_ID INTEGER NOT NULL AUTO_INCREMENT,
	CGN_ID INTEGER NOT NULL,
	BCN_DATA TEXT NOT NULL,
	BCN_INITIALIZE_FLAG	CHAR(1) NULL,
	ULD_ID INTEGER(2) NOT NULL,
	BCN_TIMESTAMP TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY(BCN_ID),
	FOREIGN KEY(CGN_ID) REFERENCES ',DESTINATIONSCHEMA,'.CONFIGURATION(CGN_ID),
	FOREIGN KEY(ULD_ID) REFERENCES ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS(ULD_ID))'));
	PREPARE CREATE_BANKTT_CONFIGURATION_STMT FROM @CREATE_BANKTT_CONFIGURATION;
    EXECUTE CREATE_BANKTT_CONFIGURATION_STMT;

-- QUERY FOR INSERT VALUES IN BANKTT_CONFIGURATION TABLE
	SET @INSERT_BANKTT_CONFIGURATION=(SELECT CONCAT('INSERT INTO ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION(CGN_ID,BCN_DATA,BCN_INITIALIZE_FLAG,ULD_ID,BCN_TIMESTAMP)
	(SELECT CSQL.CGN_ID,CSQL.DATA,CSQL.INITIALIZE_FLAG,ULD.ULD_ID,CSQL.TIMESTAMP FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT CSQL, ',DESTINATIONSCHEMA,'.USER_LOGIN_DETAILS ULD WHERE CSQL.CGN_ID IN (56,69,70,71,72) AND CSQL.DATA IS NOT NULL AND ULD.ULD_LOGINID=CSQL.USER_STAMP)'));
	PREPARE INSERT_BANKTT_CONFIGURATION_STMT FROM @INSERT_BANKTT_CONFIGURATION;
    EXECUTE INSERT_BANKTT_CONFIGURATION_STMT;
	
	SET END_TIME = (SELECT CURTIME());
	
	SET DURATION=(SELECT TIMEDIFF(END_TIME,START_TIME));

-- COUNT CHECKING FOR BANKTT_CONFIGURATION DETAILS
	SET @COUNT_BANKTTCONFIGURATIONSQLFORMAT=(SELECT CONCAT('SELECT COUNT(DATA) INTO @COUNT_BANKTT_CONFIGURATION_SQL_FORMAT FROM ',SOURCESCHEMA,'.CONFIG_SQL_FORMAT WHERE CGN_ID IN (56,69,70,71,72) AND DATA IS NOT NULL'));
	PREPARE COUNT_BANKTTCONFIGURATIONSQLFORMAT_STMT FROM @COUNT_BANKTTCONFIGURATIONSQLFORMAT;
    EXECUTE COUNT_BANKTTCONFIGURATIONSQLFORMAT_STMT;

-- COUNT SPLITING FOR BANKTT_CONFIGURATION DETAILS
	SET @COUNT_SPLITING_BANKTTCONFIGURATION=(SELECT CONCAT('SELECT COUNT(*) INTO @COUNT_SPLITING_BANKTT_CONFIGURATION FROM ',DESTINATIONSCHEMA,'.BANKTT_CONFIGURATION'));
	PREPARE COUNT_SPLITING_BANKTTCONFIGURATION_STMT FROM @COUNT_SPLITING_BANKTTCONFIGURATION;
    EXECUTE COUNT_SPLITING_BANKTTCONFIGURATION_STMT;
	
	SET @REJECTION_COUNT=(@COUNT_BANKTT_CONFIGURATION_SQL_FORMAT-@COUNT_SPLITING_BANKTT_CONFIGURATION);     

-- QUERY FOR INSERT VALUES IN POST_AUDIT_HISTORY TABLE
	SET @POSTAPID= (SELECT POSTAP_ID FROM POST_AUDIT_PROFILE WHERE POSTAP_DATA='BANKTT_CONFIGURATION');
	
	SET @PREASPID = (SELECT PREASP_ID FROM PRE_AUDIT_SUB_PROFILE WHERE PREASP_DATA='BANKTT_CONFIGURATION');
	
	SET @PREAMPID = (SELECT PREAMP_ID FROM PRE_AUDIT_MAIN_PROFILE WHERE PREAMP_DATA='CONFIGURATION');
	
	SET @DUR=DURATION;

-- QUERY FOR UPDATE VALUES IN PRE_AUDIT_SUB_PROFILE TABLE
	UPDATE PRE_AUDIT_SUB_PROFILE SET PREASP_NO_OF_REC=@COUNT_BANKTT_CONFIGURATION_SQL_FORMAT WHERE PREASP_DATA='BANKTT_CONFIGURATION';	
	
	INSERT INTO POST_AUDIT_HISTORY(POSTAP_ID,POSTAH_NO_OF_REC,PREASP_ID,PREAMP_ID,POSTAH_DURATION,POSTAH_NO_OF_REJ,ULD_ID)VALUES
	(@POSTAPID,@COUNT_SPLITING_BANKTT_CONFIGURATION,@PREASPID,@PREAMPID,@DUR,@REJECTION_COUNT,@ULDID);     	   	
	
	SET FOREIGN_KEY_CHECKS=1;
	COMMIT;
END;

CALL SP_MIG_CONFIG_INSERT2(SOURCESCHEMA,DESTINATIONSCHEMA,MIGUSERSTAMP);